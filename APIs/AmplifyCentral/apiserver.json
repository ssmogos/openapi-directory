{
  "openapi" : "3.0.3",
  "info" : {
    "title" : "AMPLIFY Central API v0.30",
    "version" : "0.30.0",
    "contact" : {
      "name" : "Axway Support",
      "email" : "support@axway.com"
    },
    "license" : {
      "name" : "Copyright Axway 2020. All rights reserved."
    },
    "description" : "APIs to manage AMPLIFY Central configuration resources.",
    "x-api-id" : "a68e7c9b-98bc-519d-9831-ee19d57a2613",
    "x-audience" : "axway-customer"
  },
  "tags" : [ {
    "name" : "definitions",
    "description" : "Resources for group definitions"
  }, {
    "name" : "management",
    "description" : "Resources for group management"
  } ],
  "security" : [ {
    "token" : [ ]
  } ],
  "servers" : [ {
    "url" : "https://apicentral.axway.com/apis"
  } ],
  "paths" : {
    "/management/v1alpha1/environments/{environmentName}/edgedataplanes" : {
      "parameters" : [ {
        "name" : "environmentName",
        "description" : "Name of the Environment",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves EdgeDataplane for version v1alpha1 from group management in scope Environment",
        "description" : "Retrieves EdgeDataplane for version v1alpha1 from group management in scope Environment",
        "operationId" : "list_management_v1alpha1_Environment_EdgeDataplane",
        "tags" : [ "management" ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/pageNumberParam"
        }, {
          "$ref" : "#/components/parameters/pageSizeParam"
        }, {
          "$ref" : "#/components/parameters/sortParam"
        }, {
          "$ref" : "#/components/parameters/queryParam"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.EdgeDataplane resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List all resources of type EdgeDataplane for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/management.v1alpha1.EdgeDataplane"
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "post" : {
        "summary" : "Create EdgeDataplane for version v1alpha1 from group management in scope Environment",
        "description" : "Create EdgeDataplane for version v1alpha1 from group management in scope Environment",
        "operationId" : "create_management_v1alpha1_Environment_EdgeDataplane",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.EdgeDataplane resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.EdgeDataplane"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Create a new EdgeDataplane for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.EdgeDataplane"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "409" : {
            "$ref" : "#/components/responses/Conflict"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/environments/{environmentName}/edgedataplanes/{name}" : {
      "parameters" : [ {
        "name" : "environmentName",
        "description" : "Name of the Environment",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the EdgeDataplane",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves EdgeDataplane for version v1alpha1 from group management in scope Environment",
        "description" : "Retrieves EdgeDataplane for version v1alpha1 from group management in scope Environment",
        "operationId" : "read_management_v1alpha1_Environment_EdgeDataplane",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.EdgeDataplane resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read EdgeDataplane for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.EdgeDataplane"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "delete" : {
        "summary" : "Remove EdgeDataplane for version v1alpha1 from group management in scope Environment",
        "description" : "Remove EdgeDataplane for version v1alpha1 from group management in scope Environment",
        "operationId" : "remove_management_v1alpha1_Environment_EdgeDataplane",
        "tags" : [ "management" ],
        "responses" : {
          "202" : {
            "description" : "Accepted removing EdgeDataplane for version v1alpha1 from group management in scope Environment. Dependent resources found, clean up will finish once all dependent resources have been removed"
          },
          "204" : {
            "description" : "Removed EdgeDataplane for version v1alpha1 from group management in scope Environment"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update EdgeDataplane for version v1alpha1 from group management in scope Environment",
        "description" : "Update EdgeDataplane for version v1alpha1 from group management in scope Environment",
        "operationId" : "update_management_v1alpha1_Environment_EdgeDataplane",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.EdgeDataplane resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.EdgeDataplane"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Update EdgeDataplane for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.EdgeDataplane"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/environments/{environmentName}/edgedataplanes/{name}/{extension}" : {
      "parameters" : [ {
        "name" : "environmentName",
        "description" : "Name of the Environment",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "name" : "extension",
        "description" : "Name of the extension",
        "in" : "path",
        "schema" : {
          "type" : "string",
          "pattern" : "x-.*"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the EdgeDataplane",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves Extension resource data of EdgeDataplane for version v1alpha1 from group management in scope Environment",
        "description" : "Retrieves Extension resource data of EdgeDataplane for version v1alpha1 from group management in scope Environment",
        "operationId" : "read_management_v1alpha1_Environment_EdgeDataplane_extension",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.EdgeDataplane resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read Extension resource data of EdgeDataplane for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.EdgeDataplane"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update Extension resource data of EdgeDataplane for version v1alpha1 from group management in scope Environment",
        "description" : "Update Extension resource data of EdgeDataplane for version v1alpha1 from group management in scope Environment",
        "operationId" : "update_management_v1alpha1_Environment_EdgeDataplane_extension",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.EdgeDataplane resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.EdgeDataplane"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Updated Extension resource data of EdgeDataplane for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.EdgeDataplane"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/environments/{environmentName}/edgediscoveryagents" : {
      "parameters" : [ {
        "name" : "environmentName",
        "description" : "Name of the Environment",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves EdgeDiscoveryAgent for version v1alpha1 from group management in scope Environment",
        "description" : "Retrieves EdgeDiscoveryAgent for version v1alpha1 from group management in scope Environment",
        "operationId" : "list_management_v1alpha1_Environment_EdgeDiscoveryAgent",
        "tags" : [ "management" ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/pageNumberParam"
        }, {
          "$ref" : "#/components/parameters/pageSizeParam"
        }, {
          "$ref" : "#/components/parameters/sortParam"
        }, {
          "$ref" : "#/components/parameters/queryParam"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.EdgeDiscoveryAgent resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, status, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List all resources of type EdgeDiscoveryAgent for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/management.v1alpha1.EdgeDiscoveryAgent"
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "post" : {
        "summary" : "Create EdgeDiscoveryAgent for version v1alpha1 from group management in scope Environment",
        "description" : "Create EdgeDiscoveryAgent for version v1alpha1 from group management in scope Environment",
        "operationId" : "create_management_v1alpha1_Environment_EdgeDiscoveryAgent",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.EdgeDiscoveryAgent resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, status, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.EdgeDiscoveryAgent"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Create a new EdgeDiscoveryAgent for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.EdgeDiscoveryAgent"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "409" : {
            "$ref" : "#/components/responses/Conflict"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/environments/{environmentName}/edgediscoveryagents/{name}" : {
      "parameters" : [ {
        "name" : "environmentName",
        "description" : "Name of the Environment",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the EdgeDiscoveryAgent",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves EdgeDiscoveryAgent for version v1alpha1 from group management in scope Environment",
        "description" : "Retrieves EdgeDiscoveryAgent for version v1alpha1 from group management in scope Environment",
        "operationId" : "read_management_v1alpha1_Environment_EdgeDiscoveryAgent",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.EdgeDiscoveryAgent resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, status, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read EdgeDiscoveryAgent for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.EdgeDiscoveryAgent"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "delete" : {
        "summary" : "Remove EdgeDiscoveryAgent for version v1alpha1 from group management in scope Environment",
        "description" : "Remove EdgeDiscoveryAgent for version v1alpha1 from group management in scope Environment",
        "operationId" : "remove_management_v1alpha1_Environment_EdgeDiscoveryAgent",
        "tags" : [ "management" ],
        "responses" : {
          "202" : {
            "description" : "Accepted removing EdgeDiscoveryAgent for version v1alpha1 from group management in scope Environment. Dependent resources found, clean up will finish once all dependent resources have been removed"
          },
          "204" : {
            "description" : "Removed EdgeDiscoveryAgent for version v1alpha1 from group management in scope Environment"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update EdgeDiscoveryAgent for version v1alpha1 from group management in scope Environment",
        "description" : "Update EdgeDiscoveryAgent for version v1alpha1 from group management in scope Environment",
        "operationId" : "update_management_v1alpha1_Environment_EdgeDiscoveryAgent",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.EdgeDiscoveryAgent resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, status, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.EdgeDiscoveryAgent"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Update EdgeDiscoveryAgent for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.EdgeDiscoveryAgent"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/environments/{environmentName}/edgediscoveryagents/{name}/status" : {
      "parameters" : [ {
        "name" : "environmentName",
        "description" : "Name of the Environment",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the EdgeDiscoveryAgent",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves status resource data of EdgeDiscoveryAgent for version v1alpha1 from group management in scope Environment",
        "description" : "Retrieves status resource data of EdgeDiscoveryAgent for version v1alpha1 from group management in scope Environment",
        "operationId" : "read_management_v1alpha1_Environment_EdgeDiscoveryAgent_status",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.EdgeDiscoveryAgent resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read status resource data of EdgeDiscoveryAgent for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.EdgeDiscoveryAgent"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update status resource data of EdgeDiscoveryAgent for version v1alpha1 from group management in scope Environment",
        "description" : "Update status resource data of EdgeDiscoveryAgent for version v1alpha1 from group management in scope Environment",
        "operationId" : "update_management_v1alpha1_Environment_EdgeDiscoveryAgent_status",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.EdgeDiscoveryAgent resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.EdgeDiscoveryAgent"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Updated status resource data of EdgeDiscoveryAgent for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.EdgeDiscoveryAgent"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/environments/{environmentName}/edgediscoveryagents/{name}/{extension}" : {
      "parameters" : [ {
        "name" : "environmentName",
        "description" : "Name of the Environment",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "name" : "extension",
        "description" : "Name of the extension",
        "in" : "path",
        "schema" : {
          "type" : "string",
          "pattern" : "x-.*"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the EdgeDiscoveryAgent",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves Extension resource data of EdgeDiscoveryAgent for version v1alpha1 from group management in scope Environment",
        "description" : "Retrieves Extension resource data of EdgeDiscoveryAgent for version v1alpha1 from group management in scope Environment",
        "operationId" : "read_management_v1alpha1_Environment_EdgeDiscoveryAgent_extension",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.EdgeDiscoveryAgent resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read Extension resource data of EdgeDiscoveryAgent for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.EdgeDiscoveryAgent"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update Extension resource data of EdgeDiscoveryAgent for version v1alpha1 from group management in scope Environment",
        "description" : "Update Extension resource data of EdgeDiscoveryAgent for version v1alpha1 from group management in scope Environment",
        "operationId" : "update_management_v1alpha1_Environment_EdgeDiscoveryAgent_extension",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.EdgeDiscoveryAgent resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.EdgeDiscoveryAgent"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Updated Extension resource data of EdgeDiscoveryAgent for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.EdgeDiscoveryAgent"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/environments/{environmentName}/edgetraceabilityagents" : {
      "parameters" : [ {
        "name" : "environmentName",
        "description" : "Name of the Environment",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves EdgeTraceabilityAgent for version v1alpha1 from group management in scope Environment",
        "description" : "Retrieves EdgeTraceabilityAgent for version v1alpha1 from group management in scope Environment",
        "operationId" : "list_management_v1alpha1_Environment_EdgeTraceabilityAgent",
        "tags" : [ "management" ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/pageNumberParam"
        }, {
          "$ref" : "#/components/parameters/pageSizeParam"
        }, {
          "$ref" : "#/components/parameters/sortParam"
        }, {
          "$ref" : "#/components/parameters/queryParam"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.EdgeTraceabilityAgent resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, status, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List all resources of type EdgeTraceabilityAgent for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/management.v1alpha1.EdgeTraceabilityAgent"
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "post" : {
        "summary" : "Create EdgeTraceabilityAgent for version v1alpha1 from group management in scope Environment",
        "description" : "Create EdgeTraceabilityAgent for version v1alpha1 from group management in scope Environment",
        "operationId" : "create_management_v1alpha1_Environment_EdgeTraceabilityAgent",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.EdgeTraceabilityAgent resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, status, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.EdgeTraceabilityAgent"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Create a new EdgeTraceabilityAgent for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.EdgeTraceabilityAgent"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "409" : {
            "$ref" : "#/components/responses/Conflict"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/environments/{environmentName}/edgetraceabilityagents/{name}" : {
      "parameters" : [ {
        "name" : "environmentName",
        "description" : "Name of the Environment",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the EdgeTraceabilityAgent",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves EdgeTraceabilityAgent for version v1alpha1 from group management in scope Environment",
        "description" : "Retrieves EdgeTraceabilityAgent for version v1alpha1 from group management in scope Environment",
        "operationId" : "read_management_v1alpha1_Environment_EdgeTraceabilityAgent",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.EdgeTraceabilityAgent resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, status, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read EdgeTraceabilityAgent for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.EdgeTraceabilityAgent"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "delete" : {
        "summary" : "Remove EdgeTraceabilityAgent for version v1alpha1 from group management in scope Environment",
        "description" : "Remove EdgeTraceabilityAgent for version v1alpha1 from group management in scope Environment",
        "operationId" : "remove_management_v1alpha1_Environment_EdgeTraceabilityAgent",
        "tags" : [ "management" ],
        "responses" : {
          "202" : {
            "description" : "Accepted removing EdgeTraceabilityAgent for version v1alpha1 from group management in scope Environment. Dependent resources found, clean up will finish once all dependent resources have been removed"
          },
          "204" : {
            "description" : "Removed EdgeTraceabilityAgent for version v1alpha1 from group management in scope Environment"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update EdgeTraceabilityAgent for version v1alpha1 from group management in scope Environment",
        "description" : "Update EdgeTraceabilityAgent for version v1alpha1 from group management in scope Environment",
        "operationId" : "update_management_v1alpha1_Environment_EdgeTraceabilityAgent",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.EdgeTraceabilityAgent resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, status, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.EdgeTraceabilityAgent"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Update EdgeTraceabilityAgent for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.EdgeTraceabilityAgent"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/environments/{environmentName}/edgetraceabilityagents/{name}/status" : {
      "parameters" : [ {
        "name" : "environmentName",
        "description" : "Name of the Environment",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the EdgeTraceabilityAgent",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves status resource data of EdgeTraceabilityAgent for version v1alpha1 from group management in scope Environment",
        "description" : "Retrieves status resource data of EdgeTraceabilityAgent for version v1alpha1 from group management in scope Environment",
        "operationId" : "read_management_v1alpha1_Environment_EdgeTraceabilityAgent_status",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.EdgeTraceabilityAgent resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read status resource data of EdgeTraceabilityAgent for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.EdgeTraceabilityAgent"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update status resource data of EdgeTraceabilityAgent for version v1alpha1 from group management in scope Environment",
        "description" : "Update status resource data of EdgeTraceabilityAgent for version v1alpha1 from group management in scope Environment",
        "operationId" : "update_management_v1alpha1_Environment_EdgeTraceabilityAgent_status",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.EdgeTraceabilityAgent resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.EdgeTraceabilityAgent"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Updated status resource data of EdgeTraceabilityAgent for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.EdgeTraceabilityAgent"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/environments/{environmentName}/edgetraceabilityagents/{name}/{extension}" : {
      "parameters" : [ {
        "name" : "environmentName",
        "description" : "Name of the Environment",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "name" : "extension",
        "description" : "Name of the extension",
        "in" : "path",
        "schema" : {
          "type" : "string",
          "pattern" : "x-.*"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the EdgeTraceabilityAgent",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves Extension resource data of EdgeTraceabilityAgent for version v1alpha1 from group management in scope Environment",
        "description" : "Retrieves Extension resource data of EdgeTraceabilityAgent for version v1alpha1 from group management in scope Environment",
        "operationId" : "read_management_v1alpha1_Environment_EdgeTraceabilityAgent_extension",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.EdgeTraceabilityAgent resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read Extension resource data of EdgeTraceabilityAgent for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.EdgeTraceabilityAgent"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update Extension resource data of EdgeTraceabilityAgent for version v1alpha1 from group management in scope Environment",
        "description" : "Update Extension resource data of EdgeTraceabilityAgent for version v1alpha1 from group management in scope Environment",
        "operationId" : "update_management_v1alpha1_Environment_EdgeTraceabilityAgent_extension",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.EdgeTraceabilityAgent resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.EdgeTraceabilityAgent"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Updated Extension resource data of EdgeTraceabilityAgent for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.EdgeTraceabilityAgent"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/environments" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves Environment for version v1alpha1 from group management",
        "description" : "Retrieves Environment for version v1alpha1 from group management",
        "operationId" : "list_management_v1alpha1_Environment",
        "tags" : [ "management" ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/pageNumberParam"
        }, {
          "$ref" : "#/components/parameters/pageSizeParam"
        }, {
          "$ref" : "#/components/parameters/sortParam"
        }, {
          "$ref" : "#/components/parameters/queryParam"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.Environment resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List all resources of type Environment for version v1alpha1 from group management",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/management.v1alpha1.Environment"
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "post" : {
        "summary" : "Create Environment for version v1alpha1 from group management",
        "description" : "Create Environment for version v1alpha1 from group management",
        "operationId" : "create_management_v1alpha1_Environment",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.Environment resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.Environment"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Create a new Environment for version v1alpha1 from group management",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.Environment"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "409" : {
            "$ref" : "#/components/responses/Conflict"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/environments/{name}" : {
      "parameters" : [ {
        "name" : "name",
        "description" : "The name of the Environment",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves Environment for version v1alpha1 from group management",
        "description" : "Retrieves Environment for version v1alpha1 from group management",
        "operationId" : "read_management_v1alpha1_Environment",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.Environment resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read Environment for version v1alpha1 from group management",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.Environment"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "delete" : {
        "summary" : "Remove Environment for version v1alpha1 from group management",
        "description" : "Remove Environment for version v1alpha1 from group management",
        "operationId" : "remove_management_v1alpha1_Environment",
        "tags" : [ "management" ],
        "responses" : {
          "202" : {
            "description" : "Accepted removing Environment for version v1alpha1 from group management. Dependent resources found, clean up will finish once all dependent resources have been removed"
          },
          "204" : {
            "description" : "Removed Environment for version v1alpha1 from group management"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update Environment for version v1alpha1 from group management",
        "description" : "Update Environment for version v1alpha1 from group management",
        "operationId" : "update_management_v1alpha1_Environment",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.Environment resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.Environment"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Update Environment for version v1alpha1 from group management",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.Environment"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/environments/{name}/{extension}" : {
      "parameters" : [ {
        "name" : "extension",
        "description" : "Name of the extension",
        "in" : "path",
        "schema" : {
          "type" : "string",
          "pattern" : "x-.*"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the Environment",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves Extension resource data of Environment for version v1alpha1 from group management",
        "description" : "Retrieves Extension resource data of Environment for version v1alpha1 from group management",
        "operationId" : "read_management_v1alpha1_Environment_extension",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.Environment resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read Extension resource data of Environment for version v1alpha1 from group management",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.Environment"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update Extension resource data of Environment for version v1alpha1 from group management",
        "description" : "Update Extension resource data of Environment for version v1alpha1 from group management",
        "operationId" : "update_management_v1alpha1_Environment_extension",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.Environment resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.Environment"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Updated Extension resource data of Environment for version v1alpha1 from group management",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.Environment"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/environments/{environmentName}/apiservices" : {
      "parameters" : [ {
        "name" : "environmentName",
        "description" : "Name of the Environment",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves APIService for version v1alpha1 from group management in scope Environment",
        "description" : "Retrieves APIService for version v1alpha1 from group management in scope Environment",
        "operationId" : "list_management_v1alpha1_Environment_APIService",
        "tags" : [ "management" ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/pageNumberParam"
        }, {
          "$ref" : "#/components/parameters/pageSizeParam"
        }, {
          "$ref" : "#/components/parameters/sortParam"
        }, {
          "$ref" : "#/components/parameters/queryParam"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.APIService resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List all resources of type APIService for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/management.v1alpha1.APIService"
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "post" : {
        "summary" : "Create APIService for version v1alpha1 from group management in scope Environment",
        "description" : "Create APIService for version v1alpha1 from group management in scope Environment",
        "operationId" : "create_management_v1alpha1_Environment_APIService",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.APIService resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.APIService"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Create a new APIService for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.APIService"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "409" : {
            "$ref" : "#/components/responses/Conflict"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/environments/{environmentName}/apiservices/{name}" : {
      "parameters" : [ {
        "name" : "environmentName",
        "description" : "Name of the Environment",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the APIService",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves APIService for version v1alpha1 from group management in scope Environment",
        "description" : "Retrieves APIService for version v1alpha1 from group management in scope Environment",
        "operationId" : "read_management_v1alpha1_Environment_APIService",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.APIService resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read APIService for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.APIService"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "delete" : {
        "summary" : "Remove APIService for version v1alpha1 from group management in scope Environment",
        "description" : "Remove APIService for version v1alpha1 from group management in scope Environment",
        "operationId" : "remove_management_v1alpha1_Environment_APIService",
        "tags" : [ "management" ],
        "responses" : {
          "202" : {
            "description" : "Accepted removing APIService for version v1alpha1 from group management in scope Environment. Dependent resources found, clean up will finish once all dependent resources have been removed"
          },
          "204" : {
            "description" : "Removed APIService for version v1alpha1 from group management in scope Environment"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update APIService for version v1alpha1 from group management in scope Environment",
        "description" : "Update APIService for version v1alpha1 from group management in scope Environment",
        "operationId" : "update_management_v1alpha1_Environment_APIService",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.APIService resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.APIService"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Update APIService for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.APIService"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/environments/{environmentName}/apiservices/{name}/{extension}" : {
      "parameters" : [ {
        "name" : "environmentName",
        "description" : "Name of the Environment",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "name" : "extension",
        "description" : "Name of the extension",
        "in" : "path",
        "schema" : {
          "type" : "string",
          "pattern" : "x-.*"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the APIService",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves Extension resource data of APIService for version v1alpha1 from group management in scope Environment",
        "description" : "Retrieves Extension resource data of APIService for version v1alpha1 from group management in scope Environment",
        "operationId" : "read_management_v1alpha1_Environment_APIService_extension",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.APIService resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read Extension resource data of APIService for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.APIService"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update Extension resource data of APIService for version v1alpha1 from group management in scope Environment",
        "description" : "Update Extension resource data of APIService for version v1alpha1 from group management in scope Environment",
        "operationId" : "update_management_v1alpha1_Environment_APIService_extension",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.APIService resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.APIService"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Updated Extension resource data of APIService for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.APIService"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/environments/{environmentName}/apiservicerevisions" : {
      "parameters" : [ {
        "name" : "environmentName",
        "description" : "Name of the Environment",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves APIServiceRevision for version v1alpha1 from group management in scope Environment",
        "description" : "Retrieves APIServiceRevision for version v1alpha1 from group management in scope Environment",
        "operationId" : "list_management_v1alpha1_Environment_APIServiceRevision",
        "tags" : [ "management" ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/pageNumberParam"
        }, {
          "$ref" : "#/components/parameters/pageSizeParam"
        }, {
          "$ref" : "#/components/parameters/sortParam"
        }, {
          "$ref" : "#/components/parameters/queryParam"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.APIServiceRevision resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List all resources of type APIServiceRevision for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/management.v1alpha1.APIServiceRevision"
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "post" : {
        "summary" : "Create APIServiceRevision for version v1alpha1 from group management in scope Environment",
        "description" : "Create APIServiceRevision for version v1alpha1 from group management in scope Environment",
        "operationId" : "create_management_v1alpha1_Environment_APIServiceRevision",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.APIServiceRevision resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.APIServiceRevision"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Create a new APIServiceRevision for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.APIServiceRevision"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "409" : {
            "$ref" : "#/components/responses/Conflict"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/environments/{environmentName}/apiservicerevisions/{name}" : {
      "parameters" : [ {
        "name" : "environmentName",
        "description" : "Name of the Environment",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the APIServiceRevision",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves APIServiceRevision for version v1alpha1 from group management in scope Environment",
        "description" : "Retrieves APIServiceRevision for version v1alpha1 from group management in scope Environment",
        "operationId" : "read_management_v1alpha1_Environment_APIServiceRevision",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.APIServiceRevision resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read APIServiceRevision for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.APIServiceRevision"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "delete" : {
        "summary" : "Remove APIServiceRevision for version v1alpha1 from group management in scope Environment",
        "description" : "Remove APIServiceRevision for version v1alpha1 from group management in scope Environment",
        "operationId" : "remove_management_v1alpha1_Environment_APIServiceRevision",
        "tags" : [ "management" ],
        "responses" : {
          "202" : {
            "description" : "Accepted removing APIServiceRevision for version v1alpha1 from group management in scope Environment. Dependent resources found, clean up will finish once all dependent resources have been removed"
          },
          "204" : {
            "description" : "Removed APIServiceRevision for version v1alpha1 from group management in scope Environment"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update APIServiceRevision for version v1alpha1 from group management in scope Environment",
        "description" : "Update APIServiceRevision for version v1alpha1 from group management in scope Environment",
        "operationId" : "update_management_v1alpha1_Environment_APIServiceRevision",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.APIServiceRevision resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.APIServiceRevision"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Update APIServiceRevision for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.APIServiceRevision"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/environments/{environmentName}/apiservicerevisions/{name}/{extension}" : {
      "parameters" : [ {
        "name" : "environmentName",
        "description" : "Name of the Environment",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "name" : "extension",
        "description" : "Name of the extension",
        "in" : "path",
        "schema" : {
          "type" : "string",
          "pattern" : "x-.*"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the APIServiceRevision",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves Extension resource data of APIServiceRevision for version v1alpha1 from group management in scope Environment",
        "description" : "Retrieves Extension resource data of APIServiceRevision for version v1alpha1 from group management in scope Environment",
        "operationId" : "read_management_v1alpha1_Environment_APIServiceRevision_extension",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.APIServiceRevision resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read Extension resource data of APIServiceRevision for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.APIServiceRevision"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update Extension resource data of APIServiceRevision for version v1alpha1 from group management in scope Environment",
        "description" : "Update Extension resource data of APIServiceRevision for version v1alpha1 from group management in scope Environment",
        "operationId" : "update_management_v1alpha1_Environment_APIServiceRevision_extension",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.APIServiceRevision resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.APIServiceRevision"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Updated Extension resource data of APIServiceRevision for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.APIServiceRevision"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/environments/{environmentName}/apiserviceinstances" : {
      "parameters" : [ {
        "name" : "environmentName",
        "description" : "Name of the Environment",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves APIServiceInstance for version v1alpha1 from group management in scope Environment",
        "description" : "Retrieves APIServiceInstance for version v1alpha1 from group management in scope Environment",
        "operationId" : "list_management_v1alpha1_Environment_APIServiceInstance",
        "tags" : [ "management" ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/pageNumberParam"
        }, {
          "$ref" : "#/components/parameters/pageSizeParam"
        }, {
          "$ref" : "#/components/parameters/sortParam"
        }, {
          "$ref" : "#/components/parameters/queryParam"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.APIServiceInstance resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List all resources of type APIServiceInstance for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/management.v1alpha1.APIServiceInstance"
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "post" : {
        "summary" : "Create APIServiceInstance for version v1alpha1 from group management in scope Environment",
        "description" : "Create APIServiceInstance for version v1alpha1 from group management in scope Environment",
        "operationId" : "create_management_v1alpha1_Environment_APIServiceInstance",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.APIServiceInstance resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.APIServiceInstance"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Create a new APIServiceInstance for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.APIServiceInstance"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "409" : {
            "$ref" : "#/components/responses/Conflict"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/environments/{environmentName}/apiserviceinstances/{name}" : {
      "parameters" : [ {
        "name" : "environmentName",
        "description" : "Name of the Environment",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the APIServiceInstance",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves APIServiceInstance for version v1alpha1 from group management in scope Environment",
        "description" : "Retrieves APIServiceInstance for version v1alpha1 from group management in scope Environment",
        "operationId" : "read_management_v1alpha1_Environment_APIServiceInstance",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.APIServiceInstance resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read APIServiceInstance for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.APIServiceInstance"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "delete" : {
        "summary" : "Remove APIServiceInstance for version v1alpha1 from group management in scope Environment",
        "description" : "Remove APIServiceInstance for version v1alpha1 from group management in scope Environment",
        "operationId" : "remove_management_v1alpha1_Environment_APIServiceInstance",
        "tags" : [ "management" ],
        "responses" : {
          "202" : {
            "description" : "Accepted removing APIServiceInstance for version v1alpha1 from group management in scope Environment. Dependent resources found, clean up will finish once all dependent resources have been removed"
          },
          "204" : {
            "description" : "Removed APIServiceInstance for version v1alpha1 from group management in scope Environment"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update APIServiceInstance for version v1alpha1 from group management in scope Environment",
        "description" : "Update APIServiceInstance for version v1alpha1 from group management in scope Environment",
        "operationId" : "update_management_v1alpha1_Environment_APIServiceInstance",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.APIServiceInstance resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.APIServiceInstance"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Update APIServiceInstance for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.APIServiceInstance"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/environments/{environmentName}/apiserviceinstances/{name}/{extension}" : {
      "parameters" : [ {
        "name" : "environmentName",
        "description" : "Name of the Environment",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "name" : "extension",
        "description" : "Name of the extension",
        "in" : "path",
        "schema" : {
          "type" : "string",
          "pattern" : "x-.*"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the APIServiceInstance",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves Extension resource data of APIServiceInstance for version v1alpha1 from group management in scope Environment",
        "description" : "Retrieves Extension resource data of APIServiceInstance for version v1alpha1 from group management in scope Environment",
        "operationId" : "read_management_v1alpha1_Environment_APIServiceInstance_extension",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.APIServiceInstance resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read Extension resource data of APIServiceInstance for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.APIServiceInstance"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update Extension resource data of APIServiceInstance for version v1alpha1 from group management in scope Environment",
        "description" : "Update Extension resource data of APIServiceInstance for version v1alpha1 from group management in scope Environment",
        "operationId" : "update_management_v1alpha1_Environment_APIServiceInstance_extension",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.APIServiceInstance resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.APIServiceInstance"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Updated Extension resource data of APIServiceInstance for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.APIServiceInstance"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/environments/{environmentName}/consumerinstances" : {
      "parameters" : [ {
        "name" : "environmentName",
        "description" : "Name of the Environment",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves ConsumerInstance for version v1alpha1 from group management in scope Environment",
        "description" : "Retrieves ConsumerInstance for version v1alpha1 from group management in scope Environment",
        "operationId" : "list_management_v1alpha1_Environment_ConsumerInstance",
        "tags" : [ "management" ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/pageNumberParam"
        }, {
          "$ref" : "#/components/parameters/pageSizeParam"
        }, {
          "$ref" : "#/components/parameters/sortParam"
        }, {
          "$ref" : "#/components/parameters/queryParam"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.ConsumerInstance resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, status, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List all resources of type ConsumerInstance for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/management.v1alpha1.ConsumerInstance"
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "post" : {
        "summary" : "Create ConsumerInstance for version v1alpha1 from group management in scope Environment",
        "description" : "Create ConsumerInstance for version v1alpha1 from group management in scope Environment",
        "operationId" : "create_management_v1alpha1_Environment_ConsumerInstance",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.ConsumerInstance resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, status, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.ConsumerInstance"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Create a new ConsumerInstance for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.ConsumerInstance"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "409" : {
            "$ref" : "#/components/responses/Conflict"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/environments/{environmentName}/consumerinstances/{name}" : {
      "parameters" : [ {
        "name" : "environmentName",
        "description" : "Name of the Environment",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the ConsumerInstance",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves ConsumerInstance for version v1alpha1 from group management in scope Environment",
        "description" : "Retrieves ConsumerInstance for version v1alpha1 from group management in scope Environment",
        "operationId" : "read_management_v1alpha1_Environment_ConsumerInstance",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.ConsumerInstance resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, status, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read ConsumerInstance for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.ConsumerInstance"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "delete" : {
        "summary" : "Remove ConsumerInstance for version v1alpha1 from group management in scope Environment",
        "description" : "Remove ConsumerInstance for version v1alpha1 from group management in scope Environment",
        "operationId" : "remove_management_v1alpha1_Environment_ConsumerInstance",
        "tags" : [ "management" ],
        "responses" : {
          "202" : {
            "description" : "Accepted removing ConsumerInstance for version v1alpha1 from group management in scope Environment. Dependent resources found, clean up will finish once all dependent resources have been removed"
          },
          "204" : {
            "description" : "Removed ConsumerInstance for version v1alpha1 from group management in scope Environment"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update ConsumerInstance for version v1alpha1 from group management in scope Environment",
        "description" : "Update ConsumerInstance for version v1alpha1 from group management in scope Environment",
        "operationId" : "update_management_v1alpha1_Environment_ConsumerInstance",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.ConsumerInstance resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, status, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.ConsumerInstance"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Update ConsumerInstance for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.ConsumerInstance"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/environments/{environmentName}/consumerinstances/{name}/status" : {
      "parameters" : [ {
        "name" : "environmentName",
        "description" : "Name of the Environment",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the ConsumerInstance",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves status resource data of ConsumerInstance for version v1alpha1 from group management in scope Environment",
        "description" : "Retrieves status resource data of ConsumerInstance for version v1alpha1 from group management in scope Environment",
        "operationId" : "read_management_v1alpha1_Environment_ConsumerInstance_status",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.ConsumerInstance resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read status resource data of ConsumerInstance for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.ConsumerInstance"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update status resource data of ConsumerInstance for version v1alpha1 from group management in scope Environment",
        "description" : "Update status resource data of ConsumerInstance for version v1alpha1 from group management in scope Environment",
        "operationId" : "update_management_v1alpha1_Environment_ConsumerInstance_status",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.ConsumerInstance resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.ConsumerInstance"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Updated status resource data of ConsumerInstance for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.ConsumerInstance"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/environments/{environmentName}/consumerinstances/{name}/{extension}" : {
      "parameters" : [ {
        "name" : "environmentName",
        "description" : "Name of the Environment",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "name" : "extension",
        "description" : "Name of the extension",
        "in" : "path",
        "schema" : {
          "type" : "string",
          "pattern" : "x-.*"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the ConsumerInstance",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves Extension resource data of ConsumerInstance for version v1alpha1 from group management in scope Environment",
        "description" : "Retrieves Extension resource data of ConsumerInstance for version v1alpha1 from group management in scope Environment",
        "operationId" : "read_management_v1alpha1_Environment_ConsumerInstance_extension",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.ConsumerInstance resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read Extension resource data of ConsumerInstance for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.ConsumerInstance"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update Extension resource data of ConsumerInstance for version v1alpha1 from group management in scope Environment",
        "description" : "Update Extension resource data of ConsumerInstance for version v1alpha1 from group management in scope Environment",
        "operationId" : "update_management_v1alpha1_Environment_ConsumerInstance_extension",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.ConsumerInstance resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.ConsumerInstance"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Updated Extension resource data of ConsumerInstance for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.ConsumerInstance"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/environments/{environmentName}/consumersubscriptiondefs" : {
      "parameters" : [ {
        "name" : "environmentName",
        "description" : "Name of the Environment",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves ConsumerSubscriptionDefinition for version v1alpha1 from group management in scope Environment",
        "description" : "Retrieves ConsumerSubscriptionDefinition for version v1alpha1 from group management in scope Environment",
        "operationId" : "list_management_v1alpha1_Environment_ConsumerSubscriptionDefinition",
        "tags" : [ "management" ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/pageNumberParam"
        }, {
          "$ref" : "#/components/parameters/pageSizeParam"
        }, {
          "$ref" : "#/components/parameters/sortParam"
        }, {
          "$ref" : "#/components/parameters/queryParam"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.ConsumerSubscriptionDefinition resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List all resources of type ConsumerSubscriptionDefinition for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/management.v1alpha1.ConsumerSubscriptionDefinition"
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "post" : {
        "summary" : "Create ConsumerSubscriptionDefinition for version v1alpha1 from group management in scope Environment",
        "description" : "Create ConsumerSubscriptionDefinition for version v1alpha1 from group management in scope Environment",
        "operationId" : "create_management_v1alpha1_Environment_ConsumerSubscriptionDefinition",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.ConsumerSubscriptionDefinition resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.ConsumerSubscriptionDefinition"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Create a new ConsumerSubscriptionDefinition for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.ConsumerSubscriptionDefinition"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "409" : {
            "$ref" : "#/components/responses/Conflict"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/environments/{environmentName}/consumersubscriptiondefs/{name}" : {
      "parameters" : [ {
        "name" : "environmentName",
        "description" : "Name of the Environment",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the ConsumerSubscriptionDefinition",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves ConsumerSubscriptionDefinition for version v1alpha1 from group management in scope Environment",
        "description" : "Retrieves ConsumerSubscriptionDefinition for version v1alpha1 from group management in scope Environment",
        "operationId" : "read_management_v1alpha1_Environment_ConsumerSubscriptionDefinition",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.ConsumerSubscriptionDefinition resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read ConsumerSubscriptionDefinition for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.ConsumerSubscriptionDefinition"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "delete" : {
        "summary" : "Remove ConsumerSubscriptionDefinition for version v1alpha1 from group management in scope Environment",
        "description" : "Remove ConsumerSubscriptionDefinition for version v1alpha1 from group management in scope Environment",
        "operationId" : "remove_management_v1alpha1_Environment_ConsumerSubscriptionDefinition",
        "tags" : [ "management" ],
        "responses" : {
          "202" : {
            "description" : "Accepted removing ConsumerSubscriptionDefinition for version v1alpha1 from group management in scope Environment. Dependent resources found, clean up will finish once all dependent resources have been removed"
          },
          "204" : {
            "description" : "Removed ConsumerSubscriptionDefinition for version v1alpha1 from group management in scope Environment"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update ConsumerSubscriptionDefinition for version v1alpha1 from group management in scope Environment",
        "description" : "Update ConsumerSubscriptionDefinition for version v1alpha1 from group management in scope Environment",
        "operationId" : "update_management_v1alpha1_Environment_ConsumerSubscriptionDefinition",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.ConsumerSubscriptionDefinition resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.ConsumerSubscriptionDefinition"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Update ConsumerSubscriptionDefinition for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.ConsumerSubscriptionDefinition"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/environments/{environmentName}/consumersubscriptiondefs/{name}/{extension}" : {
      "parameters" : [ {
        "name" : "environmentName",
        "description" : "Name of the Environment",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "name" : "extension",
        "description" : "Name of the extension",
        "in" : "path",
        "schema" : {
          "type" : "string",
          "pattern" : "x-.*"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the ConsumerSubscriptionDefinition",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves Extension resource data of ConsumerSubscriptionDefinition for version v1alpha1 from group management in scope Environment",
        "description" : "Retrieves Extension resource data of ConsumerSubscriptionDefinition for version v1alpha1 from group management in scope Environment",
        "operationId" : "read_management_v1alpha1_Environment_ConsumerSubscriptionDefinition_extension",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.ConsumerSubscriptionDefinition resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read Extension resource data of ConsumerSubscriptionDefinition for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.ConsumerSubscriptionDefinition"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update Extension resource data of ConsumerSubscriptionDefinition for version v1alpha1 from group management in scope Environment",
        "description" : "Update Extension resource data of ConsumerSubscriptionDefinition for version v1alpha1 from group management in scope Environment",
        "operationId" : "update_management_v1alpha1_Environment_ConsumerSubscriptionDefinition_extension",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.ConsumerSubscriptionDefinition resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.ConsumerSubscriptionDefinition"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Updated Extension resource data of ConsumerSubscriptionDefinition for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.ConsumerSubscriptionDefinition"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/integrations" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves Integration for version v1alpha1 from group management",
        "description" : "Retrieves Integration for version v1alpha1 from group management",
        "operationId" : "list_management_v1alpha1_Integration",
        "tags" : [ "management" ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/pageNumberParam"
        }, {
          "$ref" : "#/components/parameters/pageSizeParam"
        }, {
          "$ref" : "#/components/parameters/sortParam"
        }, {
          "$ref" : "#/components/parameters/queryParam"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.Integration resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List all resources of type Integration for version v1alpha1 from group management",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/management.v1alpha1.Integration"
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "post" : {
        "summary" : "Create Integration for version v1alpha1 from group management",
        "description" : "Create Integration for version v1alpha1 from group management",
        "operationId" : "create_management_v1alpha1_Integration",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.Integration resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.Integration"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Create a new Integration for version v1alpha1 from group management",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.Integration"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "409" : {
            "$ref" : "#/components/responses/Conflict"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/integrations/{name}" : {
      "parameters" : [ {
        "name" : "name",
        "description" : "The name of the Integration",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves Integration for version v1alpha1 from group management",
        "description" : "Retrieves Integration for version v1alpha1 from group management",
        "operationId" : "read_management_v1alpha1_Integration",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.Integration resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read Integration for version v1alpha1 from group management",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.Integration"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "delete" : {
        "summary" : "Remove Integration for version v1alpha1 from group management",
        "description" : "Remove Integration for version v1alpha1 from group management",
        "operationId" : "remove_management_v1alpha1_Integration",
        "tags" : [ "management" ],
        "responses" : {
          "202" : {
            "description" : "Accepted removing Integration for version v1alpha1 from group management. Dependent resources found, clean up will finish once all dependent resources have been removed"
          },
          "204" : {
            "description" : "Removed Integration for version v1alpha1 from group management"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update Integration for version v1alpha1 from group management",
        "description" : "Update Integration for version v1alpha1 from group management",
        "operationId" : "update_management_v1alpha1_Integration",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.Integration resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.Integration"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Update Integration for version v1alpha1 from group management",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.Integration"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/integrations/{name}/{extension}" : {
      "parameters" : [ {
        "name" : "extension",
        "description" : "Name of the extension",
        "in" : "path",
        "schema" : {
          "type" : "string",
          "pattern" : "x-.*"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the Integration",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves Extension resource data of Integration for version v1alpha1 from group management",
        "description" : "Retrieves Extension resource data of Integration for version v1alpha1 from group management",
        "operationId" : "read_management_v1alpha1_Integration_extension",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.Integration resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read Extension resource data of Integration for version v1alpha1 from group management",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.Integration"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update Extension resource data of Integration for version v1alpha1 from group management",
        "description" : "Update Extension resource data of Integration for version v1alpha1 from group management",
        "operationId" : "update_management_v1alpha1_Integration_extension",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.Integration resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.Integration"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Updated Extension resource data of Integration for version v1alpha1 from group management",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.Integration"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/integrations/{integrationName}/resourcehooks" : {
      "parameters" : [ {
        "name" : "integrationName",
        "description" : "Name of the Integration",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves ResourceHook for version v1alpha1 from group management in scope Integration",
        "description" : "Retrieves ResourceHook for version v1alpha1 from group management in scope Integration",
        "operationId" : "list_management_v1alpha1_Integration_ResourceHook",
        "tags" : [ "management" ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/pageNumberParam"
        }, {
          "$ref" : "#/components/parameters/pageSizeParam"
        }, {
          "$ref" : "#/components/parameters/sortParam"
        }, {
          "$ref" : "#/components/parameters/queryParam"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.ResourceHook resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List all resources of type ResourceHook for version v1alpha1 from group management in scope Integration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/management.v1alpha1.ResourceHook"
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "post" : {
        "summary" : "Create ResourceHook for version v1alpha1 from group management in scope Integration",
        "description" : "Create ResourceHook for version v1alpha1 from group management in scope Integration",
        "operationId" : "create_management_v1alpha1_Integration_ResourceHook",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.ResourceHook resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.ResourceHook"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Create a new ResourceHook for version v1alpha1 from group management in scope Integration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.ResourceHook"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "409" : {
            "$ref" : "#/components/responses/Conflict"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/integrations/{integrationName}/resourcehooks/{name}" : {
      "parameters" : [ {
        "name" : "integrationName",
        "description" : "Name of the Integration",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the ResourceHook",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves ResourceHook for version v1alpha1 from group management in scope Integration",
        "description" : "Retrieves ResourceHook for version v1alpha1 from group management in scope Integration",
        "operationId" : "read_management_v1alpha1_Integration_ResourceHook",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.ResourceHook resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read ResourceHook for version v1alpha1 from group management in scope Integration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.ResourceHook"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "delete" : {
        "summary" : "Remove ResourceHook for version v1alpha1 from group management in scope Integration",
        "description" : "Remove ResourceHook for version v1alpha1 from group management in scope Integration",
        "operationId" : "remove_management_v1alpha1_Integration_ResourceHook",
        "tags" : [ "management" ],
        "responses" : {
          "202" : {
            "description" : "Accepted removing ResourceHook for version v1alpha1 from group management in scope Integration. Dependent resources found, clean up will finish once all dependent resources have been removed"
          },
          "204" : {
            "description" : "Removed ResourceHook for version v1alpha1 from group management in scope Integration"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update ResourceHook for version v1alpha1 from group management in scope Integration",
        "description" : "Update ResourceHook for version v1alpha1 from group management in scope Integration",
        "operationId" : "update_management_v1alpha1_Integration_ResourceHook",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.ResourceHook resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.ResourceHook"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Update ResourceHook for version v1alpha1 from group management in scope Integration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.ResourceHook"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/integrations/{integrationName}/resourcehooks/{name}/{extension}" : {
      "parameters" : [ {
        "name" : "integrationName",
        "description" : "Name of the Integration",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "name" : "extension",
        "description" : "Name of the extension",
        "in" : "path",
        "schema" : {
          "type" : "string",
          "pattern" : "x-.*"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the ResourceHook",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves Extension resource data of ResourceHook for version v1alpha1 from group management in scope Integration",
        "description" : "Retrieves Extension resource data of ResourceHook for version v1alpha1 from group management in scope Integration",
        "operationId" : "read_management_v1alpha1_Integration_ResourceHook_extension",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.ResourceHook resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read Extension resource data of ResourceHook for version v1alpha1 from group management in scope Integration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.ResourceHook"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update Extension resource data of ResourceHook for version v1alpha1 from group management in scope Integration",
        "description" : "Update Extension resource data of ResourceHook for version v1alpha1 from group management in scope Integration",
        "operationId" : "update_management_v1alpha1_Integration_ResourceHook_extension",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.ResourceHook resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.ResourceHook"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Updated Extension resource data of ResourceHook for version v1alpha1 from group management in scope Integration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.ResourceHook"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/k8sclusters" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves K8SCluster for version v1alpha1 from group management",
        "description" : "Retrieves K8SCluster for version v1alpha1 from group management",
        "operationId" : "list_management_v1alpha1_K8SCluster",
        "tags" : [ "management" ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/pageNumberParam"
        }, {
          "$ref" : "#/components/parameters/pageSizeParam"
        }, {
          "$ref" : "#/components/parameters/sortParam"
        }, {
          "$ref" : "#/components/parameters/queryParam"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.K8SCluster resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List all resources of type K8SCluster for version v1alpha1 from group management",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/management.v1alpha1.K8SCluster"
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "post" : {
        "summary" : "Create K8SCluster for version v1alpha1 from group management",
        "description" : "Create K8SCluster for version v1alpha1 from group management",
        "operationId" : "create_management_v1alpha1_K8SCluster",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.K8SCluster resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.K8SCluster"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Create a new K8SCluster for version v1alpha1 from group management",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.K8SCluster"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "409" : {
            "$ref" : "#/components/responses/Conflict"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/k8sclusters/{name}" : {
      "parameters" : [ {
        "name" : "name",
        "description" : "The name of the K8SCluster",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves K8SCluster for version v1alpha1 from group management",
        "description" : "Retrieves K8SCluster for version v1alpha1 from group management",
        "operationId" : "read_management_v1alpha1_K8SCluster",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.K8SCluster resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read K8SCluster for version v1alpha1 from group management",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.K8SCluster"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "delete" : {
        "summary" : "Remove K8SCluster for version v1alpha1 from group management",
        "description" : "Remove K8SCluster for version v1alpha1 from group management",
        "operationId" : "remove_management_v1alpha1_K8SCluster",
        "tags" : [ "management" ],
        "responses" : {
          "202" : {
            "description" : "Accepted removing K8SCluster for version v1alpha1 from group management. Dependent resources found, clean up will finish once all dependent resources have been removed"
          },
          "204" : {
            "description" : "Removed K8SCluster for version v1alpha1 from group management"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update K8SCluster for version v1alpha1 from group management",
        "description" : "Update K8SCluster for version v1alpha1 from group management",
        "operationId" : "update_management_v1alpha1_K8SCluster",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.K8SCluster resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.K8SCluster"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Update K8SCluster for version v1alpha1 from group management",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.K8SCluster"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/k8sclusters/{name}/{extension}" : {
      "parameters" : [ {
        "name" : "extension",
        "description" : "Name of the extension",
        "in" : "path",
        "schema" : {
          "type" : "string",
          "pattern" : "x-.*"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the K8SCluster",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves Extension resource data of K8SCluster for version v1alpha1 from group management",
        "description" : "Retrieves Extension resource data of K8SCluster for version v1alpha1 from group management",
        "operationId" : "read_management_v1alpha1_K8SCluster_extension",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.K8SCluster resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read Extension resource data of K8SCluster for version v1alpha1 from group management",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.K8SCluster"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update Extension resource data of K8SCluster for version v1alpha1 from group management",
        "description" : "Update Extension resource data of K8SCluster for version v1alpha1 from group management",
        "operationId" : "update_management_v1alpha1_K8SCluster_extension",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.K8SCluster resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.K8SCluster"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Updated Extension resource data of K8SCluster for version v1alpha1 from group management",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.K8SCluster"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/k8sclusters/{k8sclusterName}/k8sresources" : {
      "parameters" : [ {
        "name" : "k8sclusterName",
        "description" : "Name of the K8SCluster",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves K8SResource for version v1alpha1 from group management in scope K8SCluster",
        "description" : "Retrieves K8SResource for version v1alpha1 from group management in scope K8SCluster",
        "operationId" : "list_management_v1alpha1_K8SCluster_K8SResource",
        "tags" : [ "management" ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/pageNumberParam"
        }, {
          "$ref" : "#/components/parameters/pageSizeParam"
        }, {
          "$ref" : "#/components/parameters/sortParam"
        }, {
          "$ref" : "#/components/parameters/queryParam"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.K8SResource resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List all resources of type K8SResource for version v1alpha1 from group management in scope K8SCluster",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/management.v1alpha1.K8SResource"
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "post" : {
        "summary" : "Create K8SResource for version v1alpha1 from group management in scope K8SCluster",
        "description" : "Create K8SResource for version v1alpha1 from group management in scope K8SCluster",
        "operationId" : "create_management_v1alpha1_K8SCluster_K8SResource",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.K8SResource resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.K8SResource"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Create a new K8SResource for version v1alpha1 from group management in scope K8SCluster",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.K8SResource"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "409" : {
            "$ref" : "#/components/responses/Conflict"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/k8sclusters/{k8sclusterName}/k8sresources/{name}" : {
      "parameters" : [ {
        "name" : "k8sclusterName",
        "description" : "Name of the K8SCluster",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the K8SResource",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves K8SResource for version v1alpha1 from group management in scope K8SCluster",
        "description" : "Retrieves K8SResource for version v1alpha1 from group management in scope K8SCluster",
        "operationId" : "read_management_v1alpha1_K8SCluster_K8SResource",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.K8SResource resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read K8SResource for version v1alpha1 from group management in scope K8SCluster",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.K8SResource"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "delete" : {
        "summary" : "Remove K8SResource for version v1alpha1 from group management in scope K8SCluster",
        "description" : "Remove K8SResource for version v1alpha1 from group management in scope K8SCluster",
        "operationId" : "remove_management_v1alpha1_K8SCluster_K8SResource",
        "tags" : [ "management" ],
        "responses" : {
          "202" : {
            "description" : "Accepted removing K8SResource for version v1alpha1 from group management in scope K8SCluster. Dependent resources found, clean up will finish once all dependent resources have been removed"
          },
          "204" : {
            "description" : "Removed K8SResource for version v1alpha1 from group management in scope K8SCluster"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update K8SResource for version v1alpha1 from group management in scope K8SCluster",
        "description" : "Update K8SResource for version v1alpha1 from group management in scope K8SCluster",
        "operationId" : "update_management_v1alpha1_K8SCluster_K8SResource",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.K8SResource resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.K8SResource"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Update K8SResource for version v1alpha1 from group management in scope K8SCluster",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.K8SResource"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/k8sclusters/{k8sclusterName}/k8sresources/{name}/{extension}" : {
      "parameters" : [ {
        "name" : "k8sclusterName",
        "description" : "Name of the K8SCluster",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "name" : "extension",
        "description" : "Name of the extension",
        "in" : "path",
        "schema" : {
          "type" : "string",
          "pattern" : "x-.*"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the K8SResource",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves Extension resource data of K8SResource for version v1alpha1 from group management in scope K8SCluster",
        "description" : "Retrieves Extension resource data of K8SResource for version v1alpha1 from group management in scope K8SCluster",
        "operationId" : "read_management_v1alpha1_K8SCluster_K8SResource_extension",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.K8SResource resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read Extension resource data of K8SResource for version v1alpha1 from group management in scope K8SCluster",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.K8SResource"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update Extension resource data of K8SResource for version v1alpha1 from group management in scope K8SCluster",
        "description" : "Update Extension resource data of K8SResource for version v1alpha1 from group management in scope K8SCluster",
        "operationId" : "update_management_v1alpha1_K8SCluster_K8SResource_extension",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.K8SResource resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.K8SResource"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Updated Extension resource data of K8SResource for version v1alpha1 from group management in scope K8SCluster",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.K8SResource"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/k8sclusters/{k8sclusterName}/resourcediscoveries" : {
      "parameters" : [ {
        "name" : "k8sclusterName",
        "description" : "Name of the K8SCluster",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves ResourceDiscovery for version v1alpha1 from group management in scope K8SCluster",
        "description" : "Retrieves ResourceDiscovery for version v1alpha1 from group management in scope K8SCluster",
        "operationId" : "list_management_v1alpha1_K8SCluster_ResourceDiscovery",
        "tags" : [ "management" ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/pageNumberParam"
        }, {
          "$ref" : "#/components/parameters/pageSizeParam"
        }, {
          "$ref" : "#/components/parameters/sortParam"
        }, {
          "$ref" : "#/components/parameters/queryParam"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.ResourceDiscovery resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List all resources of type ResourceDiscovery for version v1alpha1 from group management in scope K8SCluster",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/management.v1alpha1.ResourceDiscovery"
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "post" : {
        "summary" : "Create ResourceDiscovery for version v1alpha1 from group management in scope K8SCluster",
        "description" : "Create ResourceDiscovery for version v1alpha1 from group management in scope K8SCluster",
        "operationId" : "create_management_v1alpha1_K8SCluster_ResourceDiscovery",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.ResourceDiscovery resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.ResourceDiscovery"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Create a new ResourceDiscovery for version v1alpha1 from group management in scope K8SCluster",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.ResourceDiscovery"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "409" : {
            "$ref" : "#/components/responses/Conflict"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/k8sclusters/{k8sclusterName}/resourcediscoveries/{name}" : {
      "parameters" : [ {
        "name" : "k8sclusterName",
        "description" : "Name of the K8SCluster",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the ResourceDiscovery",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves ResourceDiscovery for version v1alpha1 from group management in scope K8SCluster",
        "description" : "Retrieves ResourceDiscovery for version v1alpha1 from group management in scope K8SCluster",
        "operationId" : "read_management_v1alpha1_K8SCluster_ResourceDiscovery",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.ResourceDiscovery resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read ResourceDiscovery for version v1alpha1 from group management in scope K8SCluster",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.ResourceDiscovery"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "delete" : {
        "summary" : "Remove ResourceDiscovery for version v1alpha1 from group management in scope K8SCluster",
        "description" : "Remove ResourceDiscovery for version v1alpha1 from group management in scope K8SCluster",
        "operationId" : "remove_management_v1alpha1_K8SCluster_ResourceDiscovery",
        "tags" : [ "management" ],
        "responses" : {
          "202" : {
            "description" : "Accepted removing ResourceDiscovery for version v1alpha1 from group management in scope K8SCluster. Dependent resources found, clean up will finish once all dependent resources have been removed"
          },
          "204" : {
            "description" : "Removed ResourceDiscovery for version v1alpha1 from group management in scope K8SCluster"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update ResourceDiscovery for version v1alpha1 from group management in scope K8SCluster",
        "description" : "Update ResourceDiscovery for version v1alpha1 from group management in scope K8SCluster",
        "operationId" : "update_management_v1alpha1_K8SCluster_ResourceDiscovery",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.ResourceDiscovery resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.ResourceDiscovery"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Update ResourceDiscovery for version v1alpha1 from group management in scope K8SCluster",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.ResourceDiscovery"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/k8sclusters/{k8sclusterName}/resourcediscoveries/{name}/{extension}" : {
      "parameters" : [ {
        "name" : "k8sclusterName",
        "description" : "Name of the K8SCluster",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "name" : "extension",
        "description" : "Name of the extension",
        "in" : "path",
        "schema" : {
          "type" : "string",
          "pattern" : "x-.*"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the ResourceDiscovery",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves Extension resource data of ResourceDiscovery for version v1alpha1 from group management in scope K8SCluster",
        "description" : "Retrieves Extension resource data of ResourceDiscovery for version v1alpha1 from group management in scope K8SCluster",
        "operationId" : "read_management_v1alpha1_K8SCluster_ResourceDiscovery_extension",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.ResourceDiscovery resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read Extension resource data of ResourceDiscovery for version v1alpha1 from group management in scope K8SCluster",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.ResourceDiscovery"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update Extension resource data of ResourceDiscovery for version v1alpha1 from group management in scope K8SCluster",
        "description" : "Update Extension resource data of ResourceDiscovery for version v1alpha1 from group management in scope K8SCluster",
        "operationId" : "update_management_v1alpha1_K8SCluster_ResourceDiscovery_extension",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.ResourceDiscovery resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.ResourceDiscovery"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Updated Extension resource data of ResourceDiscovery for version v1alpha1 from group management in scope K8SCluster",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.ResourceDiscovery"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/meshes" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves Mesh for version v1alpha1 from group management",
        "description" : "Retrieves Mesh for version v1alpha1 from group management",
        "operationId" : "list_management_v1alpha1_Mesh",
        "tags" : [ "management" ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/pageNumberParam"
        }, {
          "$ref" : "#/components/parameters/pageSizeParam"
        }, {
          "$ref" : "#/components/parameters/sortParam"
        }, {
          "$ref" : "#/components/parameters/queryParam"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.Mesh resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List all resources of type Mesh for version v1alpha1 from group management",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/management.v1alpha1.Mesh"
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "post" : {
        "summary" : "Create Mesh for version v1alpha1 from group management",
        "description" : "Create Mesh for version v1alpha1 from group management",
        "operationId" : "create_management_v1alpha1_Mesh",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.Mesh resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.Mesh"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Create a new Mesh for version v1alpha1 from group management",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.Mesh"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "409" : {
            "$ref" : "#/components/responses/Conflict"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/meshes/{name}" : {
      "parameters" : [ {
        "name" : "name",
        "description" : "The name of the Mesh",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves Mesh for version v1alpha1 from group management",
        "description" : "Retrieves Mesh for version v1alpha1 from group management",
        "operationId" : "read_management_v1alpha1_Mesh",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.Mesh resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read Mesh for version v1alpha1 from group management",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.Mesh"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "delete" : {
        "summary" : "Remove Mesh for version v1alpha1 from group management",
        "description" : "Remove Mesh for version v1alpha1 from group management",
        "operationId" : "remove_management_v1alpha1_Mesh",
        "tags" : [ "management" ],
        "responses" : {
          "202" : {
            "description" : "Accepted removing Mesh for version v1alpha1 from group management. Dependent resources found, clean up will finish once all dependent resources have been removed"
          },
          "204" : {
            "description" : "Removed Mesh for version v1alpha1 from group management"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update Mesh for version v1alpha1 from group management",
        "description" : "Update Mesh for version v1alpha1 from group management",
        "operationId" : "update_management_v1alpha1_Mesh",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.Mesh resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.Mesh"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Update Mesh for version v1alpha1 from group management",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.Mesh"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/meshes/{name}/{extension}" : {
      "parameters" : [ {
        "name" : "extension",
        "description" : "Name of the extension",
        "in" : "path",
        "schema" : {
          "type" : "string",
          "pattern" : "x-.*"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the Mesh",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves Extension resource data of Mesh for version v1alpha1 from group management",
        "description" : "Retrieves Extension resource data of Mesh for version v1alpha1 from group management",
        "operationId" : "read_management_v1alpha1_Mesh_extension",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.Mesh resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read Extension resource data of Mesh for version v1alpha1 from group management",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.Mesh"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update Extension resource data of Mesh for version v1alpha1 from group management",
        "description" : "Update Extension resource data of Mesh for version v1alpha1 from group management",
        "operationId" : "update_management_v1alpha1_Mesh_extension",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.Mesh resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.Mesh"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Updated Extension resource data of Mesh for version v1alpha1 from group management",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.Mesh"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/k8sclusters/{k8sclusterName}/specdiscoveries" : {
      "parameters" : [ {
        "name" : "k8sclusterName",
        "description" : "Name of the K8SCluster",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves SpecDiscovery for version v1alpha1 from group management in scope K8SCluster",
        "description" : "Retrieves SpecDiscovery for version v1alpha1 from group management in scope K8SCluster",
        "operationId" : "list_management_v1alpha1_K8SCluster_SpecDiscovery",
        "tags" : [ "management" ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/pageNumberParam"
        }, {
          "$ref" : "#/components/parameters/pageSizeParam"
        }, {
          "$ref" : "#/components/parameters/sortParam"
        }, {
          "$ref" : "#/components/parameters/queryParam"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.SpecDiscovery resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List all resources of type SpecDiscovery for version v1alpha1 from group management in scope K8SCluster",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/management.v1alpha1.SpecDiscovery"
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "post" : {
        "summary" : "Create SpecDiscovery for version v1alpha1 from group management in scope K8SCluster",
        "description" : "Create SpecDiscovery for version v1alpha1 from group management in scope K8SCluster",
        "operationId" : "create_management_v1alpha1_K8SCluster_SpecDiscovery",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.SpecDiscovery resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.SpecDiscovery"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Create a new SpecDiscovery for version v1alpha1 from group management in scope K8SCluster",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.SpecDiscovery"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "409" : {
            "$ref" : "#/components/responses/Conflict"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/k8sclusters/{k8sclusterName}/specdiscoveries/{name}" : {
      "parameters" : [ {
        "name" : "k8sclusterName",
        "description" : "Name of the K8SCluster",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the SpecDiscovery",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves SpecDiscovery for version v1alpha1 from group management in scope K8SCluster",
        "description" : "Retrieves SpecDiscovery for version v1alpha1 from group management in scope K8SCluster",
        "operationId" : "read_management_v1alpha1_K8SCluster_SpecDiscovery",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.SpecDiscovery resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read SpecDiscovery for version v1alpha1 from group management in scope K8SCluster",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.SpecDiscovery"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "delete" : {
        "summary" : "Remove SpecDiscovery for version v1alpha1 from group management in scope K8SCluster",
        "description" : "Remove SpecDiscovery for version v1alpha1 from group management in scope K8SCluster",
        "operationId" : "remove_management_v1alpha1_K8SCluster_SpecDiscovery",
        "tags" : [ "management" ],
        "responses" : {
          "202" : {
            "description" : "Accepted removing SpecDiscovery for version v1alpha1 from group management in scope K8SCluster. Dependent resources found, clean up will finish once all dependent resources have been removed"
          },
          "204" : {
            "description" : "Removed SpecDiscovery for version v1alpha1 from group management in scope K8SCluster"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update SpecDiscovery for version v1alpha1 from group management in scope K8SCluster",
        "description" : "Update SpecDiscovery for version v1alpha1 from group management in scope K8SCluster",
        "operationId" : "update_management_v1alpha1_K8SCluster_SpecDiscovery",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.SpecDiscovery resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.SpecDiscovery"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Update SpecDiscovery for version v1alpha1 from group management in scope K8SCluster",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.SpecDiscovery"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/k8sclusters/{k8sclusterName}/specdiscoveries/{name}/{extension}" : {
      "parameters" : [ {
        "name" : "k8sclusterName",
        "description" : "Name of the K8SCluster",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "name" : "extension",
        "description" : "Name of the extension",
        "in" : "path",
        "schema" : {
          "type" : "string",
          "pattern" : "x-.*"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the SpecDiscovery",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves Extension resource data of SpecDiscovery for version v1alpha1 from group management in scope K8SCluster",
        "description" : "Retrieves Extension resource data of SpecDiscovery for version v1alpha1 from group management in scope K8SCluster",
        "operationId" : "read_management_v1alpha1_K8SCluster_SpecDiscovery_extension",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.SpecDiscovery resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read Extension resource data of SpecDiscovery for version v1alpha1 from group management in scope K8SCluster",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.SpecDiscovery"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update Extension resource data of SpecDiscovery for version v1alpha1 from group management in scope K8SCluster",
        "description" : "Update Extension resource data of SpecDiscovery for version v1alpha1 from group management in scope K8SCluster",
        "operationId" : "update_management_v1alpha1_K8SCluster_SpecDiscovery_extension",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.SpecDiscovery resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.SpecDiscovery"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Updated Extension resource data of SpecDiscovery for version v1alpha1 from group management in scope K8SCluster",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.SpecDiscovery"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/k8sclusters/{k8sclusterName}/apispecs" : {
      "parameters" : [ {
        "name" : "k8sclusterName",
        "description" : "Name of the K8SCluster",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves APISpec for version v1alpha1 from group management in scope K8SCluster",
        "description" : "Retrieves APISpec for version v1alpha1 from group management in scope K8SCluster",
        "operationId" : "list_management_v1alpha1_K8SCluster_APISpec",
        "tags" : [ "management" ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/pageNumberParam"
        }, {
          "$ref" : "#/components/parameters/pageSizeParam"
        }, {
          "$ref" : "#/components/parameters/sortParam"
        }, {
          "$ref" : "#/components/parameters/queryParam"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.APISpec resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List all resources of type APISpec for version v1alpha1 from group management in scope K8SCluster",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/management.v1alpha1.APISpec"
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "post" : {
        "summary" : "Create APISpec for version v1alpha1 from group management in scope K8SCluster",
        "description" : "Create APISpec for version v1alpha1 from group management in scope K8SCluster",
        "operationId" : "create_management_v1alpha1_K8SCluster_APISpec",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.APISpec resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.APISpec"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Create a new APISpec for version v1alpha1 from group management in scope K8SCluster",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.APISpec"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "409" : {
            "$ref" : "#/components/responses/Conflict"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/k8sclusters/{k8sclusterName}/apispecs/{name}" : {
      "parameters" : [ {
        "name" : "k8sclusterName",
        "description" : "Name of the K8SCluster",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the APISpec",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves APISpec for version v1alpha1 from group management in scope K8SCluster",
        "description" : "Retrieves APISpec for version v1alpha1 from group management in scope K8SCluster",
        "operationId" : "read_management_v1alpha1_K8SCluster_APISpec",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.APISpec resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read APISpec for version v1alpha1 from group management in scope K8SCluster",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.APISpec"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "delete" : {
        "summary" : "Remove APISpec for version v1alpha1 from group management in scope K8SCluster",
        "description" : "Remove APISpec for version v1alpha1 from group management in scope K8SCluster",
        "operationId" : "remove_management_v1alpha1_K8SCluster_APISpec",
        "tags" : [ "management" ],
        "responses" : {
          "202" : {
            "description" : "Accepted removing APISpec for version v1alpha1 from group management in scope K8SCluster. Dependent resources found, clean up will finish once all dependent resources have been removed"
          },
          "204" : {
            "description" : "Removed APISpec for version v1alpha1 from group management in scope K8SCluster"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update APISpec for version v1alpha1 from group management in scope K8SCluster",
        "description" : "Update APISpec for version v1alpha1 from group management in scope K8SCluster",
        "operationId" : "update_management_v1alpha1_K8SCluster_APISpec",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.APISpec resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.APISpec"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Update APISpec for version v1alpha1 from group management in scope K8SCluster",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.APISpec"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/k8sclusters/{k8sclusterName}/apispecs/{name}/{extension}" : {
      "parameters" : [ {
        "name" : "k8sclusterName",
        "description" : "Name of the K8SCluster",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "name" : "extension",
        "description" : "Name of the extension",
        "in" : "path",
        "schema" : {
          "type" : "string",
          "pattern" : "x-.*"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the APISpec",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves Extension resource data of APISpec for version v1alpha1 from group management in scope K8SCluster",
        "description" : "Retrieves Extension resource data of APISpec for version v1alpha1 from group management in scope K8SCluster",
        "operationId" : "read_management_v1alpha1_K8SCluster_APISpec_extension",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.APISpec resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read Extension resource data of APISpec for version v1alpha1 from group management in scope K8SCluster",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.APISpec"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update Extension resource data of APISpec for version v1alpha1 from group management in scope K8SCluster",
        "description" : "Update Extension resource data of APISpec for version v1alpha1 from group management in scope K8SCluster",
        "operationId" : "update_management_v1alpha1_K8SCluster_APISpec_extension",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.APISpec resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.APISpec"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Updated Extension resource data of APISpec for version v1alpha1 from group management in scope K8SCluster",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.APISpec"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/environments/{environmentName}/awsdataplanes" : {
      "parameters" : [ {
        "name" : "environmentName",
        "description" : "Name of the Environment",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves AWSDataplane for version v1alpha1 from group management in scope Environment",
        "description" : "Retrieves AWSDataplane for version v1alpha1 from group management in scope Environment",
        "operationId" : "list_management_v1alpha1_Environment_AWSDataplane",
        "tags" : [ "management" ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/pageNumberParam"
        }, {
          "$ref" : "#/components/parameters/pageSizeParam"
        }, {
          "$ref" : "#/components/parameters/sortParam"
        }, {
          "$ref" : "#/components/parameters/queryParam"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.AWSDataplane resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List all resources of type AWSDataplane for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/management.v1alpha1.AWSDataplane"
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "post" : {
        "summary" : "Create AWSDataplane for version v1alpha1 from group management in scope Environment",
        "description" : "Create AWSDataplane for version v1alpha1 from group management in scope Environment",
        "operationId" : "create_management_v1alpha1_Environment_AWSDataplane",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.AWSDataplane resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.AWSDataplane"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Create a new AWSDataplane for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.AWSDataplane"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "409" : {
            "$ref" : "#/components/responses/Conflict"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/environments/{environmentName}/awsdataplanes/{name}" : {
      "parameters" : [ {
        "name" : "environmentName",
        "description" : "Name of the Environment",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the AWSDataplane",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves AWSDataplane for version v1alpha1 from group management in scope Environment",
        "description" : "Retrieves AWSDataplane for version v1alpha1 from group management in scope Environment",
        "operationId" : "read_management_v1alpha1_Environment_AWSDataplane",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.AWSDataplane resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read AWSDataplane for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.AWSDataplane"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "delete" : {
        "summary" : "Remove AWSDataplane for version v1alpha1 from group management in scope Environment",
        "description" : "Remove AWSDataplane for version v1alpha1 from group management in scope Environment",
        "operationId" : "remove_management_v1alpha1_Environment_AWSDataplane",
        "tags" : [ "management" ],
        "responses" : {
          "202" : {
            "description" : "Accepted removing AWSDataplane for version v1alpha1 from group management in scope Environment. Dependent resources found, clean up will finish once all dependent resources have been removed"
          },
          "204" : {
            "description" : "Removed AWSDataplane for version v1alpha1 from group management in scope Environment"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update AWSDataplane for version v1alpha1 from group management in scope Environment",
        "description" : "Update AWSDataplane for version v1alpha1 from group management in scope Environment",
        "operationId" : "update_management_v1alpha1_Environment_AWSDataplane",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.AWSDataplane resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.AWSDataplane"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Update AWSDataplane for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.AWSDataplane"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/environments/{environmentName}/awsdataplanes/{name}/{extension}" : {
      "parameters" : [ {
        "name" : "environmentName",
        "description" : "Name of the Environment",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "name" : "extension",
        "description" : "Name of the extension",
        "in" : "path",
        "schema" : {
          "type" : "string",
          "pattern" : "x-.*"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the AWSDataplane",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves Extension resource data of AWSDataplane for version v1alpha1 from group management in scope Environment",
        "description" : "Retrieves Extension resource data of AWSDataplane for version v1alpha1 from group management in scope Environment",
        "operationId" : "read_management_v1alpha1_Environment_AWSDataplane_extension",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.AWSDataplane resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read Extension resource data of AWSDataplane for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.AWSDataplane"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update Extension resource data of AWSDataplane for version v1alpha1 from group management in scope Environment",
        "description" : "Update Extension resource data of AWSDataplane for version v1alpha1 from group management in scope Environment",
        "operationId" : "update_management_v1alpha1_Environment_AWSDataplane_extension",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.AWSDataplane resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.AWSDataplane"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Updated Extension resource data of AWSDataplane for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.AWSDataplane"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/environments/{environmentName}/awsdiscoveryagents" : {
      "parameters" : [ {
        "name" : "environmentName",
        "description" : "Name of the Environment",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves AWSDiscoveryAgent for version v1alpha1 from group management in scope Environment",
        "description" : "Retrieves AWSDiscoveryAgent for version v1alpha1 from group management in scope Environment",
        "operationId" : "list_management_v1alpha1_Environment_AWSDiscoveryAgent",
        "tags" : [ "management" ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/pageNumberParam"
        }, {
          "$ref" : "#/components/parameters/pageSizeParam"
        }, {
          "$ref" : "#/components/parameters/sortParam"
        }, {
          "$ref" : "#/components/parameters/queryParam"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.AWSDiscoveryAgent resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, status, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List all resources of type AWSDiscoveryAgent for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/management.v1alpha1.AWSDiscoveryAgent"
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "post" : {
        "summary" : "Create AWSDiscoveryAgent for version v1alpha1 from group management in scope Environment",
        "description" : "Create AWSDiscoveryAgent for version v1alpha1 from group management in scope Environment",
        "operationId" : "create_management_v1alpha1_Environment_AWSDiscoveryAgent",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.AWSDiscoveryAgent resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, status, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.AWSDiscoveryAgent"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Create a new AWSDiscoveryAgent for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.AWSDiscoveryAgent"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "409" : {
            "$ref" : "#/components/responses/Conflict"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/environments/{environmentName}/awsdiscoveryagents/{name}" : {
      "parameters" : [ {
        "name" : "environmentName",
        "description" : "Name of the Environment",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the AWSDiscoveryAgent",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves AWSDiscoveryAgent for version v1alpha1 from group management in scope Environment",
        "description" : "Retrieves AWSDiscoveryAgent for version v1alpha1 from group management in scope Environment",
        "operationId" : "read_management_v1alpha1_Environment_AWSDiscoveryAgent",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.AWSDiscoveryAgent resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, status, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read AWSDiscoveryAgent for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.AWSDiscoveryAgent"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "delete" : {
        "summary" : "Remove AWSDiscoveryAgent for version v1alpha1 from group management in scope Environment",
        "description" : "Remove AWSDiscoveryAgent for version v1alpha1 from group management in scope Environment",
        "operationId" : "remove_management_v1alpha1_Environment_AWSDiscoveryAgent",
        "tags" : [ "management" ],
        "responses" : {
          "202" : {
            "description" : "Accepted removing AWSDiscoveryAgent for version v1alpha1 from group management in scope Environment. Dependent resources found, clean up will finish once all dependent resources have been removed"
          },
          "204" : {
            "description" : "Removed AWSDiscoveryAgent for version v1alpha1 from group management in scope Environment"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update AWSDiscoveryAgent for version v1alpha1 from group management in scope Environment",
        "description" : "Update AWSDiscoveryAgent for version v1alpha1 from group management in scope Environment",
        "operationId" : "update_management_v1alpha1_Environment_AWSDiscoveryAgent",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.AWSDiscoveryAgent resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, status, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.AWSDiscoveryAgent"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Update AWSDiscoveryAgent for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.AWSDiscoveryAgent"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/environments/{environmentName}/awsdiscoveryagents/{name}/status" : {
      "parameters" : [ {
        "name" : "environmentName",
        "description" : "Name of the Environment",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the AWSDiscoveryAgent",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves status resource data of AWSDiscoveryAgent for version v1alpha1 from group management in scope Environment",
        "description" : "Retrieves status resource data of AWSDiscoveryAgent for version v1alpha1 from group management in scope Environment",
        "operationId" : "read_management_v1alpha1_Environment_AWSDiscoveryAgent_status",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.AWSDiscoveryAgent resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read status resource data of AWSDiscoveryAgent for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.AWSDiscoveryAgent"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update status resource data of AWSDiscoveryAgent for version v1alpha1 from group management in scope Environment",
        "description" : "Update status resource data of AWSDiscoveryAgent for version v1alpha1 from group management in scope Environment",
        "operationId" : "update_management_v1alpha1_Environment_AWSDiscoveryAgent_status",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.AWSDiscoveryAgent resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.AWSDiscoveryAgent"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Updated status resource data of AWSDiscoveryAgent for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.AWSDiscoveryAgent"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/environments/{environmentName}/awsdiscoveryagents/{name}/{extension}" : {
      "parameters" : [ {
        "name" : "environmentName",
        "description" : "Name of the Environment",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "name" : "extension",
        "description" : "Name of the extension",
        "in" : "path",
        "schema" : {
          "type" : "string",
          "pattern" : "x-.*"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the AWSDiscoveryAgent",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves Extension resource data of AWSDiscoveryAgent for version v1alpha1 from group management in scope Environment",
        "description" : "Retrieves Extension resource data of AWSDiscoveryAgent for version v1alpha1 from group management in scope Environment",
        "operationId" : "read_management_v1alpha1_Environment_AWSDiscoveryAgent_extension",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.AWSDiscoveryAgent resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read Extension resource data of AWSDiscoveryAgent for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.AWSDiscoveryAgent"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update Extension resource data of AWSDiscoveryAgent for version v1alpha1 from group management in scope Environment",
        "description" : "Update Extension resource data of AWSDiscoveryAgent for version v1alpha1 from group management in scope Environment",
        "operationId" : "update_management_v1alpha1_Environment_AWSDiscoveryAgent_extension",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.AWSDiscoveryAgent resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.AWSDiscoveryAgent"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Updated Extension resource data of AWSDiscoveryAgent for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.AWSDiscoveryAgent"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/environments/{environmentName}/awstraceabilityagents" : {
      "parameters" : [ {
        "name" : "environmentName",
        "description" : "Name of the Environment",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves AWSTraceabilityAgent for version v1alpha1 from group management in scope Environment",
        "description" : "Retrieves AWSTraceabilityAgent for version v1alpha1 from group management in scope Environment",
        "operationId" : "list_management_v1alpha1_Environment_AWSTraceabilityAgent",
        "tags" : [ "management" ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/pageNumberParam"
        }, {
          "$ref" : "#/components/parameters/pageSizeParam"
        }, {
          "$ref" : "#/components/parameters/sortParam"
        }, {
          "$ref" : "#/components/parameters/queryParam"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.AWSTraceabilityAgent resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, status, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List all resources of type AWSTraceabilityAgent for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/management.v1alpha1.AWSTraceabilityAgent"
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "post" : {
        "summary" : "Create AWSTraceabilityAgent for version v1alpha1 from group management in scope Environment",
        "description" : "Create AWSTraceabilityAgent for version v1alpha1 from group management in scope Environment",
        "operationId" : "create_management_v1alpha1_Environment_AWSTraceabilityAgent",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.AWSTraceabilityAgent resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, status, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.AWSTraceabilityAgent"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Create a new AWSTraceabilityAgent for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.AWSTraceabilityAgent"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "409" : {
            "$ref" : "#/components/responses/Conflict"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/environments/{environmentName}/awstraceabilityagents/{name}" : {
      "parameters" : [ {
        "name" : "environmentName",
        "description" : "Name of the Environment",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the AWSTraceabilityAgent",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves AWSTraceabilityAgent for version v1alpha1 from group management in scope Environment",
        "description" : "Retrieves AWSTraceabilityAgent for version v1alpha1 from group management in scope Environment",
        "operationId" : "read_management_v1alpha1_Environment_AWSTraceabilityAgent",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.AWSTraceabilityAgent resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, status, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read AWSTraceabilityAgent for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.AWSTraceabilityAgent"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "delete" : {
        "summary" : "Remove AWSTraceabilityAgent for version v1alpha1 from group management in scope Environment",
        "description" : "Remove AWSTraceabilityAgent for version v1alpha1 from group management in scope Environment",
        "operationId" : "remove_management_v1alpha1_Environment_AWSTraceabilityAgent",
        "tags" : [ "management" ],
        "responses" : {
          "202" : {
            "description" : "Accepted removing AWSTraceabilityAgent for version v1alpha1 from group management in scope Environment. Dependent resources found, clean up will finish once all dependent resources have been removed"
          },
          "204" : {
            "description" : "Removed AWSTraceabilityAgent for version v1alpha1 from group management in scope Environment"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update AWSTraceabilityAgent for version v1alpha1 from group management in scope Environment",
        "description" : "Update AWSTraceabilityAgent for version v1alpha1 from group management in scope Environment",
        "operationId" : "update_management_v1alpha1_Environment_AWSTraceabilityAgent",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.AWSTraceabilityAgent resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, status, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.AWSTraceabilityAgent"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Update AWSTraceabilityAgent for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.AWSTraceabilityAgent"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/environments/{environmentName}/awstraceabilityagents/{name}/status" : {
      "parameters" : [ {
        "name" : "environmentName",
        "description" : "Name of the Environment",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the AWSTraceabilityAgent",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves status resource data of AWSTraceabilityAgent for version v1alpha1 from group management in scope Environment",
        "description" : "Retrieves status resource data of AWSTraceabilityAgent for version v1alpha1 from group management in scope Environment",
        "operationId" : "read_management_v1alpha1_Environment_AWSTraceabilityAgent_status",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.AWSTraceabilityAgent resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read status resource data of AWSTraceabilityAgent for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.AWSTraceabilityAgent"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update status resource data of AWSTraceabilityAgent for version v1alpha1 from group management in scope Environment",
        "description" : "Update status resource data of AWSTraceabilityAgent for version v1alpha1 from group management in scope Environment",
        "operationId" : "update_management_v1alpha1_Environment_AWSTraceabilityAgent_status",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.AWSTraceabilityAgent resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.AWSTraceabilityAgent"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Updated status resource data of AWSTraceabilityAgent for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.AWSTraceabilityAgent"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/environments/{environmentName}/awstraceabilityagents/{name}/{extension}" : {
      "parameters" : [ {
        "name" : "environmentName",
        "description" : "Name of the Environment",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "name" : "extension",
        "description" : "Name of the extension",
        "in" : "path",
        "schema" : {
          "type" : "string",
          "pattern" : "x-.*"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the AWSTraceabilityAgent",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves Extension resource data of AWSTraceabilityAgent for version v1alpha1 from group management in scope Environment",
        "description" : "Retrieves Extension resource data of AWSTraceabilityAgent for version v1alpha1 from group management in scope Environment",
        "operationId" : "read_management_v1alpha1_Environment_AWSTraceabilityAgent_extension",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.AWSTraceabilityAgent resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read Extension resource data of AWSTraceabilityAgent for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.AWSTraceabilityAgent"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update Extension resource data of AWSTraceabilityAgent for version v1alpha1 from group management in scope Environment",
        "description" : "Update Extension resource data of AWSTraceabilityAgent for version v1alpha1 from group management in scope Environment",
        "operationId" : "update_management_v1alpha1_Environment_AWSTraceabilityAgent_extension",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.AWSTraceabilityAgent resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.AWSTraceabilityAgent"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Updated Extension resource data of AWSTraceabilityAgent for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.AWSTraceabilityAgent"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/definitions/v1alpha1/groups" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves ResourceGroup for version v1alpha1 from group definitions",
        "description" : "Retrieves ResourceGroup for version v1alpha1 from group definitions",
        "operationId" : "list_definitions_v1alpha1_ResourceGroup",
        "tags" : [ "definitions" ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/pageNumberParam"
        }, {
          "$ref" : "#/components/parameters/pageSizeParam"
        }, {
          "$ref" : "#/components/parameters/sortParam"
        }, {
          "$ref" : "#/components/parameters/queryParam"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the definitions.v1alpha1.ResourceGroup resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List all resources of type ResourceGroup for version v1alpha1 from group definitions",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/definitions.v1alpha1.ResourceGroup"
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "post" : {
        "summary" : "Create ResourceGroup for version v1alpha1 from group definitions",
        "description" : "Create ResourceGroup for version v1alpha1 from group definitions",
        "operationId" : "create_definitions_v1alpha1_ResourceGroup",
        "tags" : [ "definitions" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the definitions.v1alpha1.ResourceGroup resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/definitions.v1alpha1.ResourceGroup"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Create a new ResourceGroup for version v1alpha1 from group definitions",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/definitions.v1alpha1.ResourceGroup"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "409" : {
            "$ref" : "#/components/responses/Conflict"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/definitions/v1alpha1/groups/{name}" : {
      "parameters" : [ {
        "name" : "name",
        "description" : "The name of the ResourceGroup",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves ResourceGroup for version v1alpha1 from group definitions",
        "description" : "Retrieves ResourceGroup for version v1alpha1 from group definitions",
        "operationId" : "read_definitions_v1alpha1_ResourceGroup",
        "tags" : [ "definitions" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the definitions.v1alpha1.ResourceGroup resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read ResourceGroup for version v1alpha1 from group definitions",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/definitions.v1alpha1.ResourceGroup"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "delete" : {
        "summary" : "Remove ResourceGroup for version v1alpha1 from group definitions",
        "description" : "Remove ResourceGroup for version v1alpha1 from group definitions",
        "operationId" : "remove_definitions_v1alpha1_ResourceGroup",
        "tags" : [ "definitions" ],
        "responses" : {
          "202" : {
            "description" : "Accepted removing ResourceGroup for version v1alpha1 from group definitions. Dependent resources found, clean up will finish once all dependent resources have been removed"
          },
          "204" : {
            "description" : "Removed ResourceGroup for version v1alpha1 from group definitions"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update ResourceGroup for version v1alpha1 from group definitions",
        "description" : "Update ResourceGroup for version v1alpha1 from group definitions",
        "operationId" : "update_definitions_v1alpha1_ResourceGroup",
        "tags" : [ "definitions" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the definitions.v1alpha1.ResourceGroup resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/definitions.v1alpha1.ResourceGroup"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Update ResourceGroup for version v1alpha1 from group definitions",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/definitions.v1alpha1.ResourceGroup"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/definitions/v1alpha1/groups/{name}/{extension}" : {
      "parameters" : [ {
        "name" : "extension",
        "description" : "Name of the extension",
        "in" : "path",
        "schema" : {
          "type" : "string",
          "pattern" : "x-.*"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the ResourceGroup",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves Extension resource data of ResourceGroup for version v1alpha1 from group definitions",
        "description" : "Retrieves Extension resource data of ResourceGroup for version v1alpha1 from group definitions",
        "operationId" : "read_definitions_v1alpha1_ResourceGroup_extension",
        "tags" : [ "definitions" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the definitions.v1alpha1.ResourceGroup resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read Extension resource data of ResourceGroup for version v1alpha1 from group definitions",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/definitions.v1alpha1.ResourceGroup"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update Extension resource data of ResourceGroup for version v1alpha1 from group definitions",
        "description" : "Update Extension resource data of ResourceGroup for version v1alpha1 from group definitions",
        "operationId" : "update_definitions_v1alpha1_ResourceGroup_extension",
        "tags" : [ "definitions" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the definitions.v1alpha1.ResourceGroup resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/definitions.v1alpha1.ResourceGroup"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Updated Extension resource data of ResourceGroup for version v1alpha1 from group definitions",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/definitions.v1alpha1.ResourceGroup"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/definitions/v1alpha1/groups/{groupName}/resources" : {
      "parameters" : [ {
        "name" : "groupName",
        "description" : "Name of the ResourceGroup",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves ResourceDefinition for version v1alpha1 from group definitions in scope ResourceGroup",
        "description" : "Retrieves ResourceDefinition for version v1alpha1 from group definitions in scope ResourceGroup",
        "operationId" : "list_definitions_v1alpha1_ResourceGroup_ResourceDefinition",
        "tags" : [ "definitions" ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/pageNumberParam"
        }, {
          "$ref" : "#/components/parameters/pageSizeParam"
        }, {
          "$ref" : "#/components/parameters/sortParam"
        }, {
          "$ref" : "#/components/parameters/queryParam"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the definitions.v1alpha1.ResourceDefinition resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List all resources of type ResourceDefinition for version v1alpha1 from group definitions in scope ResourceGroup",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/definitions.v1alpha1.ResourceDefinition"
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "post" : {
        "summary" : "Create ResourceDefinition for version v1alpha1 from group definitions in scope ResourceGroup",
        "description" : "Create ResourceDefinition for version v1alpha1 from group definitions in scope ResourceGroup",
        "operationId" : "create_definitions_v1alpha1_ResourceGroup_ResourceDefinition",
        "tags" : [ "definitions" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the definitions.v1alpha1.ResourceDefinition resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/definitions.v1alpha1.ResourceDefinition"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Create a new ResourceDefinition for version v1alpha1 from group definitions in scope ResourceGroup",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/definitions.v1alpha1.ResourceDefinition"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "409" : {
            "$ref" : "#/components/responses/Conflict"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/definitions/v1alpha1/groups/{groupName}/resources/{name}" : {
      "parameters" : [ {
        "name" : "groupName",
        "description" : "Name of the ResourceGroup",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the ResourceDefinition",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves ResourceDefinition for version v1alpha1 from group definitions in scope ResourceGroup",
        "description" : "Retrieves ResourceDefinition for version v1alpha1 from group definitions in scope ResourceGroup",
        "operationId" : "read_definitions_v1alpha1_ResourceGroup_ResourceDefinition",
        "tags" : [ "definitions" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the definitions.v1alpha1.ResourceDefinition resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read ResourceDefinition for version v1alpha1 from group definitions in scope ResourceGroup",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/definitions.v1alpha1.ResourceDefinition"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "delete" : {
        "summary" : "Remove ResourceDefinition for version v1alpha1 from group definitions in scope ResourceGroup",
        "description" : "Remove ResourceDefinition for version v1alpha1 from group definitions in scope ResourceGroup",
        "operationId" : "remove_definitions_v1alpha1_ResourceGroup_ResourceDefinition",
        "tags" : [ "definitions" ],
        "responses" : {
          "202" : {
            "description" : "Accepted removing ResourceDefinition for version v1alpha1 from group definitions in scope ResourceGroup. Dependent resources found, clean up will finish once all dependent resources have been removed"
          },
          "204" : {
            "description" : "Removed ResourceDefinition for version v1alpha1 from group definitions in scope ResourceGroup"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update ResourceDefinition for version v1alpha1 from group definitions in scope ResourceGroup",
        "description" : "Update ResourceDefinition for version v1alpha1 from group definitions in scope ResourceGroup",
        "operationId" : "update_definitions_v1alpha1_ResourceGroup_ResourceDefinition",
        "tags" : [ "definitions" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the definitions.v1alpha1.ResourceDefinition resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/definitions.v1alpha1.ResourceDefinition"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Update ResourceDefinition for version v1alpha1 from group definitions in scope ResourceGroup",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/definitions.v1alpha1.ResourceDefinition"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/definitions/v1alpha1/groups/{groupName}/resources/{name}/{extension}" : {
      "parameters" : [ {
        "name" : "groupName",
        "description" : "Name of the ResourceGroup",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "name" : "extension",
        "description" : "Name of the extension",
        "in" : "path",
        "schema" : {
          "type" : "string",
          "pattern" : "x-.*"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the ResourceDefinition",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves Extension resource data of ResourceDefinition for version v1alpha1 from group definitions in scope ResourceGroup",
        "description" : "Retrieves Extension resource data of ResourceDefinition for version v1alpha1 from group definitions in scope ResourceGroup",
        "operationId" : "read_definitions_v1alpha1_ResourceGroup_ResourceDefinition_extension",
        "tags" : [ "definitions" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the definitions.v1alpha1.ResourceDefinition resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read Extension resource data of ResourceDefinition for version v1alpha1 from group definitions in scope ResourceGroup",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/definitions.v1alpha1.ResourceDefinition"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update Extension resource data of ResourceDefinition for version v1alpha1 from group definitions in scope ResourceGroup",
        "description" : "Update Extension resource data of ResourceDefinition for version v1alpha1 from group definitions in scope ResourceGroup",
        "operationId" : "update_definitions_v1alpha1_ResourceGroup_ResourceDefinition_extension",
        "tags" : [ "definitions" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the definitions.v1alpha1.ResourceDefinition resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/definitions.v1alpha1.ResourceDefinition"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Updated Extension resource data of ResourceDefinition for version v1alpha1 from group definitions in scope ResourceGroup",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/definitions.v1alpha1.ResourceDefinition"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/definitions/v1alpha1/groups/{groupName}/resourceversions" : {
      "parameters" : [ {
        "name" : "groupName",
        "description" : "Name of the ResourceGroup",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves ResourceDefinitionVersion for version v1alpha1 from group definitions in scope ResourceGroup",
        "description" : "Retrieves ResourceDefinitionVersion for version v1alpha1 from group definitions in scope ResourceGroup",
        "operationId" : "list_definitions_v1alpha1_ResourceGroup_ResourceDefinitionVersion",
        "tags" : [ "definitions" ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/pageNumberParam"
        }, {
          "$ref" : "#/components/parameters/pageSizeParam"
        }, {
          "$ref" : "#/components/parameters/sortParam"
        }, {
          "$ref" : "#/components/parameters/queryParam"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the definitions.v1alpha1.ResourceDefinitionVersion resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List all resources of type ResourceDefinitionVersion for version v1alpha1 from group definitions in scope ResourceGroup",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/definitions.v1alpha1.ResourceDefinitionVersion"
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "post" : {
        "summary" : "Create ResourceDefinitionVersion for version v1alpha1 from group definitions in scope ResourceGroup",
        "description" : "Create ResourceDefinitionVersion for version v1alpha1 from group definitions in scope ResourceGroup",
        "operationId" : "create_definitions_v1alpha1_ResourceGroup_ResourceDefinitionVersion",
        "tags" : [ "definitions" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the definitions.v1alpha1.ResourceDefinitionVersion resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/definitions.v1alpha1.ResourceDefinitionVersion"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Create a new ResourceDefinitionVersion for version v1alpha1 from group definitions in scope ResourceGroup",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/definitions.v1alpha1.ResourceDefinitionVersion"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "409" : {
            "$ref" : "#/components/responses/Conflict"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/definitions/v1alpha1/groups/{groupName}/resourceversions/{name}" : {
      "parameters" : [ {
        "name" : "groupName",
        "description" : "Name of the ResourceGroup",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the ResourceDefinitionVersion",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves ResourceDefinitionVersion for version v1alpha1 from group definitions in scope ResourceGroup",
        "description" : "Retrieves ResourceDefinitionVersion for version v1alpha1 from group definitions in scope ResourceGroup",
        "operationId" : "read_definitions_v1alpha1_ResourceGroup_ResourceDefinitionVersion",
        "tags" : [ "definitions" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the definitions.v1alpha1.ResourceDefinitionVersion resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read ResourceDefinitionVersion for version v1alpha1 from group definitions in scope ResourceGroup",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/definitions.v1alpha1.ResourceDefinitionVersion"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "delete" : {
        "summary" : "Remove ResourceDefinitionVersion for version v1alpha1 from group definitions in scope ResourceGroup",
        "description" : "Remove ResourceDefinitionVersion for version v1alpha1 from group definitions in scope ResourceGroup",
        "operationId" : "remove_definitions_v1alpha1_ResourceGroup_ResourceDefinitionVersion",
        "tags" : [ "definitions" ],
        "responses" : {
          "202" : {
            "description" : "Accepted removing ResourceDefinitionVersion for version v1alpha1 from group definitions in scope ResourceGroup. Dependent resources found, clean up will finish once all dependent resources have been removed"
          },
          "204" : {
            "description" : "Removed ResourceDefinitionVersion for version v1alpha1 from group definitions in scope ResourceGroup"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update ResourceDefinitionVersion for version v1alpha1 from group definitions in scope ResourceGroup",
        "description" : "Update ResourceDefinitionVersion for version v1alpha1 from group definitions in scope ResourceGroup",
        "operationId" : "update_definitions_v1alpha1_ResourceGroup_ResourceDefinitionVersion",
        "tags" : [ "definitions" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the definitions.v1alpha1.ResourceDefinitionVersion resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/definitions.v1alpha1.ResourceDefinitionVersion"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Update ResourceDefinitionVersion for version v1alpha1 from group definitions in scope ResourceGroup",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/definitions.v1alpha1.ResourceDefinitionVersion"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/definitions/v1alpha1/groups/{groupName}/resourceversions/{name}/{extension}" : {
      "parameters" : [ {
        "name" : "groupName",
        "description" : "Name of the ResourceGroup",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "name" : "extension",
        "description" : "Name of the extension",
        "in" : "path",
        "schema" : {
          "type" : "string",
          "pattern" : "x-.*"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the ResourceDefinitionVersion",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves Extension resource data of ResourceDefinitionVersion for version v1alpha1 from group definitions in scope ResourceGroup",
        "description" : "Retrieves Extension resource data of ResourceDefinitionVersion for version v1alpha1 from group definitions in scope ResourceGroup",
        "operationId" : "read_definitions_v1alpha1_ResourceGroup_ResourceDefinitionVersion_extension",
        "tags" : [ "definitions" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the definitions.v1alpha1.ResourceDefinitionVersion resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read Extension resource data of ResourceDefinitionVersion for version v1alpha1 from group definitions in scope ResourceGroup",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/definitions.v1alpha1.ResourceDefinitionVersion"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update Extension resource data of ResourceDefinitionVersion for version v1alpha1 from group definitions in scope ResourceGroup",
        "description" : "Update Extension resource data of ResourceDefinitionVersion for version v1alpha1 from group definitions in scope ResourceGroup",
        "operationId" : "update_definitions_v1alpha1_ResourceGroup_ResourceDefinitionVersion_extension",
        "tags" : [ "definitions" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the definitions.v1alpha1.ResourceDefinitionVersion resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/definitions.v1alpha1.ResourceDefinitionVersion"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Updated Extension resource data of ResourceDefinitionVersion for version v1alpha1 from group definitions in scope ResourceGroup",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/definitions.v1alpha1.ResourceDefinitionVersion"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/definitions/v1alpha1/groups/{groupName}/commandlines" : {
      "parameters" : [ {
        "name" : "groupName",
        "description" : "Name of the ResourceGroup",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves CommandLineInterface for version v1alpha1 from group definitions in scope ResourceGroup",
        "description" : "Retrieves CommandLineInterface for version v1alpha1 from group definitions in scope ResourceGroup",
        "operationId" : "list_definitions_v1alpha1_ResourceGroup_CommandLineInterface",
        "tags" : [ "definitions" ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/pageNumberParam"
        }, {
          "$ref" : "#/components/parameters/pageSizeParam"
        }, {
          "$ref" : "#/components/parameters/sortParam"
        }, {
          "$ref" : "#/components/parameters/queryParam"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the definitions.v1alpha1.CommandLineInterface resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List all resources of type CommandLineInterface for version v1alpha1 from group definitions in scope ResourceGroup",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/definitions.v1alpha1.CommandLineInterface"
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "post" : {
        "summary" : "Create CommandLineInterface for version v1alpha1 from group definitions in scope ResourceGroup",
        "description" : "Create CommandLineInterface for version v1alpha1 from group definitions in scope ResourceGroup",
        "operationId" : "create_definitions_v1alpha1_ResourceGroup_CommandLineInterface",
        "tags" : [ "definitions" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the definitions.v1alpha1.CommandLineInterface resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/definitions.v1alpha1.CommandLineInterface"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Create a new CommandLineInterface for version v1alpha1 from group definitions in scope ResourceGroup",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/definitions.v1alpha1.CommandLineInterface"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "409" : {
            "$ref" : "#/components/responses/Conflict"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/definitions/v1alpha1/groups/{groupName}/commandlines/{name}" : {
      "parameters" : [ {
        "name" : "groupName",
        "description" : "Name of the ResourceGroup",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the CommandLineInterface",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves CommandLineInterface for version v1alpha1 from group definitions in scope ResourceGroup",
        "description" : "Retrieves CommandLineInterface for version v1alpha1 from group definitions in scope ResourceGroup",
        "operationId" : "read_definitions_v1alpha1_ResourceGroup_CommandLineInterface",
        "tags" : [ "definitions" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the definitions.v1alpha1.CommandLineInterface resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read CommandLineInterface for version v1alpha1 from group definitions in scope ResourceGroup",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/definitions.v1alpha1.CommandLineInterface"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "delete" : {
        "summary" : "Remove CommandLineInterface for version v1alpha1 from group definitions in scope ResourceGroup",
        "description" : "Remove CommandLineInterface for version v1alpha1 from group definitions in scope ResourceGroup",
        "operationId" : "remove_definitions_v1alpha1_ResourceGroup_CommandLineInterface",
        "tags" : [ "definitions" ],
        "responses" : {
          "202" : {
            "description" : "Accepted removing CommandLineInterface for version v1alpha1 from group definitions in scope ResourceGroup. Dependent resources found, clean up will finish once all dependent resources have been removed"
          },
          "204" : {
            "description" : "Removed CommandLineInterface for version v1alpha1 from group definitions in scope ResourceGroup"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update CommandLineInterface for version v1alpha1 from group definitions in scope ResourceGroup",
        "description" : "Update CommandLineInterface for version v1alpha1 from group definitions in scope ResourceGroup",
        "operationId" : "update_definitions_v1alpha1_ResourceGroup_CommandLineInterface",
        "tags" : [ "definitions" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the definitions.v1alpha1.CommandLineInterface resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/definitions.v1alpha1.CommandLineInterface"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Update CommandLineInterface for version v1alpha1 from group definitions in scope ResourceGroup",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/definitions.v1alpha1.CommandLineInterface"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/definitions/v1alpha1/groups/{groupName}/commandlines/{name}/{extension}" : {
      "parameters" : [ {
        "name" : "groupName",
        "description" : "Name of the ResourceGroup",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "name" : "extension",
        "description" : "Name of the extension",
        "in" : "path",
        "schema" : {
          "type" : "string",
          "pattern" : "x-.*"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the CommandLineInterface",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves Extension resource data of CommandLineInterface for version v1alpha1 from group definitions in scope ResourceGroup",
        "description" : "Retrieves Extension resource data of CommandLineInterface for version v1alpha1 from group definitions in scope ResourceGroup",
        "operationId" : "read_definitions_v1alpha1_ResourceGroup_CommandLineInterface_extension",
        "tags" : [ "definitions" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the definitions.v1alpha1.CommandLineInterface resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read Extension resource data of CommandLineInterface for version v1alpha1 from group definitions in scope ResourceGroup",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/definitions.v1alpha1.CommandLineInterface"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update Extension resource data of CommandLineInterface for version v1alpha1 from group definitions in scope ResourceGroup",
        "description" : "Update Extension resource data of CommandLineInterface for version v1alpha1 from group definitions in scope ResourceGroup",
        "operationId" : "update_definitions_v1alpha1_ResourceGroup_CommandLineInterface_extension",
        "tags" : [ "definitions" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the definitions.v1alpha1.CommandLineInterface resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/definitions.v1alpha1.CommandLineInterface"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Updated Extension resource data of CommandLineInterface for version v1alpha1 from group definitions in scope ResourceGroup",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/definitions.v1alpha1.CommandLineInterface"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/environments/{environmentName}/webhooks" : {
      "parameters" : [ {
        "name" : "environmentName",
        "description" : "Name of the Environment",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves Webhook for version v1alpha1 from group management in scope Environment",
        "description" : "Retrieves Webhook for version v1alpha1 from group management in scope Environment",
        "operationId" : "list_management_v1alpha1_Environment_Webhook",
        "tags" : [ "management" ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/pageNumberParam"
        }, {
          "$ref" : "#/components/parameters/pageSizeParam"
        }, {
          "$ref" : "#/components/parameters/sortParam"
        }, {
          "$ref" : "#/components/parameters/queryParam"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.Webhook resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List all resources of type Webhook for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/management.v1alpha1.Webhook"
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "post" : {
        "summary" : "Create Webhook for version v1alpha1 from group management in scope Environment",
        "description" : "Create Webhook for version v1alpha1 from group management in scope Environment",
        "operationId" : "create_management_v1alpha1_Environment_Webhook",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.Webhook resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.Webhook"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Create a new Webhook for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.Webhook"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "409" : {
            "$ref" : "#/components/responses/Conflict"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/environments/{environmentName}/webhooks/{name}" : {
      "parameters" : [ {
        "name" : "environmentName",
        "description" : "Name of the Environment",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the Webhook",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves Webhook for version v1alpha1 from group management in scope Environment",
        "description" : "Retrieves Webhook for version v1alpha1 from group management in scope Environment",
        "operationId" : "read_management_v1alpha1_Environment_Webhook",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.Webhook resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read Webhook for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.Webhook"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "delete" : {
        "summary" : "Remove Webhook for version v1alpha1 from group management in scope Environment",
        "description" : "Remove Webhook for version v1alpha1 from group management in scope Environment",
        "operationId" : "remove_management_v1alpha1_Environment_Webhook",
        "tags" : [ "management" ],
        "responses" : {
          "202" : {
            "description" : "Accepted removing Webhook for version v1alpha1 from group management in scope Environment. Dependent resources found, clean up will finish once all dependent resources have been removed"
          },
          "204" : {
            "description" : "Removed Webhook for version v1alpha1 from group management in scope Environment"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update Webhook for version v1alpha1 from group management in scope Environment",
        "description" : "Update Webhook for version v1alpha1 from group management in scope Environment",
        "operationId" : "update_management_v1alpha1_Environment_Webhook",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.Webhook resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.Webhook"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Update Webhook for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.Webhook"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/environments/{environmentName}/webhooks/{name}/{extension}" : {
      "parameters" : [ {
        "name" : "environmentName",
        "description" : "Name of the Environment",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "name" : "extension",
        "description" : "Name of the extension",
        "in" : "path",
        "schema" : {
          "type" : "string",
          "pattern" : "x-.*"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the Webhook",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves Extension resource data of Webhook for version v1alpha1 from group management in scope Environment",
        "description" : "Retrieves Extension resource data of Webhook for version v1alpha1 from group management in scope Environment",
        "operationId" : "read_management_v1alpha1_Environment_Webhook_extension",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.Webhook resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read Extension resource data of Webhook for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.Webhook"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update Extension resource data of Webhook for version v1alpha1 from group management in scope Environment",
        "description" : "Update Extension resource data of Webhook for version v1alpha1 from group management in scope Environment",
        "operationId" : "update_management_v1alpha1_Environment_Webhook_extension",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.Webhook resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.Webhook"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Updated Extension resource data of Webhook for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.Webhook"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/integrations/{integrationName}/webhooks" : {
      "parameters" : [ {
        "name" : "integrationName",
        "description" : "Name of the Integration",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves Webhook for version v1alpha1 from group management in scope Integration",
        "description" : "Retrieves Webhook for version v1alpha1 from group management in scope Integration",
        "operationId" : "list_management_v1alpha1_Integration_Webhook",
        "tags" : [ "management" ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/pageNumberParam"
        }, {
          "$ref" : "#/components/parameters/pageSizeParam"
        }, {
          "$ref" : "#/components/parameters/sortParam"
        }, {
          "$ref" : "#/components/parameters/queryParam"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.Webhook resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List all resources of type Webhook for version v1alpha1 from group management in scope Integration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/management.v1alpha1.Webhook"
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "post" : {
        "summary" : "Create Webhook for version v1alpha1 from group management in scope Integration",
        "description" : "Create Webhook for version v1alpha1 from group management in scope Integration",
        "operationId" : "create_management_v1alpha1_Integration_Webhook",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.Webhook resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.Webhook"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Create a new Webhook for version v1alpha1 from group management in scope Integration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.Webhook"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "409" : {
            "$ref" : "#/components/responses/Conflict"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/integrations/{integrationName}/webhooks/{name}" : {
      "parameters" : [ {
        "name" : "integrationName",
        "description" : "Name of the Integration",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the Webhook",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves Webhook for version v1alpha1 from group management in scope Integration",
        "description" : "Retrieves Webhook for version v1alpha1 from group management in scope Integration",
        "operationId" : "read_management_v1alpha1_Integration_Webhook",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.Webhook resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read Webhook for version v1alpha1 from group management in scope Integration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.Webhook"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "delete" : {
        "summary" : "Remove Webhook for version v1alpha1 from group management in scope Integration",
        "description" : "Remove Webhook for version v1alpha1 from group management in scope Integration",
        "operationId" : "remove_management_v1alpha1_Integration_Webhook",
        "tags" : [ "management" ],
        "responses" : {
          "202" : {
            "description" : "Accepted removing Webhook for version v1alpha1 from group management in scope Integration. Dependent resources found, clean up will finish once all dependent resources have been removed"
          },
          "204" : {
            "description" : "Removed Webhook for version v1alpha1 from group management in scope Integration"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update Webhook for version v1alpha1 from group management in scope Integration",
        "description" : "Update Webhook for version v1alpha1 from group management in scope Integration",
        "operationId" : "update_management_v1alpha1_Integration_Webhook",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.Webhook resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.Webhook"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Update Webhook for version v1alpha1 from group management in scope Integration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.Webhook"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/integrations/{integrationName}/webhooks/{name}/{extension}" : {
      "parameters" : [ {
        "name" : "integrationName",
        "description" : "Name of the Integration",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "name" : "extension",
        "description" : "Name of the extension",
        "in" : "path",
        "schema" : {
          "type" : "string",
          "pattern" : "x-.*"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the Webhook",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves Extension resource data of Webhook for version v1alpha1 from group management in scope Integration",
        "description" : "Retrieves Extension resource data of Webhook for version v1alpha1 from group management in scope Integration",
        "operationId" : "read_management_v1alpha1_Integration_Webhook_extension",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.Webhook resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read Extension resource data of Webhook for version v1alpha1 from group management in scope Integration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.Webhook"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update Extension resource data of Webhook for version v1alpha1 from group management in scope Integration",
        "description" : "Update Extension resource data of Webhook for version v1alpha1 from group management in scope Integration",
        "operationId" : "update_management_v1alpha1_Integration_Webhook_extension",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.Webhook resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.Webhook"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Updated Extension resource data of Webhook for version v1alpha1 from group management in scope Integration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.Webhook"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/environments/{environmentName}/secrets" : {
      "parameters" : [ {
        "name" : "environmentName",
        "description" : "Name of the Environment",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves Secret for version v1alpha1 from group management in scope Environment",
        "description" : "Retrieves Secret for version v1alpha1 from group management in scope Environment",
        "operationId" : "list_management_v1alpha1_Environment_Secret",
        "tags" : [ "management" ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/pageNumberParam"
        }, {
          "$ref" : "#/components/parameters/pageSizeParam"
        }, {
          "$ref" : "#/components/parameters/sortParam"
        }, {
          "$ref" : "#/components/parameters/queryParam"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.Secret resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List all resources of type Secret for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/management.v1alpha1.Secret"
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "post" : {
        "summary" : "Create Secret for version v1alpha1 from group management in scope Environment",
        "description" : "Create Secret for version v1alpha1 from group management in scope Environment",
        "operationId" : "create_management_v1alpha1_Environment_Secret",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.Secret resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.Secret"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Create a new Secret for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.Secret"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "409" : {
            "$ref" : "#/components/responses/Conflict"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/environments/{environmentName}/secrets/{name}" : {
      "parameters" : [ {
        "name" : "environmentName",
        "description" : "Name of the Environment",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the Secret",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves Secret for version v1alpha1 from group management in scope Environment",
        "description" : "Retrieves Secret for version v1alpha1 from group management in scope Environment",
        "operationId" : "read_management_v1alpha1_Environment_Secret",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.Secret resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read Secret for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.Secret"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "delete" : {
        "summary" : "Remove Secret for version v1alpha1 from group management in scope Environment",
        "description" : "Remove Secret for version v1alpha1 from group management in scope Environment",
        "operationId" : "remove_management_v1alpha1_Environment_Secret",
        "tags" : [ "management" ],
        "responses" : {
          "202" : {
            "description" : "Accepted removing Secret for version v1alpha1 from group management in scope Environment. Dependent resources found, clean up will finish once all dependent resources have been removed"
          },
          "204" : {
            "description" : "Removed Secret for version v1alpha1 from group management in scope Environment"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update Secret for version v1alpha1 from group management in scope Environment",
        "description" : "Update Secret for version v1alpha1 from group management in scope Environment",
        "operationId" : "update_management_v1alpha1_Environment_Secret",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.Secret resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.Secret"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Update Secret for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.Secret"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/environments/{environmentName}/secrets/{name}/{extension}" : {
      "parameters" : [ {
        "name" : "environmentName",
        "description" : "Name of the Environment",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "name" : "extension",
        "description" : "Name of the extension",
        "in" : "path",
        "schema" : {
          "type" : "string",
          "pattern" : "x-.*"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the Secret",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves Extension resource data of Secret for version v1alpha1 from group management in scope Environment",
        "description" : "Retrieves Extension resource data of Secret for version v1alpha1 from group management in scope Environment",
        "operationId" : "read_management_v1alpha1_Environment_Secret_extension",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.Secret resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read Extension resource data of Secret for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.Secret"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update Extension resource data of Secret for version v1alpha1 from group management in scope Environment",
        "description" : "Update Extension resource data of Secret for version v1alpha1 from group management in scope Environment",
        "operationId" : "update_management_v1alpha1_Environment_Secret_extension",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.Secret resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.Secret"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Updated Extension resource data of Secret for version v1alpha1 from group management in scope Environment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.Secret"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/integrations/{integrationName}/secrets" : {
      "parameters" : [ {
        "name" : "integrationName",
        "description" : "Name of the Integration",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves Secret for version v1alpha1 from group management in scope Integration",
        "description" : "Retrieves Secret for version v1alpha1 from group management in scope Integration",
        "operationId" : "list_management_v1alpha1_Integration_Secret",
        "tags" : [ "management" ],
        "parameters" : [ {
          "$ref" : "#/components/parameters/pageNumberParam"
        }, {
          "$ref" : "#/components/parameters/pageSizeParam"
        }, {
          "$ref" : "#/components/parameters/sortParam"
        }, {
          "$ref" : "#/components/parameters/queryParam"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.Secret resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List all resources of type Secret for version v1alpha1 from group management in scope Integration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/management.v1alpha1.Secret"
                  }
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "post" : {
        "summary" : "Create Secret for version v1alpha1 from group management in scope Integration",
        "description" : "Create Secret for version v1alpha1 from group management in scope Integration",
        "operationId" : "create_management_v1alpha1_Integration_Secret",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.Secret resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.Secret"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Create a new Secret for version v1alpha1 from group management in scope Integration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.Secret"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "409" : {
            "$ref" : "#/components/responses/Conflict"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/integrations/{integrationName}/secrets/{name}" : {
      "parameters" : [ {
        "name" : "integrationName",
        "description" : "Name of the Integration",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the Secret",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves Secret for version v1alpha1 from group management in scope Integration",
        "description" : "Retrieves Secret for version v1alpha1 from group management in scope Integration",
        "operationId" : "read_management_v1alpha1_Integration_Secret",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.Secret resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read Secret for version v1alpha1 from group management in scope Integration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.Secret"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "delete" : {
        "summary" : "Remove Secret for version v1alpha1 from group management in scope Integration",
        "description" : "Remove Secret for version v1alpha1 from group management in scope Integration",
        "operationId" : "remove_management_v1alpha1_Integration_Secret",
        "tags" : [ "management" ],
        "responses" : {
          "202" : {
            "description" : "Accepted removing Secret for version v1alpha1 from group management in scope Integration. Dependent resources found, clean up will finish once all dependent resources have been removed"
          },
          "204" : {
            "description" : "Removed Secret for version v1alpha1 from group management in scope Integration"
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update Secret for version v1alpha1 from group management in scope Integration",
        "description" : "Update Secret for version v1alpha1 from group management in scope Integration",
        "operationId" : "update_management_v1alpha1_Integration_Secret",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.Secret resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec, {extension}. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.Secret"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Update Secret for version v1alpha1 from group management in scope Integration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.Secret"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/management/v1alpha1/integrations/{integrationName}/secrets/{name}/{extension}" : {
      "parameters" : [ {
        "name" : "integrationName",
        "description" : "Name of the Integration",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "name" : "extension",
        "description" : "Name of the extension",
        "in" : "path",
        "schema" : {
          "type" : "string",
          "pattern" : "x-.*"
        },
        "required" : true
      }, {
        "name" : "name",
        "description" : "The name of the Secret",
        "in" : "path",
        "schema" : {
          "type" : "string"
        },
        "required" : true
      }, {
        "$ref" : "#/components/parameters/TenantHeader"
      } ],
      "get" : {
        "summary" : "Retrieves Extension resource data of Secret for version v1alpha1 from group management in scope Integration",
        "description" : "Retrieves Extension resource data of Secret for version v1alpha1 from group management in scope Integration",
        "operationId" : "read_management_v1alpha1_Integration_Secret_extension",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.Secret resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Read Extension resource data of Secret for version v1alpha1 from group management in scope Integration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.Secret"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      },
      "put" : {
        "summary" : "Update Extension resource data of Secret for version v1alpha1 from group management in scope Integration",
        "description" : "Update Extension resource data of Secret for version v1alpha1 from group management in scope Integration",
        "operationId" : "update_management_v1alpha1_Integration_Secret_extension",
        "tags" : [ "management" ],
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "Query string for restricting the response fields from the management.v1alpha1.Secret resource. Multiple values can be specified separated by comma. Supported values: group, apiVersion, kind, name, title, metadata, attributes, tags, spec. Unknown values will be ignored.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/management.v1alpha1.Secret"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Updated Extension resource data of Secret for version v1alpha1 from group management in scope Integration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/management.v1alpha1.Secret"
                }
              }
            }
          },
          "400" : {
            "$ref" : "#/components/responses/BadRequest"
          },
          "401" : {
            "$ref" : "#/components/responses/Unauthorized"
          },
          "403" : {
            "$ref" : "#/components/responses/Forbidden"
          },
          "404" : {
            "$ref" : "#/components/responses/NotFound"
          },
          "500" : {
            "$ref" : "#/components/responses/InternalServerError"
          }
        }
      }
    }
  },
  "components" : {
    "parameters" : {
      "pageNumberParam" : {
        "name" : "page",
        "in" : "query",
        "description" : "The offset starting page number in the result set to start returning results from, starts at 1.",
        "required" : false,
        "schema" : {
          "type" : "integer",
          "default" : 1
        }
      },
      "pageSizeParam" : {
        "name" : "pageSize",
        "in" : "query",
        "description" : "The number of entities allowed in a page.",
        "required" : false,
        "schema" : {
          "type" : "integer",
          "default" : 20
        }
      },
      "sortParam" : {
        "name" : "sort",
        "in" : "query",
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "description" : "The field to sort result sets by, in ASC or DESC order.\nAllowed fields for sorting:\n        name\n        title\n        metadata.audit.createTimestamp\n        metadata.audit.modifyTimestamp"
      },
      "queryParam" : {
        "name" : "query",
        "in" : "query",
        "description" : "Query string for filtering entity. Expressed in FIQL/RSQL language. Supported filters on resources:\n  * name\n  * title\n  * tags\n  * attributes\n  * metadata.id\n  * metadata.references.id\n  * metadata.references.kind\n  * metadata.references.name\n  * metadata.resourceVersion\n  * metadata.audit.createTimestamp - Date filter must be provided as epoch time or yyyy-MM-dd'T'HH:mm:ss.SSSZZZZ\n  * metadata.audit.modifyTimestamp - Date filter must be provided as epoch time or yyyy-MM-dd'T'HH:mm:ss.SSSZZZZ\n\nDocumentation link to help with multiple values for query: https://github.com/jirutka/rsql-parser\n",
        "required" : false,
        "schema" : {
          "type" : "string"
        }
      },
      "TenantHeader" : {
        "name" : "X-Axway-Tenant-Id",
        "in" : "header",
        "schema" : {
          "type" : "string",
          "maxLength" : 36
        },
        "required" : true,
        "description" : "The platform Organization ID."
      }
    },
    "responses" : {
      "BadRequest" : {
        "description" : "Failed to validate request parameters.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/api.v1.ErrorResponse"
            }
          }
        }
      },
      "Unauthorized" : {
        "description" : "Unauthorized. A valid authorization header was not provided with the request to authenticate.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/api.v1.ErrorResponse"
            }
          }
        }
      },
      "Forbidden" : {
        "description" : "Forbidden, the user does not have the correct permissions to call this API.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/api.v1.ErrorResponse"
            }
          }
        }
      },
      "NotFound" : {
        "description" : "The resource specified could not be found.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/api.v1.ErrorResponse"
            }
          }
        }
      },
      "Conflict" : {
        "description" : "Request conflicts with the current state of the server.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/api.v1.ErrorResponse"
            }
          }
        }
      },
      "InternalServerError" : {
        "description" : "Unexpected internal server error.",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/api.v1.ErrorResponse"
            }
          }
        }
      }
    },
    "securitySchemes" : {
      "token" : {
        "type" : "http",
        "scheme" : "bearer",
        "description" : "Authenticated platform bearer token."
      }
    },
    "schemas" : {
      "api.v1.ErrorResponse" : {
        "title" : "api.v1.ErrorResponse",
        "description" : "Detail for standard error responses.",
        "type" : "object",
        "additionalProperties" : true,
        "properties" : {
          "errors" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "additionalProperties" : true,
              "properties" : {
                "status" : {
                  "type" : "integer"
                },
                "title" : {
                  "type" : "string"
                },
                "detail" : {
                  "type" : "string"
                },
                "meta" : {
                  "type" : "object",
                  "additionalProperties" : true,
                  "properties" : {
                    "tenantId" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "api.v1.Metadata" : {
        "type" : "object",
        "description" : "Metadata that all server resources have. Data is generated by the server.",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Internal id of the resource."
          },
          "audit" : {
            "$ref" : "#/components/schemas/api.v1.AuditMetadata"
          },
          "scope" : {
            "type" : "object",
            "description" : "The scope where this resource was defined.",
            "properties" : {
              "id" : {
                "type" : "string",
                "maxLength" : 32,
                "description" : "Internal id of the scope resource where the resource is defined."
              },
              "kind" : {
                "type" : "string",
                "maxLength" : 30,
                "description" : "The kind of the scope resource where the resource is defined."
              },
              "name" : {
                "type" : "string",
                "maxLength" : 100,
                "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
                "description" : "The name of the scope where the resource is defined."
              },
              "selfLink" : {
                "type" : "string",
                "description" : "The URL representing the scope resource object."
              }
            }
          },
          "resourceVersion" : {
            "type" : "string",
            "description" : "Internal version of this object that can be used by clients to determine when objects have changed.",
            "maxLength" : 20
          },
          "references" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/api.v1.Reference"
            }
          },
          "state" : {
            "type" : "string",
            "description" : "Defines the state of the resource. If present, indicates if the resource is in Deleting state."
          },
          "selfLink" : {
            "type" : "string",
            "description" : "The URL representing this resource object."
          }
        },
        "readOnly" : true
      },
      "api.v1.Reference" : {
        "type" : "object",
        "description" : "List of objects dependent by this object.",
        "properties" : {
          "id" : {
            "type" : "string",
            "maxLength" : 32,
            "description" : "Unique id generated by the server."
          },
          "kind" : {
            "type" : "string",
            "maxLength" : 30,
            "description" : "The kind of the referenced resource."
          },
          "name" : {
            "type" : "string",
            "maxLength" : 100,
            "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
            "description" : "The name of the referenced resource."
          },
          "selfLink" : {
            "type" : "string",
            "description" : "The URL representing the referenced resource."
          },
          "type" : {
            "type" : "string",
            "default" : "hard",
            "description" : "Defines the type of the reference: * soft - spec property that has this reference will get nulled out if the referenced resource gets removed. * hard - dictates that the current resource will get removed when the referenced resource gets removed.\n",
            "enum" : [ "soft", "hard" ]
          }
        },
        "readOnly" : true
      },
      "api.v1.AuditMetadata" : {
        "title" : "api.v1.AuditMetadata",
        "description" : "Read-only metadata for the record.",
        "properties" : {
          "createTimestamp" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The creation time."
          },
          "createUserId" : {
            "type" : "string",
            "description" : "Id of the user that created the entity.",
            "minLength" : 1,
            "maxLength" : 38
          },
          "modifyTimestamp" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The last modification time."
          },
          "modifyUserId" : {
            "type" : "string",
            "description" : "Id of the user that last modified the entity.",
            "minLength" : 1,
            "maxLength" : 38
          }
        },
        "readOnly" : true,
        "type" : "object"
      },
      "api.v1.Attributes" : {
        "title" : "api.v1.Attributes",
        "description" : "Custom attributes added to objects.",
        "type" : "object",
        "additionalProperties" : {
          "type" : "string"
        }
      },
      "api.v1.Finalizer" : {
        "description" : "Finalizer on the API server resource.",
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "minLength" : 1,
            "maxLength" : 100
          },
          "description" : {
            "type" : "string",
            "maxLength" : 350
          }
        },
        "required" : [ "name" ]
      },
      "api.v1.ResourceInstance" : {
        "description" : "API Server generic resource structure.",
        "properties" : {
          "group" : {
            "type" : "string",
            "maxLength" : 80,
            "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
            "description" : "Defines the group from which the resource belongs to. The server infers this from the endpoint the client submits the request to."
          },
          "apiVersion" : {
            "type" : "string",
            "maxLength" : 20,
            "description" : "Defines the structure of the resource. The server infers this from the endpoint the client submits the request to."
          },
          "kind" : {
            "type" : "string",
            "maxLength" : 30,
            "description" : "Defines the kind of the resource. The server infers this from the endpoint the client submits the request to."
          },
          "name" : {
            "type" : "string",
            "maxLength" : 100,
            "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*"
          },
          "title" : {
            "type" : "string",
            "maxLength" : 350
          },
          "metadata" : {
            "$ref" : "#/components/schemas/api.v1.Metadata"
          },
          "attributes" : {
            "$ref" : "#/components/schemas/api.v1.Attributes"
          },
          "finalizers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/api.v1.Finalizer"
            }
          },
          "tags" : {
            "type" : "array",
            "description" : "List of tags.",
            "items" : {
              "type" : "string",
              "minLength" : 1,
              "maxLength" : 80
            }
          },
          "spec" : {
            "type" : "object",
            "description" : "Resource instance specs."
          }
        },
        "additionalProperties" : {
          "type" : "object"
        },
        "required" : [ "name", "spec" ]
      },
      "management.v1alpha1.EdgeDataplane" : {
        "description" : "Definition of EdgeDataplane for version v1alpha1 in group management. \n\n Resource representing Axway Edge API Gateway dataplane",
        "type" : "object",
        "x-axway-group" : "management",
        "x-axway-version" : "v1alpha1",
        "x-axway-kind" : "EdgeDataplane",
        "x-axway-plural" : "edgedataplanes",
        "x-axway-scoped" : true,
        "x-axway-scopes" : [ {
          "kind" : "Environment",
          "plural" : "environments"
        } ],
        "x-axway-references" : {
          "fromResources" : [ {
            "group" : "management",
            "kind" : "EdgeTraceabilityAgent",
            "plural" : "edgetraceabilityagents",
            "versions" : [ "v1alpha1" ],
            "types" : [ "HARD" ]
          }, {
            "group" : "management",
            "kind" : "EdgeDiscoveryAgent",
            "plural" : "edgediscoveryagents",
            "versions" : [ "v1alpha1" ],
            "types" : [ "HARD" ]
          } ],
          "toResources" : [ ]
        },
        "properties" : {
          "group" : {
            "type" : "string",
            "maxLength" : 80,
            "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
            "readOnly" : true,
            "description" : "Resource belongs to the management group. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "management"
          },
          "apiVersion" : {
            "type" : "string",
            "maxLength" : 20,
            "readOnly" : true,
            "description" : "Resource version is v1alpha1. The version defines the structure of the resource. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "v1alpha1"
          },
          "kind" : {
            "type" : "string",
            "maxLength" : 30,
            "readOnly" : true,
            "description" : "Resource of kind EdgeDataplane. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "EdgeDataplane"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 100,
            "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
            "description" : "Name of the EdgeDataplane. EdgeDataplane name is unique and cannot be updated. The characters allowed in names are: digits (0-9), lower case letters (a-z), -, and ."
          },
          "title" : {
            "type" : "string",
            "maxLength" : 350,
            "description" : "The friendly name of the EdgeDataplane."
          },
          "metadata" : {
            "$ref" : "#/components/schemas/api.v1.Metadata"
          },
          "finalizers" : {
            "type" : "array",
            "description" : "List of finalizers",
            "items" : {
              "$ref" : "#/components/schemas/api.v1.Finalizer"
            }
          },
          "attributes" : {
            "$ref" : "#/components/schemas/api.v1.Attributes"
          },
          "tags" : {
            "type" : "array",
            "description" : "List of tags.",
            "items" : {
              "type" : "string",
              "minLength" : 1,
              "maxLength" : 80
            }
          },
          "spec" : {
            "$ref" : "#/components/schemas/management.v1alpha1.EdgeDataplaneSpec"
          }
        },
        "required" : [ "name", "spec" ]
      },
      "management.v1alpha1.EdgeDataplaneSpec" : {
        "type" : "object",
        "properties" : {
          "apiManager" : {
            "type" : "object",
            "description" : "Axway API Manager configuration.",
            "properties" : {
              "host" : {
                "type" : "string",
                "description" : "The host name where Axway API Manager is deployed"
              },
              "port" : {
                "type" : "integer",
                "description" : "The Axway API Manager admin port. Defaults to 8075"
              },
              "pollInterval" : {
                "type" : "string",
                "description" : "Interval the agent will poll the Axway API Manager. Defaults to '30s' indicating 30 seconds The value is a sequence of number with unit suffix. Example '30s', '1m30s'. Valid units:\n * 'h' - Hours\n * 'm' - Minutes\n * 's' - Seconds\n",
                "pattern" : "^(?:\\d+h)?(\\d+m?)?(\\d+s)?$"
              }
            }
          },
          "apiGatewayManager" : {
            "type" : "object",
            "description" : "Axway API Gateway Manager configuration.",
            "properties" : {
              "host" : {
                "type" : "string",
                "description" : "The host name where Axway API Gateway Manager is deployed"
              },
              "port" : {
                "type" : "integer",
                "description" : "The Axway API Gateway Manager admin port. Defaults to 8090"
              },
              "pollInterval" : {
                "type" : "string",
                "description" : "Interval the agent will poll API Gateway. Defaults to '1m' indicating 1 minute. The value is a sequence of number with unit suffix. Example '30s', '1m30s'. Valid units:\n * 'h' - Hours\n * 'm' - Minutes\n * 's' - Seconds\n",
                "pattern" : "^(?:\\d+h)?(\\d+m?)?(\\d+s)?$"
              }
            }
          }
        },
        "additionalProperties" : false
      },
      "management.v1alpha1.EdgeDiscoveryAgent" : {
        "description" : "Definition of EdgeDiscoveryAgent for version v1alpha1 in group management. \n\n Resource representing Axway Edge API Gateway discovery agent",
        "type" : "object",
        "x-axway-group" : "management",
        "x-axway-version" : "v1alpha1",
        "x-axway-kind" : "EdgeDiscoveryAgent",
        "x-axway-plural" : "edgediscoveryagents",
        "x-axway-scoped" : true,
        "x-axway-subresources" : [ "status" ],
        "x-axway-scopes" : [ {
          "kind" : "Environment",
          "plural" : "environments"
        } ],
        "x-axway-references" : {
          "fromResources" : [ ],
          "toResources" : [ {
            "group" : "management",
            "kind" : "EdgeDataplane",
            "plural" : "edgedataplanes",
            "versions" : [ "v1alpha1" ],
            "types" : [ "HARD" ]
          } ]
        },
        "properties" : {
          "group" : {
            "type" : "string",
            "maxLength" : 80,
            "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
            "readOnly" : true,
            "description" : "Resource belongs to the management group. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "management"
          },
          "apiVersion" : {
            "type" : "string",
            "maxLength" : 20,
            "readOnly" : true,
            "description" : "Resource version is v1alpha1. The version defines the structure of the resource. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "v1alpha1"
          },
          "kind" : {
            "type" : "string",
            "maxLength" : 30,
            "readOnly" : true,
            "description" : "Resource of kind EdgeDiscoveryAgent. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "EdgeDiscoveryAgent"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 100,
            "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
            "description" : "Name of the EdgeDiscoveryAgent. EdgeDiscoveryAgent name is unique and cannot be updated. The characters allowed in names are: digits (0-9), lower case letters (a-z), -, and ."
          },
          "title" : {
            "type" : "string",
            "maxLength" : 350,
            "description" : "The friendly name of the EdgeDiscoveryAgent."
          },
          "metadata" : {
            "$ref" : "#/components/schemas/api.v1.Metadata"
          },
          "finalizers" : {
            "type" : "array",
            "description" : "List of finalizers",
            "items" : {
              "$ref" : "#/components/schemas/api.v1.Finalizer"
            }
          },
          "attributes" : {
            "$ref" : "#/components/schemas/api.v1.Attributes"
          },
          "tags" : {
            "type" : "array",
            "description" : "List of tags.",
            "items" : {
              "type" : "string",
              "minLength" : 1,
              "maxLength" : 80
            }
          },
          "spec" : {
            "$ref" : "#/components/schemas/management.v1alpha1.EdgeDiscoveryAgentSpec"
          },
          "status" : {
            "$ref" : "#/components/schemas/management.v1alpha1.EdgeDiscoveryAgentStatus"
          }
        },
        "required" : [ "name", "spec" ]
      },
      "management.v1alpha1.EdgeDiscoveryAgentSpec" : {
        "type" : "object",
        "properties" : {
          "dataplane" : {
            "type" : "string",
            "description" : "The name of the Axway Edge API Gateway dataplane associated to this agent",
            "x-amplify-kind-ref" : "EdgeDataplane"
          },
          "config" : {
            "type" : "object",
            "description" : "Represents the Axway Edge API Gateway discovery agent config",
            "properties" : {
              "filter" : {
                "type" : "string",
                "description" : "Defines the filter expression to be evaluated for discovering the API from Axway Edge API Gateway The filter value is a conditional expression that can use logical operators to compare two value. The conditional expression must have \"tag\" as the prefix/selector in the symbol name. For e.g.\n``` tag.SOME_TAG == \"somevalue\" ```\nThe expression can be a simple condition as shown above or compound condition in which more than one simple conditions are evaluated using logical operator.\nFor e.g.\n``` tag.SOME_TAG == \"somevalue\" || tag.ANOTHER_TAG != \"some_other_value\" ```\nIn addition to logical expression, the filter can hold call based expressions. Below are the list of supported call expressions\n#### Exists\nExists call can be made to evaluate if the tag name exists in the list of tags on API. This call expression can be used as unary expression For e.g.\n``` tag.SOME_TAG.Exists() ```\n#### Any\nAny call can be made in a simple expression to evaluate if the tag with any name has specified value or not in the list of tags on the API. For e.g.\n``` tag.Any() == \"Tag with some value\" || tag.Any() != \"Tag with other value\" ```\n#### Contains\nContains call can be made in a simple expression to evaluate if the the specified tag contains specified argument as value. This call expression requires string argument that will be used to perform lookup in tag value For e.g.\n``` tag.Contains(\"somevalue\") ```\n#### MatchRegEx\nMatchRegEx call can be used for evaluating the specified tag value to match specified regular expression. This call expression requires a regular expression as the argument. For e.g.\n``` tag.MatchRegEx(\"(some){1}\") ```\n"
              },
              "additionalTags" : {
                "type" : "array",
                "description" : "The list of tags to be added to the API service resource that the agent publishes to Amplify Central",
                "items" : {
                  "type" : "string"
                }
              },
              "ignoreTags" : {
                "type" : "array",
                "description" : "The list of tags to exclude from the API service resource that the agent publishes to Amplify Central",
                "items" : {
                  "type" : "string"
                }
              },
              "owningTeam" : {
                "type" : "string",
                "description" : "Name of the team that owns the catalog item created by agent. If not provided, the default team will be used."
              }
            }
          },
          "logging" : {
            "type" : "object",
            "description" : "Logging config",
            "properties" : {
              "level" : {
                "type" : "string",
                "description" : "Defines the log level.",
                "enum" : [ "error", "warn", "info", "debug" ]
              }
            }
          }
        },
        "required" : [ "dataplane", "config" ],
        "additionalProperties" : false
      },
      "management.v1alpha1.EdgeDiscoveryAgentStatus" : {
        "type" : "object",
        "properties" : {
          "version" : {
            "type" : "string",
            "description" : "Version name for the agent revision.",
            "maxLength" : 255,
            "pattern" : "^(?!\\s).*(?<!\\s)$"
          },
          "state" : {
            "type" : "string",
            "description" : "Agent status:\n * running - Passed all health checks.  Up and running\n * stopped - Agent is not running\n * failed - Failed health checks\n",
            "enum" : [ "running", "stopped", "failed" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A way to communicate details about the current status by the agent"
          }
        }
      },
      "management.v1alpha1.EdgeTraceabilityAgent" : {
        "description" : "Definition of EdgeTraceabilityAgent for version v1alpha1 in group management. \n\n Resource representing Axway Edge API Gateway traceability agent",
        "type" : "object",
        "x-axway-group" : "management",
        "x-axway-version" : "v1alpha1",
        "x-axway-kind" : "EdgeTraceabilityAgent",
        "x-axway-plural" : "edgetraceabilityagents",
        "x-axway-scoped" : true,
        "x-axway-subresources" : [ "status" ],
        "x-axway-scopes" : [ {
          "kind" : "Environment",
          "plural" : "environments"
        } ],
        "x-axway-references" : {
          "fromResources" : [ ],
          "toResources" : [ {
            "group" : "management",
            "kind" : "EdgeDataplane",
            "plural" : "edgedataplanes",
            "versions" : [ "v1alpha1" ],
            "types" : [ "HARD" ]
          } ]
        },
        "properties" : {
          "group" : {
            "type" : "string",
            "maxLength" : 80,
            "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
            "readOnly" : true,
            "description" : "Resource belongs to the management group. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "management"
          },
          "apiVersion" : {
            "type" : "string",
            "maxLength" : 20,
            "readOnly" : true,
            "description" : "Resource version is v1alpha1. The version defines the structure of the resource. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "v1alpha1"
          },
          "kind" : {
            "type" : "string",
            "maxLength" : 30,
            "readOnly" : true,
            "description" : "Resource of kind EdgeTraceabilityAgent. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "EdgeTraceabilityAgent"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 100,
            "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
            "description" : "Name of the EdgeTraceabilityAgent. EdgeTraceabilityAgent name is unique and cannot be updated. The characters allowed in names are: digits (0-9), lower case letters (a-z), -, and ."
          },
          "title" : {
            "type" : "string",
            "maxLength" : 350,
            "description" : "The friendly name of the EdgeTraceabilityAgent."
          },
          "metadata" : {
            "$ref" : "#/components/schemas/api.v1.Metadata"
          },
          "finalizers" : {
            "type" : "array",
            "description" : "List of finalizers",
            "items" : {
              "$ref" : "#/components/schemas/api.v1.Finalizer"
            }
          },
          "attributes" : {
            "$ref" : "#/components/schemas/api.v1.Attributes"
          },
          "tags" : {
            "type" : "array",
            "description" : "List of tags.",
            "items" : {
              "type" : "string",
              "minLength" : 1,
              "maxLength" : 80
            }
          },
          "spec" : {
            "$ref" : "#/components/schemas/management.v1alpha1.EdgeTraceabilityAgentSpec"
          },
          "status" : {
            "$ref" : "#/components/schemas/management.v1alpha1.EdgeTraceabilityAgentStatus"
          }
        },
        "required" : [ "name", "spec" ]
      },
      "management.v1alpha1.EdgeTraceabilityAgentSpec" : {
        "type" : "object",
        "properties" : {
          "dataplane" : {
            "type" : "string",
            "description" : "The name of the Axway Edge API Gateway dataplane associated to this agent",
            "x-amplify-kind-ref" : "EdgeDataplane"
          },
          "config" : {
            "type" : "object",
            "description" : "Represents the Axway Edge API Gateway traceability agent config",
            "properties" : {
              "processHeaders" : {
                "type" : "boolean",
                "description" : "Configures the agent to include request and response headers in captured traffic. Defaults to true"
              },
              "excludeHeaders" : {
                "type" : "array",
                "description" : "List of header names that will not be included in the captured traffic by the agent",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "logging" : {
            "type" : "object",
            "description" : "Logging config",
            "properties" : {
              "level" : {
                "type" : "string",
                "description" : "Defines the log level.",
                "enum" : [ "error", "warn", "info", "debug" ]
              }
            }
          }
        },
        "required" : [ "dataplane", "config" ],
        "additionalProperties" : false
      },
      "management.v1alpha1.EdgeTraceabilityAgentStatus" : {
        "type" : "object",
        "properties" : {
          "version" : {
            "type" : "string",
            "description" : "Version name for the agent revision.",
            "maxLength" : 255,
            "pattern" : "^(?!\\s).*(?<!\\s)$"
          },
          "state" : {
            "type" : "string",
            "description" : "Agent status:\n * running - Passed all health checks.  Up and running\n * stopped - Agent is not running\n * failed - Failed health checks\n",
            "enum" : [ "running", "stopped", "failed" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A way to communicate details about the current status by the agent"
          }
        }
      },
      "management.v1alpha1.Environment" : {
        "description" : "Definition of Environment for version v1alpha1 in group management. \n\n Resource representing an Amplify Central Environment.",
        "type" : "object",
        "x-axway-group" : "management",
        "x-axway-version" : "v1alpha1",
        "x-axway-kind" : "Environment",
        "x-axway-plural" : "environments",
        "x-axway-scoped" : false,
        "x-axway-references" : {
          "fromResources" : [ ],
          "toResources" : [ ]
        },
        "properties" : {
          "group" : {
            "type" : "string",
            "maxLength" : 80,
            "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
            "readOnly" : true,
            "description" : "Resource belongs to the management group. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "management"
          },
          "apiVersion" : {
            "type" : "string",
            "maxLength" : 20,
            "readOnly" : true,
            "description" : "Resource version is v1alpha1. The version defines the structure of the resource. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "v1alpha1"
          },
          "kind" : {
            "type" : "string",
            "maxLength" : 30,
            "readOnly" : true,
            "description" : "Resource of kind Environment. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "Environment"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 100,
            "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
            "description" : "Name of the Environment. Environment name is unique and cannot be updated. The characters allowed in names are: digits (0-9), lower case letters (a-z), -, and ."
          },
          "title" : {
            "type" : "string",
            "maxLength" : 350,
            "description" : "The friendly name of the Environment."
          },
          "metadata" : {
            "$ref" : "#/components/schemas/api.v1.Metadata"
          },
          "finalizers" : {
            "type" : "array",
            "description" : "List of finalizers",
            "items" : {
              "$ref" : "#/components/schemas/api.v1.Finalizer"
            }
          },
          "attributes" : {
            "$ref" : "#/components/schemas/api.v1.Attributes"
          },
          "tags" : {
            "type" : "array",
            "description" : "List of tags.",
            "items" : {
              "type" : "string",
              "minLength" : 1,
              "maxLength" : 80
            }
          },
          "spec" : {
            "$ref" : "#/components/schemas/management.v1alpha1.EnvironmentSpec"
          }
        },
        "required" : [ "name", "spec" ]
      },
      "management.v1alpha1.EnvironmentSpec" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string"
          },
          "variables" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "icon" : {
            "type" : "object",
            "description" : "Image for the Environment.",
            "properties" : {
              "contentType" : {
                "description" : "Content-Type of the image.",
                "type" : "string",
                "enum" : [ "image/jpeg", "image/png" ]
              },
              "data" : {
                "description" : "Base64 encoded image.",
                "type" : "string",
                "format" : "base64"
              }
            },
            "additionalProperties" : false
          }
        },
        "additionalProperties" : false
      },
      "management.v1alpha1.APIService" : {
        "description" : "Definition of APIService for version v1alpha1 in group management. \n\n Resource representing an Amplify Central API Service",
        "type" : "object",
        "x-axway-group" : "management",
        "x-axway-version" : "v1alpha1",
        "x-axway-kind" : "APIService",
        "x-axway-plural" : "apiservices",
        "x-axway-scoped" : true,
        "x-axway-scopes" : [ {
          "kind" : "Environment",
          "plural" : "environments"
        } ],
        "x-axway-references" : {
          "fromResources" : [ {
            "group" : "management",
            "kind" : "APIServiceRevision",
            "plural" : "apiservicerevisions",
            "versions" : [ "v1alpha1" ],
            "types" : [ "HARD" ]
          } ],
          "toResources" : [ ]
        },
        "properties" : {
          "group" : {
            "type" : "string",
            "maxLength" : 80,
            "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
            "readOnly" : true,
            "description" : "Resource belongs to the management group. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "management"
          },
          "apiVersion" : {
            "type" : "string",
            "maxLength" : 20,
            "readOnly" : true,
            "description" : "Resource version is v1alpha1. The version defines the structure of the resource. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "v1alpha1"
          },
          "kind" : {
            "type" : "string",
            "maxLength" : 30,
            "readOnly" : true,
            "description" : "Resource of kind APIService. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "APIService"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 100,
            "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
            "description" : "Name of the APIService. APIService name is unique and cannot be updated. The characters allowed in names are: digits (0-9), lower case letters (a-z), -, and ."
          },
          "title" : {
            "type" : "string",
            "maxLength" : 350,
            "description" : "The friendly name of the APIService."
          },
          "metadata" : {
            "$ref" : "#/components/schemas/api.v1.Metadata"
          },
          "finalizers" : {
            "type" : "array",
            "description" : "List of finalizers",
            "items" : {
              "$ref" : "#/components/schemas/api.v1.Finalizer"
            }
          },
          "attributes" : {
            "$ref" : "#/components/schemas/api.v1.Attributes"
          },
          "tags" : {
            "type" : "array",
            "description" : "List of tags.",
            "items" : {
              "type" : "string",
              "minLength" : 1,
              "maxLength" : 80
            }
          },
          "spec" : {
            "$ref" : "#/components/schemas/management.v1alpha1.APIServiceSpec"
          }
        },
        "required" : [ "name", "spec" ]
      },
      "management.v1alpha1.APIServiceSpec" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "The description of the api service."
          },
          "icon" : {
            "type" : "object",
            "description" : "Image for the APIService.",
            "properties" : {
              "contentType" : {
                "description" : "Content-Type of the image.",
                "type" : "string",
                "enum" : [ "image/jpeg", "image/png" ]
              },
              "data" : {
                "description" : "Base64 encoded image.",
                "type" : "string",
                "format" : "base64"
              }
            },
            "additionalProperties" : false
          }
        },
        "additionalProperties" : false
      },
      "management.v1alpha1.APIServiceRevision" : {
        "description" : "Definition of APIServiceRevision for version v1alpha1 in group management. \n\n Resource representing an Amplify Central API Service Revision",
        "type" : "object",
        "x-axway-group" : "management",
        "x-axway-version" : "v1alpha1",
        "x-axway-kind" : "APIServiceRevision",
        "x-axway-plural" : "apiservicerevisions",
        "x-axway-scoped" : true,
        "x-axway-scopes" : [ {
          "kind" : "Environment",
          "plural" : "environments"
        } ],
        "x-axway-references" : {
          "fromResources" : [ {
            "group" : "management",
            "kind" : "APIServiceInstance",
            "plural" : "apiserviceinstances",
            "versions" : [ "v1alpha1" ],
            "types" : [ "HARD" ]
          } ],
          "toResources" : [ {
            "group" : "management",
            "kind" : "APIService",
            "plural" : "apiservices",
            "versions" : [ "v1alpha1" ],
            "types" : [ "HARD" ]
          } ]
        },
        "properties" : {
          "group" : {
            "type" : "string",
            "maxLength" : 80,
            "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
            "readOnly" : true,
            "description" : "Resource belongs to the management group. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "management"
          },
          "apiVersion" : {
            "type" : "string",
            "maxLength" : 20,
            "readOnly" : true,
            "description" : "Resource version is v1alpha1. The version defines the structure of the resource. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "v1alpha1"
          },
          "kind" : {
            "type" : "string",
            "maxLength" : 30,
            "readOnly" : true,
            "description" : "Resource of kind APIServiceRevision. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "APIServiceRevision"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 100,
            "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
            "description" : "Name of the APIServiceRevision. APIServiceRevision name is unique and cannot be updated. The characters allowed in names are: digits (0-9), lower case letters (a-z), -, and ."
          },
          "title" : {
            "type" : "string",
            "maxLength" : 350,
            "description" : "The friendly name of the APIServiceRevision."
          },
          "metadata" : {
            "$ref" : "#/components/schemas/api.v1.Metadata"
          },
          "finalizers" : {
            "type" : "array",
            "description" : "List of finalizers",
            "items" : {
              "$ref" : "#/components/schemas/api.v1.Finalizer"
            }
          },
          "attributes" : {
            "$ref" : "#/components/schemas/api.v1.Attributes"
          },
          "tags" : {
            "type" : "array",
            "description" : "List of tags.",
            "items" : {
              "type" : "string",
              "minLength" : 1,
              "maxLength" : 80
            }
          },
          "spec" : {
            "$ref" : "#/components/schemas/management.v1alpha1.APIServiceRevisionSpec"
          }
        },
        "required" : [ "name", "spec" ]
      },
      "management.v1alpha1.APIServiceRevisionSpec" : {
        "type" : "object",
        "properties" : {
          "apiService" : {
            "type" : "string",
            "x-amplify-kind-ref" : "APIService"
          },
          "definition" : {
            "type" : "object",
            "description" : "The api specification details.",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "The type of the api specification. Example oas3, oas2, wsdl, protobuf."
              },
              "value" : {
                "type" : "string",
                "description" : "Base64 encoded value of the api specification.",
                "format" : "base64"
              }
            },
            "additionalProperties" : false
          }
        },
        "required" : [ "apiService" ],
        "additionalProperties" : false
      },
      "management.v1alpha1.APIServiceInstance" : {
        "description" : "Definition of APIServiceInstance for version v1alpha1 in group management. \n\n Resource representing an Amplify Central API Service Instance",
        "type" : "object",
        "x-axway-group" : "management",
        "x-axway-version" : "v1alpha1",
        "x-axway-kind" : "APIServiceInstance",
        "x-axway-plural" : "apiserviceinstances",
        "x-axway-scoped" : true,
        "x-axway-scopes" : [ {
          "kind" : "Environment",
          "plural" : "environments"
        } ],
        "x-axway-references" : {
          "fromResources" : [ {
            "group" : "management",
            "kind" : "ConsumerInstance",
            "plural" : "consumerinstances",
            "versions" : [ "v1alpha1" ],
            "types" : [ "HARD" ]
          } ],
          "toResources" : [ {
            "group" : "management",
            "kind" : "APIServiceRevision",
            "plural" : "apiservicerevisions",
            "versions" : [ "v1alpha1" ],
            "types" : [ "HARD" ]
          } ]
        },
        "properties" : {
          "group" : {
            "type" : "string",
            "maxLength" : 80,
            "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
            "readOnly" : true,
            "description" : "Resource belongs to the management group. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "management"
          },
          "apiVersion" : {
            "type" : "string",
            "maxLength" : 20,
            "readOnly" : true,
            "description" : "Resource version is v1alpha1. The version defines the structure of the resource. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "v1alpha1"
          },
          "kind" : {
            "type" : "string",
            "maxLength" : 30,
            "readOnly" : true,
            "description" : "Resource of kind APIServiceInstance. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "APIServiceInstance"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 100,
            "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
            "description" : "Name of the APIServiceInstance. APIServiceInstance name is unique and cannot be updated. The characters allowed in names are: digits (0-9), lower case letters (a-z), -, and ."
          },
          "title" : {
            "type" : "string",
            "maxLength" : 350,
            "description" : "The friendly name of the APIServiceInstance."
          },
          "metadata" : {
            "$ref" : "#/components/schemas/api.v1.Metadata"
          },
          "finalizers" : {
            "type" : "array",
            "description" : "List of finalizers",
            "items" : {
              "$ref" : "#/components/schemas/api.v1.Finalizer"
            }
          },
          "attributes" : {
            "$ref" : "#/components/schemas/api.v1.Attributes"
          },
          "tags" : {
            "type" : "array",
            "description" : "List of tags.",
            "items" : {
              "type" : "string",
              "minLength" : 1,
              "maxLength" : 80
            }
          },
          "spec" : {
            "$ref" : "#/components/schemas/management.v1alpha1.APIServiceInstanceSpec"
          }
        },
        "required" : [ "name", "spec" ]
      },
      "management.v1alpha1.APIServiceInstanceSpec" : {
        "type" : "object",
        "properties" : {
          "apiServiceRevision" : {
            "type" : "string",
            "x-amplify-kind-ref" : "APIServiceRevision"
          },
          "endpoint" : {
            "type" : "array",
            "description" : "A list of locations where the api is deployed.",
            "items" : {
              "type" : "object",
              "properties" : {
                "host" : {
                  "type" : "string"
                },
                "port" : {
                  "type" : "integer"
                },
                "protocol" : {
                  "type" : "string"
                },
                "routing" : {
                  "type" : "object",
                  "properties" : {
                    "basePath" : {
                      "type" : "string",
                      "pattern" : "^/",
                      "description" : "The base path to the API. Example: '/api'."
                    }
                  },
                  "additionalProperties" : false
                }
              },
              "additionalProperties" : false,
              "required" : [ "host", "protocol" ]
            }
          }
        },
        "required" : [ "apiServiceRevision", "endpoint" ],
        "additionalProperties" : false
      },
      "management.v1alpha1.ConsumerInstance" : {
        "description" : "Definition of ConsumerInstance for version v1alpha1 in group management. \n\n Resource representing a Unified Catalog Item of type API",
        "type" : "object",
        "x-axway-group" : "management",
        "x-axway-version" : "v1alpha1",
        "x-axway-kind" : "ConsumerInstance",
        "x-axway-plural" : "consumerinstances",
        "x-axway-scoped" : true,
        "x-axway-subresources" : [ "status" ],
        "x-axway-scopes" : [ {
          "kind" : "Environment",
          "plural" : "environments"
        } ],
        "x-axway-references" : {
          "fromResources" : [ ],
          "toResources" : [ {
            "group" : "management",
            "kind" : "ConsumerSubscriptionDefinition",
            "plural" : "consumersubscriptiondefs",
            "versions" : [ "v1alpha1" ],
            "types" : [ "SOFT" ]
          }, {
            "group" : "management",
            "kind" : "APIServiceInstance",
            "plural" : "apiserviceinstances",
            "versions" : [ "v1alpha1" ],
            "types" : [ "HARD" ]
          } ]
        },
        "properties" : {
          "group" : {
            "type" : "string",
            "maxLength" : 80,
            "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
            "readOnly" : true,
            "description" : "Resource belongs to the management group. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "management"
          },
          "apiVersion" : {
            "type" : "string",
            "maxLength" : 20,
            "readOnly" : true,
            "description" : "Resource version is v1alpha1. The version defines the structure of the resource. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "v1alpha1"
          },
          "kind" : {
            "type" : "string",
            "maxLength" : 30,
            "readOnly" : true,
            "description" : "Resource of kind ConsumerInstance. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "ConsumerInstance"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 100,
            "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
            "description" : "Name of the ConsumerInstance. ConsumerInstance name is unique and cannot be updated. The characters allowed in names are: digits (0-9), lower case letters (a-z), -, and ."
          },
          "title" : {
            "type" : "string",
            "maxLength" : 350,
            "description" : "The friendly name of the ConsumerInstance."
          },
          "metadata" : {
            "$ref" : "#/components/schemas/api.v1.Metadata"
          },
          "finalizers" : {
            "type" : "array",
            "description" : "List of finalizers",
            "items" : {
              "$ref" : "#/components/schemas/api.v1.Finalizer"
            }
          },
          "attributes" : {
            "$ref" : "#/components/schemas/api.v1.Attributes"
          },
          "tags" : {
            "type" : "array",
            "description" : "List of tags.",
            "items" : {
              "type" : "string",
              "minLength" : 1,
              "maxLength" : 80
            }
          },
          "spec" : {
            "$ref" : "#/components/schemas/management.v1alpha1.ConsumerInstanceSpec"
          },
          "status" : {
            "$ref" : "#/components/schemas/management.v1alpha1.ConsumerInstanceStatus"
          }
        },
        "required" : [ "name", "spec" ]
      },
      "management.v1alpha1.ConsumerInstanceSpec" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Maps to the name of the Catalog Item. If not provided, the resource title will be used.",
            "maxLength" : 100,
            "minLength" : 1
          },
          "apiServiceInstance" : {
            "type" : "string",
            "description" : "The name of an APIServiceInstance resource that specifies where the API is deployed.",
            "x-amplify-kind-ref" : "APIServiceInstance"
          },
          "owningTeam" : {
            "type" : "string",
            "description" : "Name of the team that owns the Catalog Item. If not provided, the Default team will be used."
          },
          "description" : {
            "type" : "string",
            "description" : "Maps to the description of the Catalog Item. Defaults to the API service description.",
            "maxLength" : 350
          },
          "visibility" : {
            "type" : "string",
            "description" : "The visibility of the Catalog Item:\n * PUBLIC - If Catalog Item is in PUBLISHED state, it will be visible to the entire organization.\n * RESTRICTED - If Catalog Item is in PUBLISHED state, it will be visible to the owning team and teams part of the Catalog Item Access Control List.\n",
            "enum" : [ "RESTRICTED", "PUBLIC" ]
          },
          "version" : {
            "type" : "string",
            "description" : "Version name for the revision.",
            "maxLength" : 255,
            "pattern" : "^(?!\\s).*(?<!\\s)$"
          },
          "state" : {
            "type" : "string",
            "description" : "Catalog Item state:\n * UNPUBLISHED - Only developers in the owning team will be able to access the Catalog Item.\n * PUBLISHED - Developers and Consumers in the owning team and any additional team in the ACL will\nbe able to access the Catalog Item.\n",
            "enum" : [ "UNPUBLISHED", "PUBLISHED" ]
          },
          "status" : {
            "type" : "string",
            "description" : "A way to communicate the status of the service to consumers. Examples: DRAFT, BETA, GA",
            "maxLength" : 255
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "minLength" : 1,
              "maxLength" : 80
            },
            "description" : "List of tags to be set on the Catalog Item. Max allowed tags for the Catalog Item is 80."
          },
          "icon" : {
            "type" : "object",
            "description" : "Image for the Catalog Item.\nIf not present, the icon on the APISevice will be used in the Catalog Item.",
            "properties" : {
              "contentType" : {
                "description" : "Content-Type of the image.",
                "type" : "string",
                "enum" : [ "image/jpeg", "image/png" ]
              },
              "data" : {
                "description" : "Base64 encoded image.",
                "type" : "string",
                "format" : "base64"
              }
            },
            "additionalProperties" : false
          },
          "documentation" : {
            "type" : "string",
            "description" : "Markdown documentation for the Catalog Item documentation."
          },
          "unstructuredDataProperties" : {
            "type" : "object",
            "description" : "The Catalog Item properties for unstructuded definition subtypes.",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "Defines the unstrucured data type. Example 'APIBuilderConnector' or 'SDK'."
              },
              "contentType" : {
                "type" : "string",
                "description" : "Defines the Content Type of the data."
              },
              "label" : {
                "type" : "string",
                "description" : "Short name for the unstructured data."
              },
              "fileName" : {
                "type" : "string",
                "description" : "File name used to be sent as part of the content disposition header for revision unstructured data download."
              },
              "data" : {
                "type" : "string",
                "format" : "base64",
                "description" : "Base64 encoded data for the Catalog Item revision content."
              }
            },
            "required" : [ "type", "contentType" ],
            "additionalProperties" : false
          },
          "additionalDataProperties" : {
            "type" : "object",
            "description" : "The Catalog Item properties for additional data.",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "Defines the unstrucured data type. Example 'APIBuilderConnector' or 'SDK'."
              },
              "contentType" : {
                "type" : "string",
                "description" : "Defines the Content Type of the data."
              },
              "label" : {
                "type" : "string",
                "description" : "Short name for the unstructured data."
              },
              "fileName" : {
                "type" : "string",
                "description" : "File name used to be sent as part of the content disposition header for revision unstructured data download."
              },
              "data" : {
                "type" : "string",
                "format" : "base64",
                "description" : "Base64 encoded data for the Catalog Item revision content."
              }
            },
            "required" : [ "type", "contentType", "data" ],
            "additionalProperties" : false
          },
          "subscription" : {
            "type" : "object",
            "properties" : {
              "enabled" : {
                "type" : "boolean",
                "description" : "Defines if subscriptions are allowed on the Catalog Item."
              },
              "autoSubscribe" : {
                "type" : "boolean",
                "description" : "Defines if subscriptions need to be manually approved."
              },
              "subscriptionDefinition" : {
                "type" : "string",
                "x-amplify-kind-ref" : "ConsumerSubscriptionDefinition",
                "x-amplify-kind-ref-type" : "soft",
                "description" : "The name of a ConsumerSubscriptionDefinition kind that defines the schema and possible webhooks to get invoked."
              }
            },
            "additionalProperties" : false
          }
        },
        "additionalProperties" : false
      },
      "management.v1alpha1.ConsumerInstanceStatus" : {
        "type" : "object",
        "properties" : {
          "phase" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string",
                "enum" : [ "Update", "Delete", "Create" ]
              },
              "level" : {
                "type" : "string",
                "description" : "The criticality of the last update",
                "enum" : [ "info", "error" ]
              },
              "transitionTime" : {
                "type" : "string",
                "format" : "date-time",
                "description" : "Time of the current phase."
              },
              "message" : {
                "type" : "string",
                "description" : "Description of the phase."
              }
            },
            "additionalProperties" : false,
            "required" : [ "name", "level", "transitionTime" ]
          }
        },
        "additionalProperties" : false,
        "required" : [ "phase" ]
      },
      "management.v1alpha1.ConsumerSubscriptionDefinition" : {
        "description" : "Definition of ConsumerSubscriptionDefinition for version v1alpha1 in group management. \n\n Resource representing a Unified Catalog Item of type API.",
        "type" : "object",
        "x-axway-group" : "management",
        "x-axway-version" : "v1alpha1",
        "x-axway-kind" : "ConsumerSubscriptionDefinition",
        "x-axway-plural" : "consumersubscriptiondefs",
        "x-axway-scoped" : true,
        "x-axway-scopes" : [ {
          "kind" : "Environment",
          "plural" : "environments"
        } ],
        "x-axway-references" : {
          "fromResources" : [ {
            "group" : "management",
            "kind" : "ConsumerInstance",
            "plural" : "consumerinstances",
            "versions" : [ "v1alpha1" ],
            "types" : [ "SOFT" ]
          } ],
          "toResources" : [ {
            "group" : "management",
            "kind" : "Webhook",
            "plural" : "webhooks",
            "versions" : [ "v1alpha1" ],
            "types" : [ "SOFT" ]
          } ]
        },
        "properties" : {
          "group" : {
            "type" : "string",
            "maxLength" : 80,
            "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
            "readOnly" : true,
            "description" : "Resource belongs to the management group. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "management"
          },
          "apiVersion" : {
            "type" : "string",
            "maxLength" : 20,
            "readOnly" : true,
            "description" : "Resource version is v1alpha1. The version defines the structure of the resource. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "v1alpha1"
          },
          "kind" : {
            "type" : "string",
            "maxLength" : 30,
            "readOnly" : true,
            "description" : "Resource of kind ConsumerSubscriptionDefinition. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "ConsumerSubscriptionDefinition"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 100,
            "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
            "description" : "Name of the ConsumerSubscriptionDefinition. ConsumerSubscriptionDefinition name is unique and cannot be updated. The characters allowed in names are: digits (0-9), lower case letters (a-z), -, and ."
          },
          "title" : {
            "type" : "string",
            "maxLength" : 350,
            "description" : "The friendly name of the ConsumerSubscriptionDefinition."
          },
          "metadata" : {
            "$ref" : "#/components/schemas/api.v1.Metadata"
          },
          "finalizers" : {
            "type" : "array",
            "description" : "List of finalizers",
            "items" : {
              "$ref" : "#/components/schemas/api.v1.Finalizer"
            }
          },
          "attributes" : {
            "$ref" : "#/components/schemas/api.v1.Attributes"
          },
          "tags" : {
            "type" : "array",
            "description" : "List of tags.",
            "items" : {
              "type" : "string",
              "minLength" : 1,
              "maxLength" : 80
            }
          },
          "spec" : {
            "$ref" : "#/components/schemas/management.v1alpha1.ConsumerSubscriptionDefinitionSpec"
          }
        },
        "required" : [ "name", "spec" ]
      },
      "management.v1alpha1.ConsumerSubscriptionDefinitionSpec" : {
        "type" : "object",
        "properties" : {
          "webhooks" : {
            "type" : "array",
            "description" : "List of Webhook kind resource names that dictates what webhooks will be invoked on subscription changes.",
            "items" : {
              "type" : "string",
              "description" : "Reference to the webhook to be triggered on subscription updates.",
              "x-amplify-kind-ref" : "Webhook",
              "x-amplify-kind-ref-type" : "soft"
            }
          },
          "schema" : {
            "type" : "object",
            "description" : "Subscription definition properties to be used by the consumers.",
            "properties" : {
              "properties" : {
                "type" : "array",
                "description" : "Defines the subscription schema properties as key/value pairs.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "key" : {
                      "type" : "string",
                      "description" : "The Catalog Item subscription spec key.\nFor API type subscriptions, the key needs to be 'profile'."
                    },
                    "value" : {
                      "type" : "object",
                      "description" : "JSON schema to specify data needed from consumers when subscriptions are created."
                    }
                  },
                  "required" : [ "key", "value" ],
                  "additionalProperties" : false
                }
              }
            },
            "additionalProperties" : false
          }
        },
        "additionalProperties" : false
      },
      "management.v1alpha1.Integration" : {
        "description" : "Definition of Integration for version v1alpha1 in group management. \n\n Resource representing a group of integration resources.",
        "type" : "object",
        "x-axway-group" : "management",
        "x-axway-version" : "v1alpha1",
        "x-axway-kind" : "Integration",
        "x-axway-plural" : "integrations",
        "x-axway-scoped" : false,
        "x-axway-references" : {
          "fromResources" : [ ],
          "toResources" : [ ]
        },
        "properties" : {
          "group" : {
            "type" : "string",
            "maxLength" : 80,
            "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
            "readOnly" : true,
            "description" : "Resource belongs to the management group. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "management"
          },
          "apiVersion" : {
            "type" : "string",
            "maxLength" : 20,
            "readOnly" : true,
            "description" : "Resource version is v1alpha1. The version defines the structure of the resource. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "v1alpha1"
          },
          "kind" : {
            "type" : "string",
            "maxLength" : 30,
            "readOnly" : true,
            "description" : "Resource of kind Integration. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "Integration"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 100,
            "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
            "description" : "Name of the Integration. Integration name is unique and cannot be updated. The characters allowed in names are: digits (0-9), lower case letters (a-z), -, and ."
          },
          "title" : {
            "type" : "string",
            "maxLength" : 350,
            "description" : "The friendly name of the Integration."
          },
          "metadata" : {
            "$ref" : "#/components/schemas/api.v1.Metadata"
          },
          "finalizers" : {
            "type" : "array",
            "description" : "List of finalizers",
            "items" : {
              "$ref" : "#/components/schemas/api.v1.Finalizer"
            }
          },
          "attributes" : {
            "$ref" : "#/components/schemas/api.v1.Attributes"
          },
          "tags" : {
            "type" : "array",
            "description" : "List of tags.",
            "items" : {
              "type" : "string",
              "minLength" : 1,
              "maxLength" : 80
            }
          },
          "spec" : {
            "$ref" : "#/components/schemas/management.v1alpha1.IntegrationSpec"
          }
        },
        "required" : [ "name", "spec" ]
      },
      "management.v1alpha1.IntegrationSpec" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string"
          }
        },
        "additionalProperties" : false
      },
      "management.v1alpha1.ResourceHook" : {
        "description" : "Definition of ResourceHook for version v1alpha1 in group management. \n\n Listen to API Server resource lifecycle changes.",
        "type" : "object",
        "x-axway-group" : "management",
        "x-axway-version" : "v1alpha1",
        "x-axway-kind" : "ResourceHook",
        "x-axway-plural" : "resourcehooks",
        "x-axway-scoped" : true,
        "x-axway-scopes" : [ {
          "kind" : "Integration",
          "plural" : "integrations"
        } ],
        "x-axway-references" : {
          "fromResources" : [ ],
          "toResources" : [ {
            "group" : "management",
            "kind" : "Webhook",
            "plural" : "webhooks",
            "versions" : [ "v1alpha1" ],
            "types" : [ "SOFT" ]
          } ]
        },
        "properties" : {
          "group" : {
            "type" : "string",
            "maxLength" : 80,
            "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
            "readOnly" : true,
            "description" : "Resource belongs to the management group. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "management"
          },
          "apiVersion" : {
            "type" : "string",
            "maxLength" : 20,
            "readOnly" : true,
            "description" : "Resource version is v1alpha1. The version defines the structure of the resource. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "v1alpha1"
          },
          "kind" : {
            "type" : "string",
            "maxLength" : 30,
            "readOnly" : true,
            "description" : "Resource of kind ResourceHook. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "ResourceHook"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 100,
            "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
            "description" : "Name of the ResourceHook. ResourceHook name is unique and cannot be updated. The characters allowed in names are: digits (0-9), lower case letters (a-z), -, and ."
          },
          "title" : {
            "type" : "string",
            "maxLength" : 350,
            "description" : "The friendly name of the ResourceHook."
          },
          "metadata" : {
            "$ref" : "#/components/schemas/api.v1.Metadata"
          },
          "finalizers" : {
            "type" : "array",
            "description" : "List of finalizers",
            "items" : {
              "$ref" : "#/components/schemas/api.v1.Finalizer"
            }
          },
          "attributes" : {
            "$ref" : "#/components/schemas/api.v1.Attributes"
          },
          "tags" : {
            "type" : "array",
            "description" : "List of tags.",
            "items" : {
              "type" : "string",
              "minLength" : 1,
              "maxLength" : 80
            }
          },
          "spec" : {
            "$ref" : "#/components/schemas/management.v1alpha1.ResourceHookSpec"
          }
        },
        "required" : [ "name", "spec" ]
      },
      "management.v1alpha1.ResourceHookSpec" : {
        "type" : "object",
        "properties" : {
          "triggers" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "group" : {
                  "type" : "string",
                  "maxLength" : 30,
                  "description" : "Value for the group of the resource. Use \"*\" for any."
                },
                "scope" : {
                  "type" : "object",
                  "description" : "Resource scope trigger details.",
                  "properties" : {
                    "kind" : {
                      "type" : "string",
                      "maxLength" : 30,
                      "description" : "Value for the Kind of the scope of the resource. Use \"*\" for any."
                    },
                    "name" : {
                      "type" : "string",
                      "maxLength" : 100,
                      "pattern" : "^([\\*])|([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*)",
                      "description" : "Name of the scope of the resource. Use \"*\" for any."
                    }
                  },
                  "additionalProperties" : false,
                  "required" : [ "kind", "name" ]
                },
                "kind" : {
                  "type" : "string",
                  "maxLength" : 30,
                  "description" : "Value for the Kind of the resource. Use \"*\" for any."
                },
                "name" : {
                  "type" : "string",
                  "maxLength" : 100,
                  "pattern" : "^([\\*])|([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*)",
                  "description" : "Name of the resource. Use \"*\" for any."
                },
                "type" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string",
                    "description" : "Type of the operation for the tracked resources.",
                    "enum" : [ "created", "updated", "deleted" ]
                  }
                }
              },
              "required" : [ "kind", "name", "type", "group" ],
              "additionalProperties" : false
            }
          },
          "webhooks" : {
            "type" : "array",
            "description" : "List of Webhook kind resource names that dictates what webhooks will be invoked on matching triggers.",
            "items" : {
              "type" : "string",
              "description" : "Reference to webhooks to be invoked when a trigger matches.",
              "x-amplify-kind-ref" : "Webhook",
              "x-amplify-kind-ref-type" : "soft"
            }
          }
        },
        "required" : [ "triggers", "webhooks" ],
        "additionalProperties" : false
      },
      "management.v1alpha1.K8SCluster" : {
        "description" : "Definition of K8SCluster for version v1alpha1 in group management. \n\n Resource representing a kubernetes cluster.",
        "type" : "object",
        "x-axway-group" : "management",
        "x-axway-version" : "v1alpha1",
        "x-axway-kind" : "K8SCluster",
        "x-axway-plural" : "k8sclusters",
        "x-axway-scoped" : false,
        "x-axway-references" : {
          "fromResources" : [ ],
          "toResources" : [ {
            "group" : "management",
            "kind" : "Mesh",
            "plural" : "meshes",
            "versions" : [ "v1alpha1" ],
            "types" : [ "HARD" ]
          } ]
        },
        "properties" : {
          "group" : {
            "type" : "string",
            "maxLength" : 80,
            "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
            "readOnly" : true,
            "description" : "Resource belongs to the management group. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "management"
          },
          "apiVersion" : {
            "type" : "string",
            "maxLength" : 20,
            "readOnly" : true,
            "description" : "Resource version is v1alpha1. The version defines the structure of the resource. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "v1alpha1"
          },
          "kind" : {
            "type" : "string",
            "maxLength" : 30,
            "readOnly" : true,
            "description" : "Resource of kind K8SCluster. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "K8SCluster"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 100,
            "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
            "description" : "Name of the K8SCluster. K8SCluster name is unique and cannot be updated. The characters allowed in names are: digits (0-9), lower case letters (a-z), -, and ."
          },
          "title" : {
            "type" : "string",
            "maxLength" : 350,
            "description" : "The friendly name of the K8SCluster."
          },
          "metadata" : {
            "$ref" : "#/components/schemas/api.v1.Metadata"
          },
          "finalizers" : {
            "type" : "array",
            "description" : "List of finalizers",
            "items" : {
              "$ref" : "#/components/schemas/api.v1.Finalizer"
            }
          },
          "attributes" : {
            "$ref" : "#/components/schemas/api.v1.Attributes"
          },
          "tags" : {
            "type" : "array",
            "description" : "List of tags.",
            "items" : {
              "type" : "string",
              "minLength" : 1,
              "maxLength" : 80
            }
          },
          "spec" : {
            "$ref" : "#/components/schemas/management.v1alpha1.K8SClusterSpec"
          }
        },
        "required" : [ "name", "spec" ]
      },
      "management.v1alpha1.K8SClusterSpec" : {
        "type" : "object",
        "properties" : {
          "mesh" : {
            "type" : "string",
            "x-amplify-kind-ref" : "Mesh"
          }
        },
        "additionalProperties" : true
      },
      "management.v1alpha1.K8SResource" : {
        "description" : "Definition of K8SResource for version v1alpha1 in group management. \n\n Represents a Kubernetes resource in a mesh.",
        "type" : "object",
        "x-axway-group" : "management",
        "x-axway-version" : "v1alpha1",
        "x-axway-kind" : "K8SResource",
        "x-axway-plural" : "k8sresources",
        "x-axway-scoped" : true,
        "x-axway-scopes" : [ {
          "kind" : "K8SCluster",
          "plural" : "k8sclusters"
        } ],
        "x-axway-references" : {
          "fromResources" : [ ],
          "toResources" : [ {
            "group" : "management",
            "kind" : "ResourceDiscovery",
            "plural" : "resourcediscoveries",
            "versions" : [ "v1alpha1" ],
            "types" : [ "HARD" ]
          } ]
        },
        "properties" : {
          "group" : {
            "type" : "string",
            "maxLength" : 80,
            "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
            "readOnly" : true,
            "description" : "Resource belongs to the management group. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "management"
          },
          "apiVersion" : {
            "type" : "string",
            "maxLength" : 20,
            "readOnly" : true,
            "description" : "Resource version is v1alpha1. The version defines the structure of the resource. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "v1alpha1"
          },
          "kind" : {
            "type" : "string",
            "maxLength" : 30,
            "readOnly" : true,
            "description" : "Resource of kind K8SResource. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "K8SResource"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 100,
            "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
            "description" : "Name of the K8SResource. K8SResource name is unique and cannot be updated. The characters allowed in names are: digits (0-9), lower case letters (a-z), -, and ."
          },
          "title" : {
            "type" : "string",
            "maxLength" : 350,
            "description" : "The friendly name of the K8SResource."
          },
          "metadata" : {
            "$ref" : "#/components/schemas/api.v1.Metadata"
          },
          "finalizers" : {
            "type" : "array",
            "description" : "List of finalizers",
            "items" : {
              "$ref" : "#/components/schemas/api.v1.Finalizer"
            }
          },
          "attributes" : {
            "$ref" : "#/components/schemas/api.v1.Attributes"
          },
          "tags" : {
            "type" : "array",
            "description" : "List of tags.",
            "items" : {
              "type" : "string",
              "minLength" : 1,
              "maxLength" : 80
            }
          },
          "spec" : {
            "$ref" : "#/components/schemas/management.v1alpha1.K8SResourceSpec"
          }
        },
        "required" : [ "name", "spec" ]
      },
      "management.v1alpha1.K8SResourceSpec" : {
        "type" : "object",
        "properties" : {
          "resourceDiscovery" : {
            "type" : "string",
            "x-amplify-kind-ref" : "ResourceDiscovery"
          },
          "resourceVersion" : {
            "type" : "string"
          },
          "uid" : {
            "type" : "string"
          },
          "ownerReferences" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "kind" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                }
              }
            }
          },
          "resourceSpec" : {
            "type" : "object",
            "additionalProperties" : { }
          },
          "resourceStatus" : {
            "type" : "object",
            "additionalProperties" : { }
          }
        },
        "additionalProperties" : { }
      },
      "management.v1alpha1.ResourceDiscovery" : {
        "description" : "Definition of ResourceDiscovery for version v1alpha1 in group management. \n\n Resource controlling resource discoveries in a mesh.",
        "type" : "object",
        "x-axway-group" : "management",
        "x-axway-version" : "v1alpha1",
        "x-axway-kind" : "ResourceDiscovery",
        "x-axway-plural" : "resourcediscoveries",
        "x-axway-scoped" : true,
        "x-axway-scopes" : [ {
          "kind" : "K8SCluster",
          "plural" : "k8sclusters"
        } ],
        "x-axway-references" : {
          "fromResources" : [ {
            "group" : "management",
            "kind" : "K8SResource",
            "plural" : "k8sresources",
            "versions" : [ "v1alpha1" ],
            "types" : [ "HARD" ]
          } ],
          "toResources" : [ ]
        },
        "properties" : {
          "group" : {
            "type" : "string",
            "maxLength" : 80,
            "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
            "readOnly" : true,
            "description" : "Resource belongs to the management group. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "management"
          },
          "apiVersion" : {
            "type" : "string",
            "maxLength" : 20,
            "readOnly" : true,
            "description" : "Resource version is v1alpha1. The version defines the structure of the resource. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "v1alpha1"
          },
          "kind" : {
            "type" : "string",
            "maxLength" : 30,
            "readOnly" : true,
            "description" : "Resource of kind ResourceDiscovery. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "ResourceDiscovery"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 100,
            "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
            "description" : "Name of the ResourceDiscovery. ResourceDiscovery name is unique and cannot be updated. The characters allowed in names are: digits (0-9), lower case letters (a-z), -, and ."
          },
          "title" : {
            "type" : "string",
            "maxLength" : 350,
            "description" : "The friendly name of the ResourceDiscovery."
          },
          "metadata" : {
            "$ref" : "#/components/schemas/api.v1.Metadata"
          },
          "finalizers" : {
            "type" : "array",
            "description" : "List of finalizers",
            "items" : {
              "$ref" : "#/components/schemas/api.v1.Finalizer"
            }
          },
          "attributes" : {
            "$ref" : "#/components/schemas/api.v1.Attributes"
          },
          "tags" : {
            "type" : "array",
            "description" : "List of tags.",
            "items" : {
              "type" : "string",
              "minLength" : 1,
              "maxLength" : 80
            }
          },
          "spec" : {
            "$ref" : "#/components/schemas/management.v1alpha1.ResourceDiscoverySpec"
          }
        },
        "required" : [ "name", "spec" ]
      },
      "management.v1alpha1.ResourceDiscoverySpec" : {
        "type" : "object",
        "properties" : {
          "version" : {
            "type" : "string"
          },
          "kind" : {
            "type" : "string"
          },
          "group" : {
            "type" : "string"
          },
          "namespaceFilter" : {
            "type" : "object",
            "description" : "Namespace filter.",
            "properties" : {
              "names" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "resourceFilter" : {
            "type" : "object",
            "description" : "Resource filter.",
            "properties" : {
              "names" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "matchLabels" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string"
                }
              }
            }
          },
          "keepSpecFields" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "keepStatusFields" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "ignoreLabels" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "extraAttributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "management.v1alpha1.Mesh" : {
        "description" : "Definition of Mesh for version v1alpha1 in group management. \n\n Resource representing a Mesh.",
        "type" : "object",
        "x-axway-group" : "management",
        "x-axway-version" : "v1alpha1",
        "x-axway-kind" : "Mesh",
        "x-axway-plural" : "meshes",
        "x-axway-scoped" : false,
        "x-axway-references" : {
          "fromResources" : [ {
            "group" : "management",
            "kind" : "K8SCluster",
            "plural" : "k8sclusters",
            "versions" : [ "v1alpha1" ],
            "types" : [ "HARD" ]
          } ],
          "toResources" : [ ]
        },
        "properties" : {
          "group" : {
            "type" : "string",
            "maxLength" : 80,
            "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
            "readOnly" : true,
            "description" : "Resource belongs to the management group. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "management"
          },
          "apiVersion" : {
            "type" : "string",
            "maxLength" : 20,
            "readOnly" : true,
            "description" : "Resource version is v1alpha1. The version defines the structure of the resource. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "v1alpha1"
          },
          "kind" : {
            "type" : "string",
            "maxLength" : 30,
            "readOnly" : true,
            "description" : "Resource of kind Mesh. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "Mesh"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 100,
            "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
            "description" : "Name of the Mesh. Mesh name is unique and cannot be updated. The characters allowed in names are: digits (0-9), lower case letters (a-z), -, and ."
          },
          "title" : {
            "type" : "string",
            "maxLength" : 350,
            "description" : "The friendly name of the Mesh."
          },
          "metadata" : {
            "$ref" : "#/components/schemas/api.v1.Metadata"
          },
          "finalizers" : {
            "type" : "array",
            "description" : "List of finalizers",
            "items" : {
              "$ref" : "#/components/schemas/api.v1.Finalizer"
            }
          },
          "attributes" : {
            "$ref" : "#/components/schemas/api.v1.Attributes"
          },
          "tags" : {
            "type" : "array",
            "description" : "List of tags.",
            "items" : {
              "type" : "string",
              "minLength" : 1,
              "maxLength" : 80
            }
          },
          "spec" : {
            "$ref" : "#/components/schemas/management.v1alpha1.MeshSpec"
          }
        },
        "required" : [ "name", "spec" ]
      },
      "management.v1alpha1.MeshSpec" : {
        "type" : "object",
        "additionalProperties" : false
      },
      "management.v1alpha1.SpecDiscovery" : {
        "description" : "Definition of SpecDiscovery for version v1alpha1 in group management. \n\n Configures API Discovery in a mesh.",
        "type" : "object",
        "x-axway-group" : "management",
        "x-axway-version" : "v1alpha1",
        "x-axway-kind" : "SpecDiscovery",
        "x-axway-plural" : "specdiscoveries",
        "x-axway-scoped" : true,
        "x-axway-scopes" : [ {
          "kind" : "K8SCluster",
          "plural" : "k8sclusters"
        } ],
        "x-axway-references" : {
          "fromResources" : [ {
            "group" : "management",
            "kind" : "APISpec",
            "plural" : "apispecs",
            "versions" : [ "v1alpha1" ],
            "types" : [ "HARD" ]
          } ],
          "toResources" : [ ]
        },
        "properties" : {
          "group" : {
            "type" : "string",
            "maxLength" : 80,
            "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
            "readOnly" : true,
            "description" : "Resource belongs to the management group. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "management"
          },
          "apiVersion" : {
            "type" : "string",
            "maxLength" : 20,
            "readOnly" : true,
            "description" : "Resource version is v1alpha1. The version defines the structure of the resource. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "v1alpha1"
          },
          "kind" : {
            "type" : "string",
            "maxLength" : 30,
            "readOnly" : true,
            "description" : "Resource of kind SpecDiscovery. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "SpecDiscovery"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 100,
            "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
            "description" : "Name of the SpecDiscovery. SpecDiscovery name is unique and cannot be updated. The characters allowed in names are: digits (0-9), lower case letters (a-z), -, and ."
          },
          "title" : {
            "type" : "string",
            "maxLength" : 350,
            "description" : "The friendly name of the SpecDiscovery."
          },
          "metadata" : {
            "$ref" : "#/components/schemas/api.v1.Metadata"
          },
          "finalizers" : {
            "type" : "array",
            "description" : "List of finalizers",
            "items" : {
              "$ref" : "#/components/schemas/api.v1.Finalizer"
            }
          },
          "attributes" : {
            "$ref" : "#/components/schemas/api.v1.Attributes"
          },
          "tags" : {
            "type" : "array",
            "description" : "List of tags.",
            "items" : {
              "type" : "string",
              "minLength" : 1,
              "maxLength" : 80
            }
          },
          "spec" : {
            "$ref" : "#/components/schemas/management.v1alpha1.SpecDiscoverySpec"
          }
        },
        "required" : [ "name", "spec" ]
      },
      "management.v1alpha1.SpecDiscoverySpec" : {
        "type" : "object",
        "properties" : {
          "namespaceFilter" : {
            "type" : "object",
            "description" : "a list of namespace names to follow. If not set, follows all namespaces.",
            "properties" : {
              "names" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "resourceFilter" : {
            "type" : "object",
            "description" : "Filter pod resources by name or labels.",
            "properties" : {
              "names" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "matchLabels" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string"
                }
              }
            }
          },
          "targets" : {
            "type" : "object",
            "properties" : {
              "exactPaths" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "path" : {
                      "type" : "string",
                      "description" : "path to api definition",
                      "example" : "/apidocs"
                    },
                    "headers" : {
                      "type" : "object",
                      "description" : "headers to add to the query",
                      "additionalProperties" : {
                        "type" : "string"
                      }
                    }
                  }
                }
              },
              "fromAnnotation" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "template" : {
                      "type" : "string",
                      "description" : "annotation template. golang template that's fed the following object for each declared port of the pod: {\"name\", \"number\"}",
                      "example" : "[my.path.annotation/{{ .port.Name }}]"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "management.v1alpha1.APISpec" : {
        "description" : "Definition of APISpec for version v1alpha1 in group management. \n\n An API Spec",
        "type" : "object",
        "x-axway-group" : "management",
        "x-axway-version" : "v1alpha1",
        "x-axway-kind" : "APISpec",
        "x-axway-plural" : "apispecs",
        "x-axway-scoped" : true,
        "x-axway-scopes" : [ {
          "kind" : "K8SCluster",
          "plural" : "k8sclusters"
        } ],
        "x-axway-references" : {
          "fromResources" : [ ],
          "toResources" : [ {
            "group" : "management",
            "kind" : "SpecDiscovery",
            "plural" : "specdiscoveries",
            "versions" : [ "v1alpha1" ],
            "types" : [ "HARD" ]
          } ]
        },
        "properties" : {
          "group" : {
            "type" : "string",
            "maxLength" : 80,
            "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
            "readOnly" : true,
            "description" : "Resource belongs to the management group. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "management"
          },
          "apiVersion" : {
            "type" : "string",
            "maxLength" : 20,
            "readOnly" : true,
            "description" : "Resource version is v1alpha1. The version defines the structure of the resource. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "v1alpha1"
          },
          "kind" : {
            "type" : "string",
            "maxLength" : 30,
            "readOnly" : true,
            "description" : "Resource of kind APISpec. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "APISpec"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 100,
            "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
            "description" : "Name of the APISpec. APISpec name is unique and cannot be updated. The characters allowed in names are: digits (0-9), lower case letters (a-z), -, and ."
          },
          "title" : {
            "type" : "string",
            "maxLength" : 350,
            "description" : "The friendly name of the APISpec."
          },
          "metadata" : {
            "$ref" : "#/components/schemas/api.v1.Metadata"
          },
          "finalizers" : {
            "type" : "array",
            "description" : "List of finalizers",
            "items" : {
              "$ref" : "#/components/schemas/api.v1.Finalizer"
            }
          },
          "attributes" : {
            "$ref" : "#/components/schemas/api.v1.Attributes"
          },
          "tags" : {
            "type" : "array",
            "description" : "List of tags.",
            "items" : {
              "type" : "string",
              "minLength" : 1,
              "maxLength" : 80
            }
          },
          "spec" : {
            "$ref" : "#/components/schemas/management.v1alpha1.APISpecSpec"
          }
        },
        "required" : [ "name", "spec" ]
      },
      "management.v1alpha1.APISpecSpec" : {
        "type" : "object",
        "properties" : {
          "specDiscoveryRef" : {
            "type" : "string",
            "x-amplify-kind-ref" : "SpecDiscovery"
          },
          "definition" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "description" : "The type of the api specification. Example oas3, oas2, wsdl, protobuf."
              },
              "value" : {
                "type" : "string",
                "description" : "Base64 encoded value of the api specification.",
                "format" : "base64"
              },
              "hash" : {
                "type" : "string",
                "description" : "Consistent hash of the value.",
                "format" : "base64"
              }
            }
          },
          "endpoints" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "type" : {
                  "type" : "string",
                  "description" : "The type of the endpoint"
                },
                "host" : {
                  "type" : "string",
                  "description" : "The host of the pod <namespace>.<pod-name>"
                },
                "port" : {
                  "type" : "string",
                  "description" : "The port of the pod on which this spec was discovered"
                },
                "path" : {
                  "type" : "string",
                  "description" : "The path on which this spec was discovered"
                },
                "labels" : {
                  "type" : "object",
                  "description" : "The labels for the pod this spec was discovered on",
                  "additionalProperties" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      },
      "management.v1alpha1.AWSDataplane" : {
        "description" : "Definition of AWSDataplane for version v1alpha1 in group management. \n\n Resource representing AWS dataplane",
        "type" : "object",
        "x-axway-group" : "management",
        "x-axway-version" : "v1alpha1",
        "x-axway-kind" : "AWSDataplane",
        "x-axway-plural" : "awsdataplanes",
        "x-axway-scoped" : true,
        "x-axway-scopes" : [ {
          "kind" : "Environment",
          "plural" : "environments"
        } ],
        "x-axway-references" : {
          "fromResources" : [ {
            "group" : "management",
            "kind" : "AWSDiscoveryAgent",
            "plural" : "awsdiscoveryagents",
            "versions" : [ "v1alpha1" ],
            "types" : [ "HARD" ]
          }, {
            "group" : "management",
            "kind" : "AWSTraceabilityAgent",
            "plural" : "awstraceabilityagents",
            "versions" : [ "v1alpha1" ],
            "types" : [ "HARD" ]
          } ],
          "toResources" : [ ]
        },
        "properties" : {
          "group" : {
            "type" : "string",
            "maxLength" : 80,
            "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
            "readOnly" : true,
            "description" : "Resource belongs to the management group. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "management"
          },
          "apiVersion" : {
            "type" : "string",
            "maxLength" : 20,
            "readOnly" : true,
            "description" : "Resource version is v1alpha1. The version defines the structure of the resource. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "v1alpha1"
          },
          "kind" : {
            "type" : "string",
            "maxLength" : 30,
            "readOnly" : true,
            "description" : "Resource of kind AWSDataplane. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "AWSDataplane"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 100,
            "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
            "description" : "Name of the AWSDataplane. AWSDataplane name is unique and cannot be updated. The characters allowed in names are: digits (0-9), lower case letters (a-z), -, and ."
          },
          "title" : {
            "type" : "string",
            "maxLength" : 350,
            "description" : "The friendly name of the AWSDataplane."
          },
          "metadata" : {
            "$ref" : "#/components/schemas/api.v1.Metadata"
          },
          "finalizers" : {
            "type" : "array",
            "description" : "List of finalizers",
            "items" : {
              "$ref" : "#/components/schemas/api.v1.Finalizer"
            }
          },
          "attributes" : {
            "$ref" : "#/components/schemas/api.v1.Attributes"
          },
          "tags" : {
            "type" : "array",
            "description" : "List of tags.",
            "items" : {
              "type" : "string",
              "minLength" : 1,
              "maxLength" : 80
            }
          },
          "spec" : {
            "$ref" : "#/components/schemas/management.v1alpha1.AWSDataplaneSpec"
          }
        },
        "required" : [ "name", "spec" ]
      },
      "management.v1alpha1.AWSDataplaneSpec" : {
        "type" : "object",
        "properties" : {
          "region" : {
            "type" : "string",
            "description" : "AWS region"
          },
          "resourceChangeEventQueue" : {
            "type" : "string",
            "description" : "Name of the queue to receive the AWS resource change events"
          },
          "transactionEventQueue" : {
            "type" : "string",
            "description" : "Name of the queue to receive the transaction events"
          },
          "transactionLogGroup" : {
            "type" : "string",
            "description" : "The name of AWS log group to be used for traceability"
          }
        },
        "required" : [ "region", "resourceChangeEventQueue", "transactionEventQueue" ],
        "additionalProperties" : false
      },
      "management.v1alpha1.AWSDiscoveryAgent" : {
        "description" : "Definition of AWSDiscoveryAgent for version v1alpha1 in group management. \n\n Resource representing AWS discovery agent",
        "type" : "object",
        "x-axway-group" : "management",
        "x-axway-version" : "v1alpha1",
        "x-axway-kind" : "AWSDiscoveryAgent",
        "x-axway-plural" : "awsdiscoveryagents",
        "x-axway-scoped" : true,
        "x-axway-subresources" : [ "status" ],
        "x-axway-scopes" : [ {
          "kind" : "Environment",
          "plural" : "environments"
        } ],
        "x-axway-references" : {
          "fromResources" : [ ],
          "toResources" : [ {
            "group" : "management",
            "kind" : "AWSDataplane",
            "plural" : "awsdataplanes",
            "versions" : [ "v1alpha1" ],
            "types" : [ "HARD" ]
          } ]
        },
        "properties" : {
          "group" : {
            "type" : "string",
            "maxLength" : 80,
            "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
            "readOnly" : true,
            "description" : "Resource belongs to the management group. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "management"
          },
          "apiVersion" : {
            "type" : "string",
            "maxLength" : 20,
            "readOnly" : true,
            "description" : "Resource version is v1alpha1. The version defines the structure of the resource. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "v1alpha1"
          },
          "kind" : {
            "type" : "string",
            "maxLength" : 30,
            "readOnly" : true,
            "description" : "Resource of kind AWSDiscoveryAgent. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "AWSDiscoveryAgent"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 100,
            "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
            "description" : "Name of the AWSDiscoveryAgent. AWSDiscoveryAgent name is unique and cannot be updated. The characters allowed in names are: digits (0-9), lower case letters (a-z), -, and ."
          },
          "title" : {
            "type" : "string",
            "maxLength" : 350,
            "description" : "The friendly name of the AWSDiscoveryAgent."
          },
          "metadata" : {
            "$ref" : "#/components/schemas/api.v1.Metadata"
          },
          "finalizers" : {
            "type" : "array",
            "description" : "List of finalizers",
            "items" : {
              "$ref" : "#/components/schemas/api.v1.Finalizer"
            }
          },
          "attributes" : {
            "$ref" : "#/components/schemas/api.v1.Attributes"
          },
          "tags" : {
            "type" : "array",
            "description" : "List of tags.",
            "items" : {
              "type" : "string",
              "minLength" : 1,
              "maxLength" : 80
            }
          },
          "spec" : {
            "$ref" : "#/components/schemas/management.v1alpha1.AWSDiscoveryAgentSpec"
          },
          "status" : {
            "$ref" : "#/components/schemas/management.v1alpha1.AWSDiscoveryAgentStatus"
          }
        },
        "required" : [ "name", "spec" ]
      },
      "management.v1alpha1.AWSDiscoveryAgentSpec" : {
        "type" : "object",
        "properties" : {
          "dataplane" : {
            "type" : "string",
            "description" : "The name of the AWS dataplane associated to this agent",
            "x-amplify-kind-ref" : "AWSDataplane"
          },
          "config" : {
            "type" : "object",
            "description" : "Represents the AWS discovery agent config",
            "properties" : {
              "filter" : {
                "type" : "string",
                "description" : "Defines the tag based filter expression to be evaluated for discovering the API from AWS API Gateway The filter value is a conditional expression that can use logical operators to compare two value. The conditional expression must have \"tag\" as the prefix/selector in the symbol name. For e.g.\n``` tag.SOME_TAG == \"somevalue\" ```\nThe expression can be a simple condition as shown above or compound condition in which more than one simple conditions are evaluated using logical operator.\nFor e.g.\n``` tag.SOME_TAG == \"somevalue\" || tag.ANOTHER_TAG != \"some_other_value\" ```\nIn addition to logical expression, the filter can hold call based expressions. Below are the list of supported call expressions\n#### Exists\nExists call can be made to evaluate if the tag name exists in the list of tags on API. This call expression can be used as unary expression For e.g.\n``` tag.SOME_TAG.Exists() ```\n#### Any\nAny call can be made in a simple expression to evaluate if the tag with any name has specified value or not in the list of tags on the API. For e.g.\n``` tag.Any() == \"Tag with some value\" || tag.Any() != \"Tag with other value\" ```\n#### Contains\nContains call can be made in a simple expression to evaluate if the the specified tag contains specified argument as value. This call expression requires string argument that will be used to perform lookup in tag value For e.g.\n``` tag.Contains(\"somevalue\") ```\n#### MatchRegEx\nMatchRegEx call can be used for evaluating the specified tag value to match specified regular expression. This call expression requires a regular expression as the argument. For e.g.\n``` tag.MatchRegEx(\"(some){1}\") ```\n"
              },
              "additionalTags" : {
                "type" : "array",
                "description" : "The list of tags to be added to the API service resource that the agent publishes to Amplify Central",
                "items" : {
                  "type" : "string"
                }
              },
              "ignoreTags" : {
                "type" : "array",
                "description" : "The list of tags to exclude from the API service resource that the agent publishes to Amplify Central",
                "items" : {
                  "type" : "string"
                }
              },
              "owningTeam" : {
                "type" : "string",
                "description" : "Name of the team that owns the catalog item created by agent. If not provided, the default team will be used."
              }
            }
          },
          "logging" : {
            "type" : "object",
            "description" : "Logging config",
            "properties" : {
              "level" : {
                "type" : "string",
                "description" : "Defines the log level.",
                "enum" : [ "error", "warn", "info", "debug" ]
              }
            }
          }
        },
        "required" : [ "dataplane", "config" ],
        "additionalProperties" : false
      },
      "management.v1alpha1.AWSDiscoveryAgentStatus" : {
        "type" : "object",
        "properties" : {
          "version" : {
            "type" : "string",
            "description" : "Version name for the agent revision.",
            "maxLength" : 255,
            "pattern" : "^(?!\\s).*(?<!\\s)$"
          },
          "state" : {
            "type" : "string",
            "description" : "Agent status:\n * running - Passed all health checks.  Up and running\n * stopped - Agent is not running\n * failed - Failed health checks\n",
            "enum" : [ "running", "stopped", "failed" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A way to communicate details about the current status by the agent"
          }
        }
      },
      "management.v1alpha1.AWSTraceabilityAgent" : {
        "description" : "Definition of AWSTraceabilityAgent for version v1alpha1 in group management. \n\n Resource representing AWS traceability agent",
        "type" : "object",
        "x-axway-group" : "management",
        "x-axway-version" : "v1alpha1",
        "x-axway-kind" : "AWSTraceabilityAgent",
        "x-axway-plural" : "awstraceabilityagents",
        "x-axway-scoped" : true,
        "x-axway-subresources" : [ "status" ],
        "x-axway-scopes" : [ {
          "kind" : "Environment",
          "plural" : "environments"
        } ],
        "x-axway-references" : {
          "fromResources" : [ ],
          "toResources" : [ {
            "group" : "management",
            "kind" : "AWSDataplane",
            "plural" : "awsdataplanes",
            "versions" : [ "v1alpha1" ],
            "types" : [ "HARD" ]
          } ]
        },
        "properties" : {
          "group" : {
            "type" : "string",
            "maxLength" : 80,
            "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
            "readOnly" : true,
            "description" : "Resource belongs to the management group. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "management"
          },
          "apiVersion" : {
            "type" : "string",
            "maxLength" : 20,
            "readOnly" : true,
            "description" : "Resource version is v1alpha1. The version defines the structure of the resource. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "v1alpha1"
          },
          "kind" : {
            "type" : "string",
            "maxLength" : 30,
            "readOnly" : true,
            "description" : "Resource of kind AWSTraceabilityAgent. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "AWSTraceabilityAgent"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 100,
            "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
            "description" : "Name of the AWSTraceabilityAgent. AWSTraceabilityAgent name is unique and cannot be updated. The characters allowed in names are: digits (0-9), lower case letters (a-z), -, and ."
          },
          "title" : {
            "type" : "string",
            "maxLength" : 350,
            "description" : "The friendly name of the AWSTraceabilityAgent."
          },
          "metadata" : {
            "$ref" : "#/components/schemas/api.v1.Metadata"
          },
          "finalizers" : {
            "type" : "array",
            "description" : "List of finalizers",
            "items" : {
              "$ref" : "#/components/schemas/api.v1.Finalizer"
            }
          },
          "attributes" : {
            "$ref" : "#/components/schemas/api.v1.Attributes"
          },
          "tags" : {
            "type" : "array",
            "description" : "List of tags.",
            "items" : {
              "type" : "string",
              "minLength" : 1,
              "maxLength" : 80
            }
          },
          "spec" : {
            "$ref" : "#/components/schemas/management.v1alpha1.AWSTraceabilityAgentSpec"
          },
          "status" : {
            "$ref" : "#/components/schemas/management.v1alpha1.AWSTraceabilityAgentStatus"
          }
        },
        "required" : [ "name", "spec" ]
      },
      "management.v1alpha1.AWSTraceabilityAgentSpec" : {
        "type" : "object",
        "properties" : {
          "dataplane" : {
            "type" : "string",
            "description" : "The name of the AWS dataplane associated to this agent",
            "x-amplify-kind-ref" : "AWSDataplane"
          },
          "config" : {
            "type" : "object",
            "description" : "Represents the AWS traceability agent config",
            "properties" : {
              "processHeaders" : {
                "type" : "boolean",
                "description" : "Configures the agent to include request and response headers in captured traffic. Defaults to true"
              },
              "excludeHeaders" : {
                "type" : "array",
                "description" : "List of header names that will not be included in the captured traffic by the agent",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "logging" : {
            "type" : "object",
            "description" : "Logging config",
            "properties" : {
              "level" : {
                "type" : "string",
                "description" : "Defines the log level.",
                "enum" : [ "error", "warn", "info", "debug" ]
              }
            }
          }
        },
        "required" : [ "dataplane", "config" ],
        "additionalProperties" : false
      },
      "management.v1alpha1.AWSTraceabilityAgentStatus" : {
        "type" : "object",
        "properties" : {
          "version" : {
            "type" : "string",
            "description" : "Version name for the agent revision.",
            "maxLength" : 255,
            "pattern" : "^(?!\\s).*(?<!\\s)$"
          },
          "state" : {
            "type" : "string",
            "description" : "Agent status:\n * running - Passed all health checks.  Up and running\n * stopped - Agent is not running\n * failed - Failed health checks\n",
            "enum" : [ "running", "stopped", "failed" ]
          },
          "message" : {
            "type" : "string",
            "description" : "A way to communicate details about the current status by the agent"
          }
        }
      },
      "definitions.v1alpha1.ResourceGroup" : {
        "description" : "Definition of ResourceGroup for version v1alpha1 in group definitions. \n\n Resource representing an API Server resource group.",
        "type" : "object",
        "x-axway-group" : "definitions",
        "x-axway-version" : "v1alpha1",
        "x-axway-kind" : "ResourceGroup",
        "x-axway-plural" : "groups",
        "x-axway-scoped" : false,
        "x-axway-references" : {
          "fromResources" : [ ],
          "toResources" : [ ]
        },
        "properties" : {
          "group" : {
            "type" : "string",
            "maxLength" : 80,
            "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
            "readOnly" : true,
            "description" : "Resource belongs to the definitions group. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "definitions"
          },
          "apiVersion" : {
            "type" : "string",
            "maxLength" : 20,
            "readOnly" : true,
            "description" : "Resource version is v1alpha1. The version defines the structure of the resource. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "v1alpha1"
          },
          "kind" : {
            "type" : "string",
            "maxLength" : 30,
            "readOnly" : true,
            "description" : "Resource of kind ResourceGroup. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "ResourceGroup"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 100,
            "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
            "description" : "Name of the ResourceGroup. ResourceGroup name is unique and cannot be updated. The characters allowed in names are: digits (0-9), lower case letters (a-z), -, and ."
          },
          "title" : {
            "type" : "string",
            "maxLength" : 350,
            "description" : "The friendly name of the ResourceGroup."
          },
          "metadata" : {
            "$ref" : "#/components/schemas/api.v1.Metadata"
          },
          "finalizers" : {
            "type" : "array",
            "description" : "List of finalizers",
            "items" : {
              "$ref" : "#/components/schemas/api.v1.Finalizer"
            }
          },
          "attributes" : {
            "$ref" : "#/components/schemas/api.v1.Attributes"
          },
          "tags" : {
            "type" : "array",
            "description" : "List of tags.",
            "items" : {
              "type" : "string",
              "minLength" : 1,
              "maxLength" : 80
            }
          },
          "spec" : {
            "$ref" : "#/components/schemas/definitions.v1alpha1.ResourceGroupSpec"
          }
        },
        "required" : [ "name", "spec" ]
      },
      "definitions.v1alpha1.ResourceGroupSpec" : {
        "type" : "object",
        "additionalProperties" : false
      },
      "definitions.v1alpha1.ResourceDefinition" : {
        "description" : "Definition of ResourceDefinition for version v1alpha1 in group definitions. \n\n Resource representing the definition of an API Server resource in a group.",
        "type" : "object",
        "x-axway-group" : "definitions",
        "x-axway-version" : "v1alpha1",
        "x-axway-kind" : "ResourceDefinition",
        "x-axway-plural" : "resources",
        "x-axway-scoped" : true,
        "x-axway-scopes" : [ {
          "kind" : "ResourceGroup",
          "plural" : "groups"
        } ],
        "x-axway-references" : {
          "fromResources" : [ {
            "group" : "definitions",
            "kind" : "CommandLineInterface",
            "plural" : "commandlines",
            "versions" : [ "v1alpha1" ],
            "types" : [ "HARD" ]
          }, {
            "group" : "definitions",
            "kind" : "ResourceDefinitionVersion",
            "plural" : "resourceversions",
            "versions" : [ "v1alpha1" ],
            "types" : [ "HARD" ]
          } ],
          "toResources" : [ ]
        },
        "properties" : {
          "group" : {
            "type" : "string",
            "maxLength" : 80,
            "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
            "readOnly" : true,
            "description" : "Resource belongs to the definitions group. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "definitions"
          },
          "apiVersion" : {
            "type" : "string",
            "maxLength" : 20,
            "readOnly" : true,
            "description" : "Resource version is v1alpha1. The version defines the structure of the resource. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "v1alpha1"
          },
          "kind" : {
            "type" : "string",
            "maxLength" : 30,
            "readOnly" : true,
            "description" : "Resource of kind ResourceDefinition. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "ResourceDefinition"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 100,
            "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
            "description" : "Name of the ResourceDefinition. ResourceDefinition name is unique and cannot be updated. The characters allowed in names are: digits (0-9), lower case letters (a-z), -, and ."
          },
          "title" : {
            "type" : "string",
            "maxLength" : 350,
            "description" : "The friendly name of the ResourceDefinition."
          },
          "metadata" : {
            "$ref" : "#/components/schemas/api.v1.Metadata"
          },
          "finalizers" : {
            "type" : "array",
            "description" : "List of finalizers",
            "items" : {
              "$ref" : "#/components/schemas/api.v1.Finalizer"
            }
          },
          "attributes" : {
            "$ref" : "#/components/schemas/api.v1.Attributes"
          },
          "tags" : {
            "type" : "array",
            "description" : "List of tags.",
            "items" : {
              "type" : "string",
              "minLength" : 1,
              "maxLength" : 80
            }
          },
          "spec" : {
            "$ref" : "#/components/schemas/definitions.v1alpha1.ResourceDefinitionSpec"
          }
        },
        "required" : [ "name", "spec" ]
      },
      "definitions.v1alpha1.ResourceDefinitionSpec" : {
        "type" : "object",
        "properties" : {
          "plural" : {
            "type" : "string",
            "description" : "Value used in the endpoint path for accessing the resource."
          },
          "kind" : {
            "type" : "string",
            "maxLength" : 30,
            "description" : "Defines the kind of the resource. The server infers this from the endpoint the client submits the request to."
          },
          "scope" : {
            "type" : "object",
            "properties" : {
              "kind" : {
                "type" : "string",
                "maxLength" : 30,
                "description" : "Defines the kind of the scope. The server infers this from the endpoint the client submits the request to."
              }
            },
            "additionalProperties" : false
          },
          "references" : {
            "type" : "object",
            "properties" : {
              "toResources" : {
                "type" : "array",
                "description" : "A list of resources that the current resources has references to.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "kind" : {
                      "type" : "string",
                      "maxLength" : 30,
                      "description" : "Defines the kind of the resource."
                    },
                    "types" : {
                      "type" : "array",
                      "description" : "The type of the reference.",
                      "items" : {
                        "type" : "string",
                        "enum" : [ "hard", "soft" ]
                      }
                    }
                  },
                  "additionalProperties" : false
                }
              },
              "fromResources" : {
                "type" : "array",
                "description" : "A list of resources that the current resources is beging referenced from.",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "kind" : {
                      "type" : "string",
                      "maxLength" : 30,
                      "description" : "Defines the kind of the resource."
                    },
                    "types" : {
                      "type" : "array",
                      "description" : "The type of the reference.",
                      "items" : {
                        "type" : "string",
                        "enum" : [ "hard", "soft" ]
                      }
                    }
                  },
                  "additionalProperties" : false
                }
              }
            },
            "additionalProperties" : false
          }
        },
        "additionalProperties" : false,
        "required" : [ "plural", "kind" ]
      },
      "definitions.v1alpha1.ResourceDefinitionVersion" : {
        "description" : "Definition of ResourceDefinitionVersion for version v1alpha1 in group definitions. \n\n Resource representing the structure of a version for the referenced API Server Resource in a group.",
        "type" : "object",
        "x-axway-group" : "definitions",
        "x-axway-version" : "v1alpha1",
        "x-axway-kind" : "ResourceDefinitionVersion",
        "x-axway-plural" : "resourceversions",
        "x-axway-scoped" : true,
        "x-axway-scopes" : [ {
          "kind" : "ResourceGroup",
          "plural" : "groups"
        } ],
        "x-axway-references" : {
          "fromResources" : [ ],
          "toResources" : [ {
            "group" : "definitions",
            "kind" : "ResourceDefinition",
            "plural" : "resources",
            "versions" : [ "v1alpha1" ],
            "types" : [ "HARD" ]
          } ]
        },
        "properties" : {
          "group" : {
            "type" : "string",
            "maxLength" : 80,
            "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
            "readOnly" : true,
            "description" : "Resource belongs to the definitions group. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "definitions"
          },
          "apiVersion" : {
            "type" : "string",
            "maxLength" : 20,
            "readOnly" : true,
            "description" : "Resource version is v1alpha1. The version defines the structure of the resource. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "v1alpha1"
          },
          "kind" : {
            "type" : "string",
            "maxLength" : 30,
            "readOnly" : true,
            "description" : "Resource of kind ResourceDefinitionVersion. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "ResourceDefinitionVersion"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 100,
            "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
            "description" : "Name of the ResourceDefinitionVersion. ResourceDefinitionVersion name is unique and cannot be updated. The characters allowed in names are: digits (0-9), lower case letters (a-z), -, and ."
          },
          "title" : {
            "type" : "string",
            "maxLength" : 350,
            "description" : "The friendly name of the ResourceDefinitionVersion."
          },
          "metadata" : {
            "$ref" : "#/components/schemas/api.v1.Metadata"
          },
          "finalizers" : {
            "type" : "array",
            "description" : "List of finalizers",
            "items" : {
              "$ref" : "#/components/schemas/api.v1.Finalizer"
            }
          },
          "attributes" : {
            "$ref" : "#/components/schemas/api.v1.Attributes"
          },
          "tags" : {
            "type" : "array",
            "description" : "List of tags.",
            "items" : {
              "type" : "string",
              "minLength" : 1,
              "maxLength" : 80
            }
          },
          "spec" : {
            "$ref" : "#/components/schemas/definitions.v1alpha1.ResourceDefinitionVersionSpec"
          }
        },
        "required" : [ "name", "spec" ]
      },
      "definitions.v1alpha1.ResourceDefinitionVersionSpec" : {
        "type" : "object",
        "properties" : {
          "resourceDefinition" : {
            "type" : "string",
            "x-amplify-kind-ref" : "ResourceDefinition",
            "x-amplify-kind-ref-type" : "hard",
            "description" : "A reference to a resource definition."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the version to be used in the resource definition."
          },
          "served" : {
            "type" : "boolean",
            "description" : "Defines if this version is currently served by the server."
          },
          "storage" : {
            "type" : "boolean",
            "description" : "Defines if this version is used when storing the resource instance details."
          },
          "spec" : {
            "type" : "object",
            "description" : "Defines the strucure of the spec for this resource version."
          }
        },
        "additionalProperties" : true,
        "required" : [ "resourceDefinition", "name", "served", "storage" ]
      },
      "definitions.v1alpha1.CommandLineInterface" : {
        "description" : "Definition of CommandLineInterface for version v1alpha1 in group definitions. \n\n Resource representing the command line properties for a resource definition in the group.",
        "type" : "object",
        "x-axway-group" : "definitions",
        "x-axway-version" : "v1alpha1",
        "x-axway-kind" : "CommandLineInterface",
        "x-axway-plural" : "commandlines",
        "x-axway-scoped" : true,
        "x-axway-scopes" : [ {
          "kind" : "ResourceGroup",
          "plural" : "groups"
        } ],
        "x-axway-references" : {
          "fromResources" : [ ],
          "toResources" : [ {
            "group" : "definitions",
            "kind" : "ResourceDefinition",
            "plural" : "resources",
            "versions" : [ "v1alpha1" ],
            "types" : [ "HARD" ]
          } ]
        },
        "properties" : {
          "group" : {
            "type" : "string",
            "maxLength" : 80,
            "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
            "readOnly" : true,
            "description" : "Resource belongs to the definitions group. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "definitions"
          },
          "apiVersion" : {
            "type" : "string",
            "maxLength" : 20,
            "readOnly" : true,
            "description" : "Resource version is v1alpha1. The version defines the structure of the resource. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "v1alpha1"
          },
          "kind" : {
            "type" : "string",
            "maxLength" : 30,
            "readOnly" : true,
            "description" : "Resource of kind CommandLineInterface. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "CommandLineInterface"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 100,
            "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
            "description" : "Name of the CommandLineInterface. CommandLineInterface name is unique and cannot be updated. The characters allowed in names are: digits (0-9), lower case letters (a-z), -, and ."
          },
          "title" : {
            "type" : "string",
            "maxLength" : 350,
            "description" : "The friendly name of the CommandLineInterface."
          },
          "metadata" : {
            "$ref" : "#/components/schemas/api.v1.Metadata"
          },
          "finalizers" : {
            "type" : "array",
            "description" : "List of finalizers",
            "items" : {
              "$ref" : "#/components/schemas/api.v1.Finalizer"
            }
          },
          "attributes" : {
            "$ref" : "#/components/schemas/api.v1.Attributes"
          },
          "tags" : {
            "type" : "array",
            "description" : "List of tags.",
            "items" : {
              "type" : "string",
              "minLength" : 1,
              "maxLength" : 80
            }
          },
          "spec" : {
            "$ref" : "#/components/schemas/definitions.v1alpha1.CommandLineInterfaceSpec"
          }
        },
        "required" : [ "name", "spec" ]
      },
      "definitions.v1alpha1.CommandLineInterfaceSpec" : {
        "type" : "object",
        "properties" : {
          "resourceDefinition" : {
            "type" : "string",
            "x-amplify-kind-ref" : "ResourceDefinition",
            "x-amplify-kind-ref-type" : "hard",
            "description" : "A reference to a resource definition."
          },
          "names" : {
            "type" : "object",
            "properties" : {
              "plural" : {
                "type" : "string",
                "description" : "Defines the name used to access resources in this group. Also provided as default in the autocomplete for listing commands."
              },
              "singular" : {
                "type" : "string",
                "description" : "Defines the name used to access a resource in this group. Also provided as default in the autocomplete for single resource access commands."
              },
              "shortNames" : {
                "type" : "array",
                "description" : "Defines the short names that the cli can use to fetch a resource in the group.",
                "items" : {
                  "type" : "string"
                }
              },
              "shortNamesAlias" : {
                "type" : "array",
                "description" : "Defines the short names alias that the cli can use to fetch a resource in the group.",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "additionalProperties" : false,
            "required" : [ "plural", "singular", "shortNames" ]
          },
          "columns" : {
            "type" : "array",
            "description" : "Defines an ordered list of the columns and data to be rendered using a table output.",
            "items" : {
              "type" : "object",
              "properties" : {
                "name" : {
                  "type" : "string",
                  "description" : "The name of the column for the resource."
                },
                "type" : {
                  "type" : "string",
                  "description" : "The type of the column.",
                  "enum" : [ "string", "date" ]
                },
                "jsonPath" : {
                  "type" : "string",
                  "description" : "The JSONPath used to fetch data for the column starting from the root."
                },
                "description" : {
                  "type" : "string",
                  "description" : "The description of the column data."
                }
              },
              "additionalProperties" : false,
              "required" : [ "name", "type", "jsonPath" ]
            }
          }
        },
        "additionalProperties" : false,
        "required" : [ "columns", "resourceDefinition" ]
      },
      "management.v1alpha1.Webhook" : {
        "description" : "Definition of Webhook for version v1alpha1 in group management. \n\n Resource representing Webhook Configuration",
        "type" : "object",
        "x-axway-group" : "management",
        "x-axway-version" : "v1alpha1",
        "x-axway-kind" : "Webhook",
        "x-axway-plural" : "webhooks",
        "x-axway-scoped" : true,
        "x-axway-scopes" : [ {
          "kind" : "Environment",
          "plural" : "environments"
        }, {
          "kind" : "Integration",
          "plural" : "integrations"
        } ],
        "x-axway-references" : {
          "fromResources" : [ {
            "group" : "management",
            "kind" : "ResourceHook",
            "plural" : "resourcehooks",
            "versions" : [ "v1alpha1" ],
            "types" : [ "SOFT" ]
          }, {
            "group" : "management",
            "kind" : "ConsumerSubscriptionDefinition",
            "plural" : "consumersubscriptiondefs",
            "versions" : [ "v1alpha1" ],
            "types" : [ "SOFT" ]
          } ],
          "toResources" : [ {
            "group" : "management",
            "kind" : "Secret",
            "plural" : "secrets",
            "versions" : [ "v1alpha1" ],
            "types" : [ "SOFT" ]
          } ]
        },
        "properties" : {
          "group" : {
            "type" : "string",
            "maxLength" : 80,
            "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
            "readOnly" : true,
            "description" : "Resource belongs to the management group. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "management"
          },
          "apiVersion" : {
            "type" : "string",
            "maxLength" : 20,
            "readOnly" : true,
            "description" : "Resource version is v1alpha1. The version defines the structure of the resource. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "v1alpha1"
          },
          "kind" : {
            "type" : "string",
            "maxLength" : 30,
            "readOnly" : true,
            "description" : "Resource of kind Webhook. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "Webhook"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 100,
            "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
            "description" : "Name of the Webhook. Webhook name is unique and cannot be updated. The characters allowed in names are: digits (0-9), lower case letters (a-z), -, and ."
          },
          "title" : {
            "type" : "string",
            "maxLength" : 350,
            "description" : "The friendly name of the Webhook."
          },
          "metadata" : {
            "$ref" : "#/components/schemas/api.v1.Metadata"
          },
          "finalizers" : {
            "type" : "array",
            "description" : "List of finalizers",
            "items" : {
              "$ref" : "#/components/schemas/api.v1.Finalizer"
            }
          },
          "attributes" : {
            "$ref" : "#/components/schemas/api.v1.Attributes"
          },
          "tags" : {
            "type" : "array",
            "description" : "List of tags.",
            "items" : {
              "type" : "string",
              "minLength" : 1,
              "maxLength" : 80
            }
          },
          "spec" : {
            "$ref" : "#/components/schemas/management.v1alpha1.WebhookSpec"
          }
        },
        "required" : [ "name", "spec" ]
      },
      "management.v1alpha1.WebhookSpec" : {
        "type" : "object",
        "properties" : {
          "auth" : {
            "type" : "object",
            "description" : "Defines the authentication used to invoke the webhook. When invoking the webhook, the value from the secret/key will be sent in the Authorization header.\n",
            "properties" : {
              "secret" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "x-amplify-kind-ref" : "Secret",
                    "x-amplify-kind-ref-type" : "soft",
                    "description" : "Secret name to be used as a reference. If the secret is removed, the reference gets removed and the webhook invocation will be done with no Authorization header.\n"
                  },
                  "key" : {
                    "description" : "Key to be used from the referenced secret.",
                    "type" : "string"
                  }
                },
                "additionalProperties" : false
              }
            },
            "additionalProperties" : false
          },
          "enabled" : {
            "type" : "boolean"
          },
          "url" : {
            "type" : "string",
            "pattern" : "^https?://[\\w-_\\:\\.\\?\\/=%&#~\\[\\]\\(\\)@!$&',;]*$"
          },
          "headers" : {
            "type" : "object",
            "description" : "A list of headers that will be sent as par of the http call to the webhook endpoint.",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        },
        "required" : [ "url" ],
        "additionalProperties" : false
      },
      "management.v1alpha1.Secret" : {
        "description" : "Definition of Secret for version v1alpha1 in group management. \n\n Secrets definitions.",
        "type" : "object",
        "x-axway-group" : "management",
        "x-axway-version" : "v1alpha1",
        "x-axway-kind" : "Secret",
        "x-axway-plural" : "secrets",
        "x-axway-scoped" : true,
        "x-axway-scopes" : [ {
          "kind" : "Environment",
          "plural" : "environments"
        }, {
          "kind" : "Integration",
          "plural" : "integrations"
        } ],
        "x-axway-references" : {
          "fromResources" : [ {
            "group" : "management",
            "kind" : "Webhook",
            "plural" : "webhooks",
            "versions" : [ "v1alpha1" ],
            "types" : [ "SOFT" ]
          } ],
          "toResources" : [ ]
        },
        "properties" : {
          "group" : {
            "type" : "string",
            "maxLength" : 80,
            "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
            "readOnly" : true,
            "description" : "Resource belongs to the management group. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "management"
          },
          "apiVersion" : {
            "type" : "string",
            "maxLength" : 20,
            "readOnly" : true,
            "description" : "Resource version is v1alpha1. The version defines the structure of the resource. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "v1alpha1"
          },
          "kind" : {
            "type" : "string",
            "maxLength" : 30,
            "readOnly" : true,
            "description" : "Resource of kind Secret. Cannot be updated. The server infers this from the endpoint the client submits the request to.",
            "default" : "Secret"
          },
          "name" : {
            "type" : "string",
            "maxLength" : 100,
            "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*",
            "description" : "Name of the Secret. Secret name is unique and cannot be updated. The characters allowed in names are: digits (0-9), lower case letters (a-z), -, and ."
          },
          "title" : {
            "type" : "string",
            "maxLength" : 350,
            "description" : "The friendly name of the Secret."
          },
          "metadata" : {
            "$ref" : "#/components/schemas/api.v1.Metadata"
          },
          "finalizers" : {
            "type" : "array",
            "description" : "List of finalizers",
            "items" : {
              "$ref" : "#/components/schemas/api.v1.Finalizer"
            }
          },
          "attributes" : {
            "$ref" : "#/components/schemas/api.v1.Attributes"
          },
          "tags" : {
            "type" : "array",
            "description" : "List of tags.",
            "items" : {
              "type" : "string",
              "minLength" : 1,
              "maxLength" : 80
            }
          },
          "spec" : {
            "$ref" : "#/components/schemas/management.v1alpha1.SecretSpec"
          }
        },
        "required" : [ "name", "spec" ]
      },
      "management.v1alpha1.SecretSpec" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "description" : "Key value pairs. The value will be stored encrypted.",
            "x-amplify-encrypted" : true,
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        },
        "additionalProperties" : false
      }
    }
  }
}